
orders_used: [7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:3076/10000, seq_id:A023796, order:20 took:
 70.9 seconds, i.e. 1.18 minutes or 0.02 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 7.
eqs_explicit:
[]
non_linears:
['a(n-5)*a(n-7) -a(n-7)^2 +(104/7)*n -14*a(n-5) -a(n-6) +(-13/7)*a(n-7) -75', 'a(n-5)^2 -a(n-7)^2 +(403/14)*n -46*a(n-5) -2*a(n-6) +(213/14)*a(n-7) -223/2', 'a(n-7)*a(n-8) -a(n-8)^2 -15*a(n-7) +14*a(n-8) +15', 'a(n-7)^2 -a(n-8)^2 -46*a(n-7) +44*a(n-8) +45', 'n*a(n-8) -a(n-8)^2 -30*n +22*a(n-8) +240', 'n^2 -a(n-8)^2 -62*n +46*a(n-8) +432', 'n*a(n-7) -a(n-8)^2 -31*n -23*a(n-7) +45*a(n-8) +263', 'a(n-6)*a(n-8) -a(n-8)^2 +(104/7)*n -14*a(n-6) -a(n-7) +(-13/7)*a(n-8) -629/7', 'a(n-6)*a(n-7) -a(n-8)^2 +(104/7)*n -15*a(n-6) -32*a(n-7) +(204/7)*a(n-8) -412/7', 'n*a(n-6) -a(n-8)^2 +(-211/7)*n -22*a(n-6) -a(n-7) +(302/7)*a(n-8) +1891/7', 'a(n-6)^2 -a(n-8)^2 +(403/14)*n -46*a(n-6) -2*a(n-7) +(213/14)*a(n-8) -982/7', 'a(n-5)*a(n-8) -a(n-8)^2 +(104/7)*n -13*a(n-5) -a(n-6) +(-20/7)*a(n-7) -a(n-8) -75', 'n -a(n-9) -9', 'a(n-8)*a(n-9) -a(n-9)^2 -15*a(n-8) +14*a(n-9) +15', 'a(n-8)^2 -a(n-9)^2 -46*a(n-8) +44*a(n-9) +45', 'a(n-7)*a(n-9) -a(n-9)^2 -14*a(n-7) -a(n-8) +13*a(n-9) +29', 'a(n-7)^2 -a(n-9)^2 -46*a(n-7) -2*a(n-8) +44*a(n-9) +90', 'a(n-7)*a(n-8) -a(n-9)^2 -15*a(n-7) -32*a(n-8) +44*a(n-9) +60', 'a(n-6)*a(n-9) -a(n-9)^2 -13*a(n-6) -a(n-7) +(-20/7)*a(n-8) +(97/7)*a(n-9) +307/7', 'a(n-6)*a(n-8) -a(n-9)^2 -14*a(n-6) -a(n-7) +(-335/7)*a(n-8) +(412/7)*a(n-9) +622/7', 'a(n-6)*a(n-7) -a(n-9)^2 -15*a(n-6) -32*a(n-7) +(-118/7)*a(n-8) +(412/7)*a(n-9) +839/7', 'a(n-5)*a(n-9) -a(n-9)^2 -12*a(n-5) -a(n-6) +(-20/7)*a(n-7) -a(n-8) +(90/7)*a(n-9) +404/7', 'a(n-9) -a(n-10) -1', 'n -a(n-10) -10', 'a(n-8)*a(n-10) -a(n-10)^2 -14*a(n-8) +12*a(n-10) +28', 'a(n-8)^2 -a(n-10)^2 -46*a(n-8) +42*a(n-10) +88', 'a(n-7)*a(n-10) -a(n-10)^2 -13*a(n-7) -a(n-8) +11*a(n-10) +41', 'a(n-7)^2 -a(n-10)^2 -46*a(n-7) -2*a(n-8) +42*a(n-10) +133', 'a(n-7)*a(n-8) -a(n-10)^2 -15*a(n-7) -32*a(n-8) +42*a(n-10) +103', 'a(n-6)*a(n-10) -a(n-10)^2 -12*a(n-6) -a(n-7) +(-20/7)*a(n-8) +(83/7)*a(n-10) +397/7', 'a(n-6)*a(n-8) -a(n-10)^2 -14*a(n-6) -a(n-7) +(-335/7)*a(n-8) +(398/7)*a(n-10) +1027/7', 'a(n-6)*a(n-7) -a(n-10)^2 -15*a(n-6) -32*a(n-7) +(-118/7)*a(n-8) +(398/7)*a(n-10) +1244/7', 'a(n-10) -a(n-11) -1', 'a(n-9) -a(n-11) -2', 'n -a(n-11) -11', 'a(n-8)*a(n-11) -a(n-11)^2 -13*a(n-8) +10*a(n-11) +39', 'a(n-8)^2 -a(n-11)^2 -46*a(n-8) +40*a(n-11) +129', 'a(n-7)*a(n-11) -a(n-11)^2 -12*a(n-7) -a(n-8) +9*a(n-11) +51', 'a(n-7)^2 -a(n-11)^2 -46*a(n-7) -2*a(n-8) +40*a(n-11) +174', 'a(n-7)*a(n-8) -a(n-11)^2 -15*a(n-7) -32*a(n-8) +40*a(n-11) +144', 'a(n-6)*a(n-11) -a(n-11)^2 -11*a(n-6) -a(n-7) +(-20/7)*a(n-8) +(69/7)*a(n-11) +473/7', 'a(n-6)*a(n-8) -a(n-11)^2 -14*a(n-6) -a(n-7) +(-335/7)*a(n-8) +(384/7)*a(n-11) +1418/7', 'a(n-11) -a(n-12) -1', 'a(n-10) -a(n-12) -2', 'a(n-9) -a(n-12) -3', 'n -a(n-12) -12', 'a(n-8)*a(n-12) -a(n-12)^2 -12*a(n-8) +8*a(n-12) +48', 'a(n-8)^2 -a(n-12)^2 -46*a(n-8) +38*a(n-12) +168', 'a(n-7)*a(n-12) -a(n-12)^2 -11*a(n-7) -a(n-8) +7*a(n-12) +59', 'a(n-7)^2 -a(n-12)^2 -46*a(n-7) -2*a(n-8) +38*a(n-12) +213', 'a(n-7)*a(n-8) -a(n-12)^2 -15*a(n-7) -32*a(n-8) +38*a(n-12) +183', 'a(n-6)*a(n-12) -a(n-12)^2 -10*a(n-6) -a(n-7) +(-20/7)*a(n-8) +(55/7)*a(n-12) +535/7', 'a(n-12) -a(n-13) -1', 'a(n-11) -a(n-13) -2', 'a(n-10) -a(n-13) -3', 'a(n-9) -a(n-13) -4', 'n -a(n-13) -13', 'a(n-8)*a(n-13) -a(n-13)^2 -11*a(n-8) +6*a(n-13) +55', 'a(n-8)^2 -a(n-13)^2 -46*a(n-8) +36*a(n-13) +205', 'a(n-7)*a(n-13) -a(n-13)^2 -10*a(n-7) -a(n-8) +5*a(n-13) +65', 'a(n-7)^2 -a(n-13)^2 -46*a(n-7) -2*a(n-8) +36*a(n-13) +250', 'a(n-7)*a(n-8) -a(n-13)^2 -15*a(n-7) -32*a(n-8) +36*a(n-13) +220', 'a(n-13) -a(n-14) -1', 'a(n-12) -a(n-14) -2', 'a(n-11) -a(n-14) -3', 'a(n-10) -a(n-14) -4', 'a(n-9) -a(n-14) -5', 'n -a(n-14) -14', 'a(n-14) -a(n-15) -1', 'a(n-13) -a(n-15) -2', 'a(n-12) -a(n-15) -3', 'a(n-11) -a(n-15) -4', 'a(n-10) -a(n-15) -5', 'a(n-9) -a(n-15) -6', 'n -a(n-15) -15', 'a(n-15) -a(n-16) -1', 'a(n-14) -a(n-16) -2', 'a(n-13) -a(n-16) -3', 'a(n-12) -a(n-16) -4', 'a(n-11) -a(n-16) -5', 'a(n-10) -a(n-16) -6', 'a(n-9) -a(n-16) -7', 'n -a(n-16) -16', 'a(n-16) -a(n-17) -1', 'a(n-15) -a(n-17) -2', 'a(n-14) -a(n-17) -3', 'a(n-13) -a(n-17) -4', 'a(n-12) -a(n-17) -5', 'a(n-11) -a(n-17) -6', 'a(n-10) -a(n-17) -7', 'a(n-9) -a(n-17) -8', 'n -a(n-17) -17', 'a(n-17)^2 +(-1/7)*a(n-3) +(-2/7)*a(n-4) +(-29/98)*a(n-5) +(-15/49)*a(n-6) +(-603/1372)*a(n-7) +(-309/686)*a(n-8) +(1263/1372)*a(n-17) +1033/49', 'a(n-17) -a(n-18) -1', 'a(n-16) -a(n-18) -2', 'a(n-15) -a(n-18) -3', 'a(n-14) -a(n-18) -4', 'a(n-13) -a(n-18) -5', 'a(n-12) -a(n-18) -6', 'a(n-11) -a(n-18) -7', 'a(n-10) -a(n-18) -8', 'a(n-9) -a(n-18) -9', 'n -a(n-18) -18', 'a(n-18) -a(n-19) -1', 'a(n-17) -a(n-19) -2', 'a(n-16) -a(n-19) -3', 'a(n-15) -a(n-19) -4', 'a(n-14) -a(n-19) -5', 'a(n-13) -a(n-19) -6', 'a(n-12) -a(n-19) -7', 'a(n-11) -a(n-19) -8', 'a(n-10) -a(n-19) -9', 'a(n-9) -a(n-19) -10', 'a(n-19) -a(n-20) -1', 'a(n-18) -a(n-20) -2', 'a(n-17) -a(n-20) -3', 'a(n-16) -a(n-20) -4', 'a(n-15) -a(n-20) -5', 'a(n-14) -a(n-20) -6', 'a(n-13) -a(n-20) -7', 'a(n-12) -a(n-20) -8', 'a(n-11) -a(n-20) -9', 'a(n-10) -a(n-20) -10']
A023796: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

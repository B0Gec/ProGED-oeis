
orders_used: [9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:2681/10000, seq_id:A020681, order:20 took:
 14.3 seconds, i.e. 0.24 minutes or 0.004 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 9.
eqs_explicit:
['a(n) = 1732*a(n-10)/4427 + 671*a(n-9)/4427 + 3367*a(n-8)/4427 + 1081*a(n-7)/4427 + 163841/4427']
non_linears:
['a(n-3) +(-1509/2860)*a(n-5) +(181/715)*a(n-6) +(172/715)*a(n-7) +(-553/715)*a(n-8) +(-109/572)*a(n-9) -13307/572', 'a(n-9)^2 +(2325/221)*a(n-5) +(1032/221)*a(n-6) +(-3018/221)*a(n-7) +(-264/221)*a(n-8) +(-5354/221)*a(n-9) -11637/221', 'a(n-2) +(-963/8840)*a(n-5) +(-183/2210)*a(n-6) +(-751/2210)*a(n-7) +(-241/2210)*a(n-8) +(-291/1768)*a(n-9) -54569/1768', 'a(n-5)*a(n-8) +(2883/572)*a(n-5) +(-1251/143)*a(n-6) +(-2253/143)*a(n-7) +(-3986/143)*a(n-8) +(1719/572)*a(n-9) +138213/572', 'a(n-8)*a(n-9) +(49347/3740)*a(n-5) +(377/935)*a(n-6) +(-12901/935)*a(n-7) +(-8991/935)*a(n-8) +(-13525/748)*a(n-9) -7135/748', 'a(n-1) +(577/4862)*a(n-5) +(-432/2431)*a(n-6) +(-849/2431)*a(n-7) +(-645/2431)*a(n-8) +(-2163/4862)*a(n-9) -170763/4862', 'a(n-6)*a(n-8) +(14853/935)*a(n-5) +(-17223/935)*a(n-6) +(-13726/935)*a(n-7) +(-26646/935)*a(n-8) +(642/187)*a(n-9) +39425/187', 'a(n-5)*a(n-6) +(-28829/3740)*a(n-5) +(-32774/935)*a(n-6) +(-17673/935)*a(n-7) +(-2373/935)*a(n-8) +(7479/748)*a(n-9) +419977/748', 'n +(-2829/48620)*a(n-5) +(-424/12155)*a(n-6) +(-158/12155)*a(n-7) +(-498/12155)*a(n-8) +(-417/9724)*a(n-9) -73631/9724', 'n +(59/4427)*a(n-7) +(-365/4427)*a(n-8) +(-291/4427)*a(n-9) +(-573/4427)*a(n-10) -40455/4427', 'a(n-5) +(-196/4427)*a(n-7) +(12/4427)*a(n-8) +(-609/4427)*a(n-9) +(-5900/4427)*a(n-10) -93335/4427', 'a(n-3) +(33/4427)*a(n-7) +(-2080/4427)*a(n-8) +(-688/4427)*a(n-9) +(-1446/4427)*a(n-10) -141331/4427', 'a(n-2) +(-1222/4427)*a(n-7) +(-919/4427)*a(n-8) +(-951/4427)*a(n-9) +(-1188/4427)*a(n-10) -150373/4427', 'a(n-1) +(-871/4427)*a(n-7) +(-2115/4427)*a(n-8) +(-2232/4427)*a(n-9) +(-470/4427)*a(n-10) -152063/4427', 'a(n-6) +(3668/4427)*a(n-7) +(-5284/4427)*a(n-8) +(-1884/4427)*a(n-9) +(-6585/4427)*a(n-10) -43075/4427', 'a(n) +(-1081/4427)*a(n-7) +(-3367/4427)*a(n-8) +(-671/4427)*a(n-9) +(-1732/4427)*a(n-10) -163841/4427']
A020681: 
a(n) = 1732*a(n-10)/4427 + 671*a(n-9)/4427 + 3367*a(n-8)/4427 + 1081*a(n-7)/4427 + 163841/4427
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

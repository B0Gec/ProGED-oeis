
orders_used: [1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:5309/10000, seq_id:A039241, order:20 took:
 34.7 seconds, i.e. 0.58 minutes or 0.01 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
eqs_explicit:
['a(n) = n*a(n-2)/2 - 31*n/2 + a(n-6) + 2*a(n-5) + 2*a(n-4) + 2*a(n-3) - 2*a(n-1) + 86']
non_linears:
['a(n)^2 -2*a(n)*a(n-1) +a(n-1)^2 -3*a(n) +3*a(n-1) +2', 'a(n-1)^2 -2*a(n-1)*a(n-2) +a(n-2)^2 -3*a(n-1) +3*a(n-2) +2', 'a(n)^2 -2*a(n)*a(n-2) +a(n-2)^2 -5*a(n) +5*a(n-2) +6', 'a(n)*a(n-1) -a(n)*a(n-2) -a(n-1)*a(n-2) +a(n-2)^2 -a(n) -3*a(n-1) +4*a(n-2) +3', 'a(n-2)^2 -2*a(n-2)*a(n-3) +a(n-3)^2 -3*a(n-2) +3*a(n-3) +2', 'a(n-1)^2 -2*a(n-1)*a(n-3) +a(n-3)^2 -5*a(n-1) +5*a(n-3) +6', 'a(n-2)*a(n-3)^2 -a(n-3)^3 -7*a(n-2)*a(n-3) +6*a(n-3)^2 +10*a(n-2) -3*a(n-3) -10', 'a(n-1)*a(n-2) -a(n-1)*a(n-3) -a(n-2)*a(n-3) +a(n-3)^2 -a(n-1) -3*a(n-2) +4*a(n-3) +3', 'n*a(n-2) -n*a(n-3) +(-2/3)*a(n-2)*a(n-3) +(2/3)*a(n-3)^2 -n +(-11/3)*a(n-2) +(13/3)*a(n-3) +11/3', 'a(n-1)*a(n-3)^2 -a(n-3)^3 +(54/5)*n*a(n-3) +(-61/5)*a(n-1)*a(n-3) +(8/5)*a(n-2)*a(n-3) +(-11/5)*a(n-3)^2 +(-52/5)*a(n-1) +(-78/5)*a(n-2) +38*a(n-3) +182/5', 'n*a(n-1) +(-4/5)*n*a(n-3) +(-4/5)*a(n-1)*a(n-3) +(1/15)*a(n-2)*a(n-3) +(8/15)*a(n-3)^2 -2*n +(-18/5)*a(n-1) +(-11/15)*a(n-2) +(17/3)*a(n-3) +119/15', 'n^2 +(-8/5)*n*a(n-3) +(1/15)*a(n-1)*a(n-3) +(2/15)*a(n-2)*a(n-3) +(2/5)*a(n-3)^2 -4*n +(-13/15)*a(n-1) +(-17/15)*a(n-2) +(16/3)*a(n-3) +88/15', 'n*a(n-3)^2 -a(n-3)^3 +(-29/5)*n*a(n-3) +(-4/5)*a(n-1)*a(n-3) +(-44/15)*a(n-2)*a(n-3) +(128/15)*a(n-3)^2 +(52/5)*a(n-1) +(184/15)*a(n-2) +(-37/3)*a(n-3) -496/15', 'a(n-3)^2 -2*a(n-3)*a(n-4) +a(n-4)^2 -3*a(n-3) +3*a(n-4) +2', 'a(n-2)^2 -2*a(n-2)*a(n-4) +a(n-4)^2 -5*a(n-2) +5*a(n-4) +6', 'a(n-3)*a(n-4)^2 -a(n-4)^3 -7*a(n-3)*a(n-4) +6*a(n-4)^2 +10*a(n-3) -3*a(n-4) -10', 'a(n-2)*a(n-3) -a(n-2)*a(n-4) -a(n-3)*a(n-4) +a(n-4)^2 -a(n-2) -3*a(n-3) +4*a(n-4) +3', 'n*a(n-4) +(-2/3)*a(n-2)*a(n-4) +(1/3)*a(n-3)*a(n-4) +(-2/3)*a(n-4)^2 +(-4/3)*a(n-2) -2*a(n-3) +(7/3)*a(n-4) +14/3', 'n*a(n-3) +(-2/3)*a(n-2)*a(n-4) +(-1/3)*a(n-3)*a(n-4) -n +(-4/3)*a(n-2) +(-20/3)*a(n-3) +(23/3)*a(n-4) +28/3', 'n*a(n-2) +(-4/3)*a(n-2)*a(n-4) +(1/3)*a(n-3)*a(n-4) -2*n +(-17/3)*a(n-2) +(-7/3)*a(n-3) +(25/3)*a(n-4) +41/3', 'a(n-2)*a(n-4)^2 -a(n-4)^3 -5*a(n-2)*a(n-4) -2*a(n-3)*a(n-4) +5*a(n-4)^2 +4*a(n-2) +6*a(n-3) +2*a(n-4) -14', 'a(n-1)*a(n-2) -3*a(n-3)*a(n-4) +2*a(n-4)^2 +6*n -14*a(n-1) -6*a(n-2) +13*a(n-3) -a(n-4) +23', 'n^2 -a(n-2)*a(n-4) +(2/3)*a(n-3)*a(n-4) +(-2/3)*a(n-4)^2 -6*n -3*a(n-2) +(-13/3)*a(n-3) +(32/3)*a(n-4) +55/3', 'a(n-4)^2 -2*a(n-4)*a(n-5) +a(n-5)^2 -3*a(n-4) +3*a(n-5) +2', 'n*a(n-5) -a(n-4)*a(n-5) +2*n -4*a(n-2) -2*a(n-3) +4*a(n-4) -2*a(n-5) +6', 'a(n-2)*a(n-4) -2*a(n-4)*a(n-5) +a(n-5)^2 +3*n -7*a(n-2) -a(n-3) +3*a(n-5) +11', 'a(n-3)*a(n-5) -2*a(n-4)*a(n-5) +a(n-5)^2 +3*n -6*a(n-2) -a(n-3) +9*a(n-4) -5*a(n-5) +2', 'a(n-3)*a(n-4) -3*a(n-4)*a(n-5) +2*a(n-5)^2 +3*n -6*a(n-2) -2*a(n-3) +6*a(n-4) -a(n-5) +5', 'a(n-2)^2 -2*a(n-4)*a(n-5) +a(n-5)^2 +6*n -19*a(n-2) -2*a(n-3) +8*a(n-4) +3*a(n-5) +26', 'a(n-3)^2 -4*a(n-4)*a(n-5) +3*a(n-5)^2 +6*n -12*a(n-2) -7*a(n-3) +18*a(n-4) -5*a(n-5) +10', 'a(n-2)*a(n-3) -3*a(n-4)*a(n-5) +2*a(n-5)^2 +6*n -14*a(n-2) -6*a(n-3) +13*a(n-4) -a(n-5) +17', 'n*a(n-4) +(-5/3)*a(n-4)*a(n-5) +(2/3)*a(n-5)^2 +n -4*a(n-2) -2*a(n-3) +(-5/3)*a(n-4) +(13/3)*a(n-5) +35/3', 'n*a(n-3) +(-7/3)*a(n-4)*a(n-5) +(4/3)*a(n-5)^2 +2*n -8*a(n-2) -8*a(n-3) +(29/3)*a(n-4) +(5/3)*a(n-5) +55/3', 'n*a(n-2) -2*a(n) -31*n -4*a(n-1) +4*a(n-3) +4*a(n-4) +4*a(n-5) +2*a(n-6) +172']
A039241: 
a(n) = n*a(n-2)/2 - 31*n/2 + a(n-6) + 2*a(n-5) + 2*a(n-4) + 2*a(n-3) - 2*a(n-1) + 86
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

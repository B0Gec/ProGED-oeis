
orders_used: [1, 2, 1, 3, 2, 1, 4, 3, 2, 1, 4, 5, 4, 3, 2, 1, 6, 6, 5, 4, 3, 2, 1, 7, 7, 6, 5, 4, 3, 2, 8, 7, 6, 5, 4, 9, 8, 7, 6, 9, 9, 9, 9]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:6239/10000, seq_id:A040542, order:20 took:
 22.3 seconds, i.e. 0.37 minutes or 0.006 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
eqs_explicit:
['a(n) = 2393*a(n-9)/3298 - 2496*a(n-8)/1649 + 602*a(n-7)/1649 - 1477*a(n-6)/1649 - 422*a(n-5)/1649 + 24383/3298']
non_linears:
['a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-2)*a(n-3) -a(n-2) -a(n-3) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n-2)*a(n-3) -a(n-2) -a(n-3) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-1)*a(n-4)^2 -4*a(n-1)*a(n-4) -a(n-4)^2 +3*a(n-1) +4*a(n-4) -3', 'a(n-4)*a(n-5) -a(n-4) -a(n-5) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n-2)*a(n-3) -a(n-2) -a(n-3) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-5)*a(n-6) -a(n-5) -a(n-6) +1', 'a(n)*a(n-6) -a(n) -a(n-6) +1', 'a(n-4)*a(n-5) -a(n-4) -a(n-5) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n-2)*a(n-3) -a(n-2) -a(n-3) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-6)*a(n-7) -a(n-6) -a(n-7) +1', 'a(n-1)*a(n-7) -a(n-1) -a(n-7) +1', 'a(n-5)*a(n-6) -a(n-5) -a(n-6) +1', 'a(n-4)*a(n-5) -a(n-4) -a(n-5) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n-2)*a(n-3) -a(n-2) -a(n-3) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n-7)*a(n-8) -a(n-7) -a(n-8) +1', 'a(n-6)*a(n-7) -a(n-6) -a(n-7) +1', 'a(n-5)*a(n-6) -a(n-5) -a(n-6) +1', 'a(n-4)*a(n-5) -a(n-4) -a(n-5) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n-8)*a(n-9) -a(n-8) -a(n-9) +1', 'a(n-7)*a(n-8) -a(n-7) -a(n-8) +1', 'a(n-6)*a(n-7) -a(n-6) -a(n-7) +1', 'a(n-5)*a(n-6) -a(n-5) -a(n-6) +1', 'n +(-506/1649)*a(n-5) +(-122/1649)*a(n-6) +(1222/1649)*a(n-7) +(2384/1649)*a(n-8) +(431/3298)*a(n-9) -48415/3298', 'a(n-7)*a(n-9) +(200/1649)*a(n-5) +(700/1649)*a(n-6) +(-2497/1649)*a(n-7) +(-1568/1649)*a(n-8) +(-4967/1649)*a(n-9) +8219/1649', 'a(n-6)*a(n-8) +(700/1649)*a(n-5) +(-2497/1649)*a(n-6) +(-2968/1649)*a(n-7) +(-7137/1649)*a(n-8) +(-70/1649)*a(n-9) +16399/1649', 'a(n) +(422/1649)*a(n-5) +(1477/1649)*a(n-6) +(-602/1649)*a(n-7) +(2496/1649)*a(n-8) +(-2393/3298)*a(n-9) -24383/3298']
A040542: 
a(n) = 2393*a(n-9)/3298 - 2496*a(n-8)/1649 + 602*a(n-7)/1649 - 1477*a(n-6)/1649 - 422*a(n-5)/1649 + 24383/3298
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

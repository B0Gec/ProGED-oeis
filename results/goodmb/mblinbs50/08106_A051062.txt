
orders_used: [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
While total time consumed by now, scale:8107/27236, seq_id:A051062, order:20 took:
 34.9 seconds, i.e. 0.58 minutes or 0.01 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
non_linears:
['a(n) -a(n-1) -16', 'a(n-1) -a(n-2) -16', 'a(n) -a(n-2) -32', 'a(n-2) -a(n-3) -16', 'a(n-1) -a(n-3) -32', 'a(n) -a(n-3) -48', 'a(n-3) -a(n-4) -16', 'a(n-2) -a(n-4) -32', 'a(n-1) -a(n-4) -48', 'a(n) -a(n-4) -64', 'a(n-4) -a(n-5) -16', 'a(n-3) -a(n-5) -32', 'a(n-2) -a(n-5) -48', 'a(n-1) -a(n-5) -64', 'a(n) -a(n-5) -80', 'a(n-5) -a(n-6) -16', 'a(n-4) -a(n-6) -32', 'a(n-3) -a(n-6) -48', 'a(n-2) -a(n-6) -64', 'a(n-1) -a(n-6) -80', 'a(n) -a(n-6) -96', 'a(n-6) -a(n-7) -16', 'a(n-5) -a(n-7) -32', 'a(n-4) -a(n-7) -48', 'a(n-3) -a(n-7) -64', 'a(n-2) -a(n-7) -80', 'a(n-1) -a(n-7) -96', 'a(n) -a(n-7) -112', 'a(n-7) -a(n-8) -16', 'a(n-6) -a(n-8) -32', 'a(n-5) -a(n-8) -48', 'a(n-4) -a(n-8) -64', 'a(n-3) -a(n-8) -80', 'a(n-2) -a(n-8) -96', 'a(n-1) -a(n-8) -112', 'a(n) -a(n-8) -128', 'a(n-8) -a(n-9) -16', 'a(n-7) -a(n-9) -32', 'a(n-6) -a(n-9) -48', 'a(n-5) -a(n-9) -64', 'a(n-4) -a(n-9) -80', 'a(n-3) -a(n-9) -96', 'a(n-2) -a(n-9) -112', 'a(n-1) -a(n-9) -128', 'a(n) -a(n-9) -144', 'a(n-9) -a(n-10) -16', 'a(n-8) -a(n-10) -32', 'a(n-7) -a(n-10) -48', 'a(n-6) -a(n-10) -64', 'a(n-5) -a(n-10) -80', 'a(n-4) -a(n-10) -96', 'a(n-3) -a(n-10) -112', 'a(n-2) -a(n-10) -128', 'a(n-1) -a(n-10) -144', 'a(n) -a(n-10) -160', 'a(n-10) -a(n-11) -16', 'a(n-9) -a(n-11) -32', 'a(n-8) -a(n-11) -48', 'a(n-7) -a(n-11) -64', 'a(n-6) -a(n-11) -80', 'a(n-5) -a(n-11) -96', 'a(n-4) -a(n-11) -112', 'a(n-3) -a(n-11) -128', 'a(n-2) -a(n-11) -144', 'a(n-1) -a(n-11) -160', 'a(n-11) -a(n-12) -16', 'a(n-10) -a(n-12) -32', 'a(n-9) -a(n-12) -48', 'a(n-8) -a(n-12) -64', 'a(n-7) -a(n-12) -80', 'a(n-6) -a(n-12) -96', 'a(n-5) -a(n-12) -112', 'a(n-4) -a(n-12) -128', 'a(n-3) -a(n-12) -144', 'a(n-2) -a(n-12) -160', 'a(n-12) -a(n-13) -16', 'a(n-11) -a(n-13) -32', 'a(n-10) -a(n-13) -48', 'a(n-9) -a(n-13) -64', 'a(n-8) -a(n-13) -80', 'a(n-7) -a(n-13) -96', 'a(n-6) -a(n-13) -112', 'a(n-5) -a(n-13) -128', 'a(n-4) -a(n-13) -144', 'a(n-3) -a(n-13) -160', 'a(n-13) -a(n-14) -16', 'a(n-12) -a(n-14) -32', 'a(n-11) -a(n-14) -48', 'a(n-10) -a(n-14) -64', 'a(n-9) -a(n-14) -80', 'a(n-8) -a(n-14) -96', 'a(n-7) -a(n-14) -112', 'a(n-6) -a(n-14) -128', 'a(n-5) -a(n-14) -144', 'a(n-4) -a(n-14) -160', 'a(n-14) -a(n-15) -16', 'a(n-13) -a(n-15) -32', 'a(n-12) -a(n-15) -48', 'a(n-11) -a(n-15) -64', 'a(n-10) -a(n-15) -80', 'a(n-9) -a(n-15) -96', 'a(n-8) -a(n-15) -112', 'a(n-7) -a(n-15) -128', 'a(n-6) -a(n-15) -144', 'a(n-5) -a(n-15) -160', 'a(n-15) -a(n-16) -16', 'a(n-14) -a(n-16) -32', 'a(n-13) -a(n-16) -48', 'a(n-12) -a(n-16) -64', 'a(n-11) -a(n-16) -80', 'a(n-10) -a(n-16) -96', 'a(n-9) -a(n-16) -112', 'a(n-8) -a(n-16) -128', 'a(n-7) -a(n-16) -144', 'a(n-6) -a(n-16) -160', 'a(n-16) -a(n-17) -16', 'a(n-15) -a(n-17) -32', 'a(n-14) -a(n-17) -48', 'a(n-13) -a(n-17) -64', 'a(n-12) -a(n-17) -80', 'a(n-11) -a(n-17) -96', 'a(n-10) -a(n-17) -112', 'a(n-9) -a(n-17) -128', 'a(n-8) -a(n-17) -144', 'a(n-7) -a(n-17) -160', 'a(n-17) -a(n-18) -16', 'a(n-16) -a(n-18) -32', 'a(n-15) -a(n-18) -48', 'a(n-14) -a(n-18) -64', 'a(n-13) -a(n-18) -80', 'a(n-12) -a(n-18) -96', 'a(n-11) -a(n-18) -112', 'a(n-10) -a(n-18) -128', 'a(n-9) -a(n-18) -144', 'a(n-8) -a(n-18) -160', 'a(n-18) -a(n-19) -16', 'a(n-17) -a(n-19) -32', 'a(n-16) -a(n-19) -48', 'a(n-15) -a(n-19) -64', 'a(n-14) -a(n-19) -80', 'a(n-13) -a(n-19) -96', 'a(n-12) -a(n-19) -112', 'a(n-11) -a(n-19) -128', 'a(n-10) -a(n-19) -144', 'a(n-9) -a(n-19) -160', 'a(n-19) -a(n-20) -16', 'a(n-18) -a(n-20) -32', 'a(n-17) -a(n-20) -48', 'a(n-16) -a(n-20) -64', 'a(n-15) -a(n-20) -80', 'a(n-14) -a(n-20) -96', 'a(n-13) -a(n-20) -112', 'a(n-12) -a(n-20) -128', 'a(n-11) -a(n-20) -144', 'a(n-10) -a(n-20) -160']
A051062: 
MB not reconst
truth: 
a(n) = 2*a(n - 1) + -1*a(n - 2),  
a(0) = 8, a(1) = 24

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    


orders_used: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:2304/10000, seq_id:A014410, order:20 took:
 21.0 seconds, i.e. 0.35 minutes or 0.006 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 18.
eqs_explicit:
[]
non_linears:
['n +(-28/173)*a(n-13) +(-67/519)*a(n-14) +(-191/519)*a(n-15) +(-146/519)*a(n-16) +(-122/519)*a(n-17) +(-41/519)*a(n-18) -2318/173', 'a(n-5) +(554/173)*a(n-13) +(-765/173)*a(n-14) +(455/519)*a(n-15) +(-833/173)*a(n-16) +(-626/519)*a(n-17) +(8/519)*a(n-18) +2292/173', 'a(n-15)*a(n-17) +(41/173)*a(n-13) +(-130/173)*a(n-14) +(-745/173)*a(n-15) +(-180/173)*a(n-16) +(-859/173)*a(n-17) +(331/173)*a(n-18) +3975/173', 'a(n-10) +(98/173)*a(n-13) +(-1409/519)*a(n-14) +(-283/519)*a(n-15) +(-700/519)*a(n-16) +(254/519)*a(n-17) +(749/519)*a(n-18) +1020/173', 'a(n-2) +(-734/173)*a(n-13) +(918/173)*a(n-14) +(-355/173)*a(n-15) +(965/173)*a(n-16) +(112/173)*a(n-17) +(-107/173)*a(n-18) -7802/173', 'a(n-18)^2 +(301/173)*a(n-13) +(-188/519)*a(n-14) +(497/173)*a(n-15) +(-766/519)*a(n-16) +(187/519)*a(n-17) +(-2030/173)*a(n-18) +1131/173', 'a(n-17)*a(n-18) +(216/173)*a(n-13) +(245/519)*a(n-14) +(905/519)*a(n-15) +(-233/519)*a(n-16) +(-922/173)*a(n-17) +(-3292/519)*a(n-18) +1595/173', 'a(n-12) +(17/346)*a(n-13) +(839/519)*a(n-14) +(-125/1038)*a(n-15) +(-209/519)*a(n-16) +(-449/346)*a(n-17) +(-1217/1038)*a(n-18) -2411/346', 'a(n-16)*a(n-18) +(330/173)*a(n-13) +(110/519)*a(n-14) +(392/173)*a(n-15) +(-2456/519)*a(n-16) +(-910/519)*a(n-17) +(-1260/173)*a(n-18) +1740/173', 'a(n-16)^2 +(440/173)*a(n-13) +(-28/173)*a(n-14) +(184/519)*a(n-15) +(-2341/173)*a(n-16) +(-2482/519)*a(n-17) +(1534/519)*a(n-18) +5088/173', 'a(n-19)^2 +(-4/3)*a(n-15) +(-2/3)*a(n-17) +(8/3)*a(n-18) -7*a(n-19) +12', 'a(n-15)*a(n-16) -8*a(n-15) -4*a(n-16) -2*a(n-17) +8*a(n-18) -6*a(n-19) +34', 'a(n-7) +(-10/3)*a(n-15) +(-19/3)*a(n-16) +(-5/3)*a(n-17) +3*a(n-18) +(38/3)*a(n-19) -4', 'a(n-14) +(24/43)*a(n-15) +(71/43)*a(n-16) +(-20/43)*a(n-17) +(-57/43)*a(n-18) +(-117/43)*a(n-19) -135/43', 'a(n-10) +(3/43)*a(n-15) +(419/129)*a(n-16) +(-24/43)*a(n-17) +(-188/129)*a(n-18) +(-877/129)*a(n-19) +53/43', 'n +(-5/129)*a(n-15) +(-13/129)*a(n-16) +(-46/129)*a(n-17) +(-58/129)*a(n-18) +(-67/129)*a(n-19) -641/43', 'a(n-16)*a(n-18) +(-38/43)*a(n-15) +(-202/43)*a(n-16) +(-40/43)*a(n-17) +(-200/43)*a(n-18) +(110/43)*a(n-19) +1020/43', 'a(n-16)*a(n-17) +(-78/43)*a(n-15) +(-392/43)*a(n-16) +(-322/43)*a(n-17) +(-62/43)*a(n-18) +(434/43)*a(n-19) +1804/43', 'a(n-13) +(205/129)*a(n-15) +(-26/129)*a(n-16) +(-49/129)*a(n-17) +(-53/43)*a(n-18) +(-134/129)*a(n-19) -293/43', 'a(n-8) +(289/129)*a(n-15) +(-62/43)*a(n-16) +(53/129)*a(n-17) +(-122/129)*a(n-18) +(84/43)*a(n-19) -1074/43', 'a(n-19)^2 -2*a(n-17) -11*a(n-19) +4*a(n-20) +24', 'a(n-15) -a(n-17) -2*a(n-18) -3*a(n-19) +3*a(n-20) +9', 'a(n-17)*a(n-19) +(-1/2)*a(n-17) +(3/2)*a(n-18) -2*a(n-19) +(-13/2)*a(n-20) +9/2', 'a(n-17)*a(n-18) +(-1/2)*a(n-17) +(-5/2)*a(n-18) +4*a(n-19) +(-17/2)*a(n-20) +5/2', 'a(n-19)*a(n-20) +(3/4)*a(n-17) +(3/4)*a(n-18) -3*a(n-19) +(-21/4)*a(n-20) +33/4', 'a(n-18)^2 +(11/3)*a(n-17) -8*a(n-18) +(10/3)*a(n-19) +(-19/3)*a(n-20) +3', 'a(n-20)^2 +(19/3)*a(n-17) +3*a(n-18) +(20/3)*a(n-19) +(-62/3)*a(n-20) -17', 'a(n-16) +(19/4)*a(n-17) +(11/4)*a(n-18) +3*a(n-19) +(-41/4)*a(n-20) -87/4', 'a(n-18)*a(n-20) +(19/6)*a(n-17) +(-3/2)*a(n-18) +(10/3)*a(n-19) +(-65/6)*a(n-20) -5/2', 'a(n-17)^2 +(13/3)*a(n-17) +6*a(n-18) +(50/3)*a(n-19) +(-104/3)*a(n-20) -32']
A014410: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

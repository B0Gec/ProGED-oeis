
orders_used: [1, 2, 3, 2, 4, 3, 5, 4, 5, 6, 6, 5, 7, 6, 7, 6, 7, 8, 7, 6, 8, 8, 8, 8, 8, 8, 8, 9, 8, 9, 7, 6, 9, 9, 9, 9, 9, 10, 9, 10, 8, 7, 6, 10, 10, 10, 10, 11, 10, 9, 8, 7, 6, 12, 11, 10, 9, 8, 7, 6, 13, 12, 11, 10, 9, 8, 7, 14, 13, 12, 11, 10, 9, 15, 14, 13, 12, 11, 16, 15, 14, 13, 17, 16, 15, 17, 17, 17, 17, 17, 17, 18, 18, 17, 19, 19, 18, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 19, 18, 20, 20]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:8494/10000, seq_id:A053383, order:20 took:
 76.5 seconds, i.e. 1.27 minutes or 0.021 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
eqs_explicit:
[]
non_linears:
['a(n)*a(n-1)^2 -3*a(n)*a(n-1) -a(n-1)^2 +2*a(n) +3*a(n-1) -2', 'a(n-1)*a(n-2)^2 -3*a(n-1)*a(n-2) -a(n-2)^2 +2*a(n-1) +3*a(n-2) -2', 'a(n-2)*a(n-3)^2 -3*a(n-2)*a(n-3) -a(n-3)^2 +2*a(n-2) +3*a(n-3) -2', 'a(n-1)*a(n-2)^2 -3*a(n-1)*a(n-2) -a(n-2)^2 +2*a(n-1) +3*a(n-2) -2', 'a(n-3)*a(n-4)^2 -3*a(n-3)*a(n-4) -a(n-4)^2 +2*a(n-3) +3*a(n-4) -2', 'a(n-2)*a(n-3)^2 -3*a(n-2)*a(n-3) -a(n-3)^2 +2*a(n-2) +3*a(n-3) -2', 'a(n-4)*a(n-5)^2 -3*a(n-4)*a(n-5) -a(n-5)^2 +2*a(n-4) +3*a(n-5) -2', 'a(n-3)*a(n-4)^2 -3*a(n-3)*a(n-4) -a(n-4)^2 +2*a(n-3) +3*a(n-4) -2', 'a(n-3)*a(n-4)*a(n-5) -a(n-3)*a(n-4) -a(n-3)*a(n-5) -a(n-4)*a(n-5) +a(n-3) +a(n-4) +a(n-5) -1', 'a(n-2)*a(n-6) -a(n-2) -a(n-6) +1', 'a(n-5)*a(n-6)^2 -3*a(n-5)*a(n-6) -a(n-6)^2 +2*a(n-5) +3*a(n-6) -2', 'a(n-4)*a(n-5)^2 -3*a(n-4)*a(n-5) -a(n-5)^2 +2*a(n-4) +3*a(n-5) -2', 'a(n-3)*a(n-7) -a(n-3) -a(n-7) +1', 'a(n-2)*a(n-6) -a(n-2) -a(n-6) +1', 'a(n-6)*a(n-7)^2 -3*a(n-6)*a(n-7) -a(n-7)^2 +2*a(n-6) +3*a(n-7) -2', 'a(n-5)*a(n-6)^2 -3*a(n-5)*a(n-6) -a(n-6)^2 +2*a(n-5) +3*a(n-6) -2', 'a(n-5)*a(n-6)*a(n-7) -a(n-5)*a(n-6) -a(n-5)*a(n-7) -a(n-6)*a(n-7) +a(n-5) +a(n-6) +a(n-7) -1', 'a(n-4)*a(n-8) -a(n-4) -a(n-8) +1', 'a(n-3)*a(n-7) -a(n-3) -a(n-7) +1', 'a(n-2)*a(n-6) -a(n-2) -a(n-6) +1', 'a(n-7)*a(n-8)^2 -3*a(n-7)*a(n-8) -a(n-8)^2 +2*a(n-7) +3*a(n-8) -2', 'a(n-6)*a(n-8)^2 -3*a(n-6)*a(n-8) -2*a(n-8)^2 +2*a(n-6) +6*a(n-8) -4', 'a(n-8)^3 +112*a(n-6)*a(n-8) -37*a(n-8)^2 -112*a(n-6) -8*a(n-8) +44', 'a(n-5)*a(n-8)^2 -3*a(n-5)*a(n-8) +(14/3)*a(n-6)*a(n-8) +(-19/6)*a(n-8)^2 +2*a(n-5) +(-14/3)*a(n-6) +(29/6)*a(n-8) -5/3', 'a(n-3)*a(n-8)^2 -3*a(n-3)*a(n-8) +(70/3)*a(n-6)*a(n-8) +(-41/6)*a(n-8)^2 +2*a(n-3) +(-70/3)*a(n-6) +(-17/6)*a(n-8) +29/3', 'a(n-1)*a(n-5) +5*a(n-3)*a(n-8) -a(n-5)*a(n-8) +5*a(n-6)*a(n-8) -a(n-8)^2 -a(n-1) -5*a(n-3) -5*a(n-6) -6*a(n-8) +8', 'a(n-5)*a(n-6) +(-193/870)*a(n-6)*a(n-8) +(19/3480)*a(n-8)^2 -a(n-5) +(-677/870)*a(n-6) +(143/696)*a(n-8) +1373/1740', 'a(n-5)*a(n-9) -a(n-5) -a(n-9) +1', 'a(n-4)*a(n-8) -a(n-4) -a(n-8) +1', 'a(n)*a(n-8) -a(n-8)*a(n-9) -a(n) +a(n-9)', 'a(n-3)*a(n-7) -a(n-3) -a(n-7) +1', 'a(n-2)*a(n-6) -a(n-2) -a(n-6) +1', 'a(n-8)*a(n-9)^2 -3*a(n-8)*a(n-9) -a(n-9)^2 +2*a(n-8) +3*a(n-9) -2', 'a(n-7)*a(n-9)^2 -3*a(n-7)*a(n-9) -2*a(n-9)^2 +2*a(n-7) +6*a(n-9) -4', 'a(n-2)*a(n-9) -29*a(n-8)*a(n-9) -a(n-2) +29*a(n-8) +28*a(n-9) -28', 'a(n-9)^3 +112*a(n-7)*a(n-9) -37*a(n-9)^2 -112*a(n-7) -8*a(n-9) +44', 'a(n-6)*a(n-9)^2 -3*a(n-6)*a(n-9) +(14/3)*a(n-7)*a(n-9) +(-19/6)*a(n-9)^2 +2*a(n-6) +(-14/3)*a(n-7) +(29/6)*a(n-9) -5/3', 'a(n-6)*a(n-10) -a(n-6) -a(n-10) +1', 'a(n-5)*a(n-9) -a(n-5) -a(n-9) +1', 'a(n-1)*a(n-9) -a(n-9)*a(n-10) -a(n-1) +a(n-10)', 'a(n-4)*a(n-8) -a(n-4) -a(n-8) +1', 'a(n-3)*a(n-7) -a(n-3) -a(n-7) +1', 'a(n-2)*a(n-6) -a(n-2) -a(n-6) +1', 'a(n)*a(n-10) -2*a(n-9)*a(n-10) -a(n) +2*a(n-9) +a(n-10) -1', 'a(n-9)*a(n-10)^2 -3*a(n-9)*a(n-10) -a(n-10)^2 +2*a(n-9) +3*a(n-10) -2', 'a(n-3)*a(n-10) -29*a(n-9)*a(n-10) -a(n-3) +29*a(n-9) +28*a(n-10) -28', 'a(n)*a(n-1) -2*a(n-9)*a(n-10) -a(n) -a(n-1) +2*a(n-9) +2*a(n-10) -1', 'a(n-7)*a(n-11) -a(n-7) -a(n-11) +1', 'a(n-6)*a(n-10) -a(n-6) -a(n-10) +1', 'a(n-5)*a(n-9) -a(n-5) -a(n-9) +1', 'a(n-4)*a(n-8) -a(n-4) -a(n-8) +1', 'a(n-3)*a(n-7) -a(n-3) -a(n-7) +1', 'a(n-2)*a(n-6) -a(n-2) -a(n-6) +1', 'a(n-8)*a(n-12) -a(n-8) -a(n-12) +1', 'a(n-7)*a(n-11) -a(n-7) -a(n-11) +1', 'a(n-6)*a(n-10) -a(n-6) -a(n-10) +1', 'a(n-5)*a(n-9) -a(n-5) -a(n-9) +1', 'a(n-4)*a(n-8) -a(n-4) -a(n-8) +1', 'a(n-3)*a(n-7) -a(n-3) -a(n-7) +1', 'a(n-2)*a(n-6) -a(n-2) -a(n-6) +1', 'a(n-9)*a(n-13) -a(n-9) -a(n-13) +1', 'a(n-8)*a(n-12) -a(n-8) -a(n-12) +1', 'a(n-7)*a(n-11) -a(n-7) -a(n-11) +1', 'a(n-6)*a(n-10) -a(n-6) -a(n-10) +1', 'a(n-5)*a(n-9) -a(n-5) -a(n-9) +1', 'a(n-4)*a(n-8) -a(n-4) -a(n-8) +1', 'a(n-3)*a(n-7) -a(n-3) -a(n-7) +1', 'a(n-10)*a(n-14) -a(n-10) -a(n-14) +1', 'a(n-9)*a(n-13) -a(n-9) -a(n-13) +1', 'a(n-8)*a(n-12) -a(n-8) -a(n-12) +1', 'a(n-7)*a(n-11) -a(n-7) -a(n-11) +1', 'a(n-6)*a(n-10) -a(n-6) -a(n-10) +1', 'a(n-5)*a(n-9) -a(n-5) -a(n-9) +1', 'a(n-11)*a(n-15) -a(n-11) -a(n-15) +1', 'a(n-10)*a(n-14) -a(n-10) -a(n-14) +1', 'a(n-9)*a(n-13) -a(n-9) -a(n-13) +1', 'a(n-8)*a(n-12) -a(n-8) -a(n-12) +1', 'a(n-7)*a(n-11) -a(n-7) -a(n-11) +1', 'a(n-12)*a(n-16) -a(n-12) -a(n-16) +1', 'a(n-11)*a(n-15) -a(n-11) -a(n-15) +1', 'a(n-10)*a(n-14) -a(n-10) -a(n-14) +1', 'a(n-9)*a(n-13) -a(n-9) -a(n-13) +1', 'a(n-13)*a(n-17) -a(n-13) -a(n-17) +1', 'a(n-12)*a(n-16) -a(n-12) -a(n-16) +1', 'a(n-11)*a(n-15) -a(n-11) -a(n-15) +1', 'a(n-2) +(299/53)*a(n-11) +(-5/53)*a(n-12) +(-68/53)*a(n-13) +(-85/53)*a(n-14) +(12/53)*a(n-15) +(-25/53)*a(n-16) +(12/53)*a(n-17) -180/53', 'a(n-13)*a(n-14) +(59/106)*a(n-11) +(-2/53)*a(n-12) +(-59/53)*a(n-13) +(-121/106)*a(n-14) +(-1/106)*a(n-15) +(-10/53)*a(n-16) +(-1/106)*a(n-17) +121/106', 'a(n-16)^2 +(590/53)*a(n-11) +(-40/53)*a(n-12) +(-120/53)*a(n-13) +(-150/53)*a(n-14) +(-10/53)*a(n-15) +(-359/53)*a(n-16) +(-10/53)*a(n-17) +256/53', 'a(n-11)*a(n-17) +(303/106)*a(n-11) +(5/53)*a(n-12) +(-38/53)*a(n-13) +(-95/106)*a(n-14) +(29/106)*a(n-15) +(25/53)*a(n-16) +(-77/106)*a(n-17) -329/106', 'a(n-11)*a(n-16) +(-621/106)*a(n-11) +(-5/53)*a(n-12) +(38/53)*a(n-13) +(95/106)*a(n-14) +(-29/106)*a(n-15) +(-78/53)*a(n-16) +(-29/106)*a(n-17) +647/106', 'a(n-12)*a(n-17) +(409/106)*a(n-11) +(-48/53)*a(n-12) +(-38/53)*a(n-13) +(-95/106)*a(n-14) +(29/106)*a(n-15) +(25/53)*a(n-16) +(-77/106)*a(n-17) -329/106', 'a(n-17)*a(n-18) -a(n-17) -a(n-18) +1', 'a(n-14)*a(n-18) -a(n-14) -a(n-18) +1', 'a(n-13)*a(n-17) -a(n-13) -a(n-17) +1', 'a(n-18)*a(n-19) -a(n-18) -a(n-19) +1', 'a(n-15)*a(n-19) -a(n-15) -a(n-19) +1', 'a(n-17)*a(n-18) -a(n-17) -a(n-18) +1', 'a(n-8) +(-45/37)*a(n-15) +(-52/37)*a(n-16) +(-257/37)*a(n-17) +(-32/37)*a(n-18) +(3/37)*a(n-19) +603/37', 'a(n-4) +(-8/481)*a(n-15) +(-200/481)*a(n-16) +(2/481)*a(n-17) +(-439/481)*a(n-18) +(40/481)*a(n-19) +122/481', 'a(n-13) +(-100/481)*a(n-15) +(-95/481)*a(n-16) +(25/481)*a(n-17) +(44/481)*a(n-18) +(19/481)*a(n-19) -399/481', 'a(n-16)*a(n-18) +(96/481)*a(n-15) +(-486/481)*a(n-16) +(-24/481)*a(n-17) +(-985/481)*a(n-18) +(1/481)*a(n-19) +941/481', 'a(n-17)*a(n-19) +(4/481)*a(n-15) +(100/481)*a(n-16) +(-482/481)*a(n-17) +(-21/481)*a(n-18) +(-982/481)*a(n-19) +901/481', 'a(n-16)*a(n-19) +(-16/481)*a(n-15) +(-881/481)*a(n-16) +(4/481)*a(n-17) +(84/481)*a(n-18) +(-882/481)*a(n-19) +1206/481', 'a(n-15)*a(n-18) +(-865/481)*a(n-15) +(20/481)*a(n-16) +(96/481)*a(n-17) +(-870/481)*a(n-18) +(-4/481)*a(n-19) +1046/481', 'a(n-20)^2 -3*a(n-20) +2', 'a(n-5) -a(n-19) -2*a(n-20) +2', 'a(n-19)*a(n-20) -a(n-19) -a(n-20) +1', 'a(n-18)*a(n-20) -a(n-18) -a(n-20) +1', 'a(n-17)*a(n-20) -a(n-17) -6*a(n-20) +6', 'a(n-18)*a(n-19) -a(n-18) -a(n-19) +1', 'a(n-17)*a(n-18) -a(n-17) -a(n-18) +1', 'a(n-8) -a(n-17) -24*a(n-20) +24', 'a(n-17)^2 -3*a(n-17) -20*a(n-20) +22']
A053383: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

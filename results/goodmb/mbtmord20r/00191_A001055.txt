
orders_used: [1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5]
dasco's acc_1, acc_10: True, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:192/10000, seq_id:A001055, order:20 took:
 21.9 seconds, i.e. 0.37 minutes or 0.006 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
eqs_explicit:
['a(n) = (-3*a(n-5)^2 + 4*a(n-5)*a(n-4) + 3*a(n-5) - 2*a(n-4) + 6*a(n-2) - 10)/(2*(2*a(n-2) - 3))']
non_linears:
['a(n)^2*a(n-1) -a(n)^2 -3*a(n)*a(n-1) +3*a(n) +2*a(n-1) -2', 'a(n)*a(n-2)^2 -3*a(n)*a(n-2) -2*a(n-2)^2 +2*a(n) +6*a(n-2) -4', 'a(n-1)^2*a(n-2) -a(n-1)^2 -3*a(n-1)*a(n-2) +3*a(n-1) +2*a(n-2) -2', 'a(n-1)*a(n-3)^2 -3*a(n-1)*a(n-3) -2*a(n-3)^2 +2*a(n-1) +6*a(n-3) -4', 'a(n-2)^2*a(n-3) -a(n-2)^2 -3*a(n-2)*a(n-3) +3*a(n-2) +2*a(n-3) -2', 'a(n-4)^3 -6*a(n-4)^2 +11*a(n-4) -6', 'a(n-3)*a(n-4)^2 -3*a(n-3)*a(n-4) -2*a(n-4)^2 +2*a(n-3) +6*a(n-4) -4', 'a(n-2)*a(n-4)^2 -3*a(n-2)*a(n-4) -2*a(n-4)^2 +2*a(n-2) +6*a(n-4) -4', 'a(n-1)*a(n-4)^2 -3*a(n-1)*a(n-4) -a(n-4)^2 +2*a(n-1) +3*a(n-4) -2', 'a(n-2)^2 +a(n-1)*a(n-4) -3*a(n-2)*a(n-4) -6*a(n-3)*a(n-4) +6*a(n-4)^2 -a(n-1) +6*a(n-3) -7*a(n-4) +3', 'a(n)^2 +a(n-1)*a(n-4) +a(n-2)*a(n-4) -a(n-4)^2 -3*a(n) -a(n-1) -a(n-2) -2*a(n-4) +5', 'a(n-5)^3 -6*a(n-5)^2 +11*a(n-5) -6', 'a(n-4)*a(n-5)^2 -3*a(n-4)*a(n-5) -2*a(n-5)^2 +2*a(n-4) +6*a(n-5) -4', 'a(n)*a(n-2) -a(n-4)*a(n-5) +(3/4)*a(n-5)^2 +(-3/2)*a(n) +(-3/2)*a(n-2) +(1/2)*a(n-4) +(-3/4)*a(n-5) +5/2']
A001055: 
a(n) = (-3*a(n-5)^2 + 4*a(n-5)*a(n-4) + 3*a(n-5) - 2*a(n-4) + 6*a(n-2) - 10)/(2*(2*a(n-2) - 3))
truth: 
None

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

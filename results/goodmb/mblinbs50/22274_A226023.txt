
orders_used: [3, 4, 5, 6, 6, 7, 6, 7, 8, 7, 6, 8, 9, 8, 7, 9, 9, 10, 9, 8, 10, 9, 10, 11, 10, 9, 11, 10, 9, 11, 12, 11, 10, 12, 11, 10, 12, 12, 13, 12, 11, 13, 12, 11, 13, 12, 13, 14, 13, 12, 14, 13, 12, 14, 13, 12, 14, 15, 14, 13, 15, 14, 13, 15, 14, 13, 15, 16, 15, 14, 16, 15, 14, 16, 15, 14, 16, 17, 16, 15, 17, 16, 15, 17, 16, 15, 17, 18, 17, 16, 18, 17, 16, 18, 17, 16, 18, 19, 18, 17, 19, 18, 17, 19, 18, 17, 19, 20, 19, 18, 20, 19, 18, 20, 19, 18, 20]
While total time consumed by now, scale:22275/27236, seq_id:A226023, order:20 took:
 29.8 seconds, i.e. 0.5 minutes or 0.008 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 3.
non_linears:
['a(n)*a(n-1) +3*a(n)*a(n-2) -4*a(n-1)*a(n-2) -4*a(n)*a(n-3) +3*a(n-1)*a(n-3) +a(n-2)*a(n-3) -6*a(n-1) -6*a(n-2)', 'a(n)*a(n-3) -3*a(n-3)^2 -a(n-1)*a(n-4) +4*a(n-3)*a(n-4) -a(n-4)^2 -6*a(n-3) +2*a(n-4)', 'a(n-2)^2 -2*a(n-2)*a(n-5) +a(n-5)^2 -6*a(n) +6*a(n-1) -8*a(n-2) +6*a(n-3) -6*a(n-4) -8*a(n-5) +24', 'a(n) -2*a(n-3) +a(n-6) -8', 'a(n-3)^2 -2*a(n-3)*a(n-6) +a(n-6)^2 -6*a(n-1) +6*a(n-2) -8*a(n-3) +6*a(n-4) -6*a(n-5) -8*a(n-6) +24', 'a(n-1) -2*a(n-4) +a(n-7) -8', 'a(n) -2*a(n-3) +a(n-6) -8', 'a(n-4)^2 -2*a(n-4)*a(n-7) +a(n-7)^2 -6*a(n-2) +6*a(n-3) -8*a(n-4) +6*a(n-5) -6*a(n-6) -8*a(n-7) +24', 'a(n-2) -2*a(n-5) +a(n-8) -8', 'a(n-1) -2*a(n-4) +a(n-7) -8', 'a(n) -2*a(n-3) +a(n-6) -8', 'a(n-5)^2 -2*a(n-5)*a(n-8) +a(n-8)^2 -6*a(n-3) +6*a(n-4) -8*a(n-5) +6*a(n-6) -6*a(n-7) -8*a(n-8) +24', 'a(n-3) -2*a(n-6) +a(n-9) -8', 'a(n-2) -2*a(n-5) +a(n-8) -8', 'a(n-1) -2*a(n-4) +a(n-7) -8', 'a(n) -3*a(n-6) +2*a(n-9) -24', 'a(n-6)^2 -2*a(n-6)*a(n-9) +a(n-9)^2 -6*a(n-4) +6*a(n-5) -8*a(n-6) +6*a(n-7) -6*a(n-8) -8*a(n-9) +24', 'a(n-4) -2*a(n-7) +a(n-10) -8', 'a(n-3) -2*a(n-6) +a(n-9) -8', 'a(n-2) -2*a(n-5) +a(n-8) -8', 'a(n-1) -3*a(n-7) +2*a(n-10) -24', 'a(n) -3*a(n-6) +2*a(n-9) -24', 'a(n-7)^2 -2*a(n-7)*a(n-10) +a(n-10)^2 -6*a(n-5) +6*a(n-6) -8*a(n-7) +6*a(n-8) -6*a(n-9) -8*a(n-10) +24', 'a(n-5) -2*a(n-8) +a(n-11) -8', 'a(n-4) -2*a(n-7) +a(n-10) -8', 'a(n-3) -2*a(n-6) +a(n-9) -8', 'a(n-2) -3*a(n-8) +2*a(n-11) -24', 'a(n-1) -3*a(n-7) +2*a(n-10) -24', 'a(n) -3*a(n-6) +2*a(n-9) -24', 'a(n-8)^2 -2*a(n-8)*a(n-11) +a(n-11)^2 -6*a(n-6) +6*a(n-7) -8*a(n-8) +6*a(n-9) -6*a(n-10) -8*a(n-11) +24', 'a(n-6) -2*a(n-9) +a(n-12) -8', 'a(n-5) -2*a(n-8) +a(n-11) -8', 'a(n-4) -2*a(n-7) +a(n-10) -8', 'a(n-3) -3*a(n-9) +2*a(n-12) -24', 'a(n-2) -3*a(n-8) +2*a(n-11) -24', 'a(n-1) -3*a(n-7) +2*a(n-10) -24', 'a(n) -4*a(n-9) +3*a(n-12) -48', 'a(n-9)^2 -2*a(n-9)*a(n-12) +a(n-12)^2 -6*a(n-7) +6*a(n-8) -8*a(n-9) +6*a(n-10) -6*a(n-11) -8*a(n-12) +24', 'a(n-7) -2*a(n-10) +a(n-13) -8', 'a(n-6) -2*a(n-9) +a(n-12) -8', 'a(n-5) -2*a(n-8) +a(n-11) -8', 'a(n-4) -3*a(n-10) +2*a(n-13) -24', 'a(n-3) -3*a(n-9) +2*a(n-12) -24', 'a(n-2) -3*a(n-8) +2*a(n-11) -24', 'a(n-1) -4*a(n-10) +3*a(n-13) -48', 'a(n) -4*a(n-9) +3*a(n-12) -48', 'a(n-10)^2 -2*a(n-10)*a(n-13) +a(n-13)^2 -6*a(n-8) +6*a(n-9) -8*a(n-10) +6*a(n-11) -6*a(n-12) -8*a(n-13) +24', 'a(n-8) -2*a(n-11) +a(n-14) -8', 'a(n-7) -2*a(n-10) +a(n-13) -8', 'a(n-6) -2*a(n-9) +a(n-12) -8', 'a(n-5) -3*a(n-11) +2*a(n-14) -24', 'a(n-4) -3*a(n-10) +2*a(n-13) -24', 'a(n-3) -3*a(n-9) +2*a(n-12) -24', 'a(n-2) -4*a(n-11) +3*a(n-14) -48', 'a(n-1) -4*a(n-10) +3*a(n-13) -48', 'a(n) -4*a(n-9) +3*a(n-12) -48', 'a(n-11)^2 -2*a(n-11)*a(n-14) +a(n-14)^2 -6*a(n-9) +6*a(n-10) -8*a(n-11) +6*a(n-12) -6*a(n-13) -8*a(n-14) +24', 'a(n-9) -2*a(n-12) +a(n-15) -8', 'a(n-8) -2*a(n-11) +a(n-14) -8', 'a(n-7) -2*a(n-10) +a(n-13) -8', 'a(n-6) -3*a(n-12) +2*a(n-15) -24', 'a(n-5) -3*a(n-11) +2*a(n-14) -24', 'a(n-4) -3*a(n-10) +2*a(n-13) -24', 'a(n-3) -4*a(n-12) +3*a(n-15) -48', 'a(n-2) -4*a(n-11) +3*a(n-14) -48', 'a(n-1) -4*a(n-10) +3*a(n-13) -48', 'a(n) -5*a(n-12) +4*a(n-15) -80', 'a(n-10) -2*a(n-13) +a(n-16) -8', 'a(n-9) -2*a(n-12) +a(n-15) -8', 'a(n-8) -2*a(n-11) +a(n-14) -8', 'a(n-7) -3*a(n-13) +2*a(n-16) -24', 'a(n-6) -3*a(n-12) +2*a(n-15) -24', 'a(n-5) -3*a(n-11) +2*a(n-14) -24', 'a(n-4) -4*a(n-13) +3*a(n-16) -48', 'a(n-3) -4*a(n-12) +3*a(n-15) -48', 'a(n-2) -4*a(n-11) +3*a(n-14) -48', 'a(n-1) -5*a(n-13) +4*a(n-16) -80', 'a(n-11) -2*a(n-14) +a(n-17) -8', 'a(n-10) -2*a(n-13) +a(n-16) -8', 'a(n-9) -2*a(n-12) +a(n-15) -8', 'a(n-8) -3*a(n-14) +2*a(n-17) -24', 'a(n-7) -3*a(n-13) +2*a(n-16) -24', 'a(n-6) -3*a(n-12) +2*a(n-15) -24', 'a(n-5) -4*a(n-14) +3*a(n-17) -48', 'a(n-4) -4*a(n-13) +3*a(n-16) -48', 'a(n-3) -4*a(n-12) +3*a(n-15) -48', 'a(n-2) -5*a(n-14) +4*a(n-17) -80', 'a(n-12) -2*a(n-15) +a(n-18) -8', 'a(n-11) -2*a(n-14) +a(n-17) -8', 'a(n-10) -2*a(n-13) +a(n-16) -8', 'a(n-9) -3*a(n-15) +2*a(n-18) -24', 'a(n-8) -3*a(n-14) +2*a(n-17) -24', 'a(n-7) -3*a(n-13) +2*a(n-16) -24', 'a(n-6) -4*a(n-15) +3*a(n-18) -48', 'a(n-5) -4*a(n-14) +3*a(n-17) -48', 'a(n-4) -4*a(n-13) +3*a(n-16) -48', 'a(n-3) -5*a(n-15) +4*a(n-18) -80', 'a(n-13) -2*a(n-16) +a(n-19) -8', 'a(n-12) -2*a(n-15) +a(n-18) -8', 'a(n-11) -2*a(n-14) +a(n-17) -8', 'a(n-10) -3*a(n-16) +2*a(n-19) -24', 'a(n-9) -3*a(n-15) +2*a(n-18) -24', 'a(n-8) -3*a(n-14) +2*a(n-17) -24', 'a(n-7) -4*a(n-16) +3*a(n-19) -48', 'a(n-6) -4*a(n-15) +3*a(n-18) -48', 'a(n-5) -4*a(n-14) +3*a(n-17) -48', 'a(n-4) -5*a(n-16) +4*a(n-19) -80', 'a(n-14) -2*a(n-17) +a(n-20) -8', 'a(n-13) -2*a(n-16) +a(n-19) -8', 'a(n-12) -2*a(n-15) +a(n-18) -8', 'a(n-11) -3*a(n-17) +2*a(n-20) -24', 'a(n-10) -3*a(n-16) +2*a(n-19) -24', 'a(n-9) -3*a(n-15) +2*a(n-18) -24', 'a(n-8) -4*a(n-17) +3*a(n-20) -48', 'a(n-7) -4*a(n-16) +3*a(n-19) -48', 'a(n-6) -4*a(n-15) +3*a(n-18) -48', 'a(n-5) -5*a(n-17) +4*a(n-20) -80']
A226023: 
MB not reconst
truth: 
a(n) = 1*a(n - 1) + 0*a(n - 2) + 2*a(n - 3) + -2*a(n - 4) + 0*a(n - 5) + -1*a(n - 6) + 1*a(n - 7),  
a(0) = 0, a(1) = 2, a(2) = 3, a(3) = 6, a(4) = 12, a(5) = 15, a(6) = 20

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

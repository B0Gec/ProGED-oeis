
orders_used: [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
While total time consumed by now, scale:22017/27236, seq_id:A218723, order:20 took:
 52.5 seconds, i.e. 0.87 minutes or 0.015 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
non_linears:
['a(n) -256*a(n-1) -1', 'a(n-1) -256*a(n-2) -1', 'a(n) -65536*a(n-2) -257', 'a(n-2) -256*a(n-3) -1', 'a(n-1) -65536*a(n-3) -257', 'a(n) -16777216*a(n-3) -65793', 'a(n-3) -256*a(n-4) -1', 'a(n-2) -65536*a(n-4) -257', 'a(n-1) -16777216*a(n-4) -65793', 'a(n) -4294967296*a(n-4) -16843009', 'a(n-4) -256*a(n-5) -1', 'a(n-3) -65536*a(n-5) -257', 'a(n-2) -16777216*a(n-5) -65793', 'a(n-1) -4294967296*a(n-5) -16843009', 'a(n) -1099511627776*a(n-5) -4311810305', 'a(n-5) -256*a(n-6) -1', 'a(n-4) -65536*a(n-6) -257', 'a(n-3) -16777216*a(n-6) -65793', 'a(n-2) -4294967296*a(n-6) -16843009', 'a(n-1) -1099511627776*a(n-6) -4311810305', 'a(n) -281474976710656*a(n-6) -1103823438081', 'a(n-6) -256*a(n-7) -1', 'a(n-5) -65536*a(n-7) -257', 'a(n-4) -16777216*a(n-7) -65793', 'a(n-3) -4294967296*a(n-7) -16843009', 'a(n-2) -1099511627776*a(n-7) -4311810305', 'a(n-1) -281474976710656*a(n-7) -1103823438081', 'a(n) -72057594037927936*a(n-7) -282578800148737', 'a(n-7) -256*a(n-8) -1', 'a(n-6) -65536*a(n-8) -257', 'a(n-5) -16777216*a(n-8) -65793', 'a(n-4) -4294967296*a(n-8) -16843009', 'a(n-3) -1099511627776*a(n-8) -4311810305', 'a(n-2) -281474976710656*a(n-8) -1103823438081', 'a(n-1) -72057594037927936*a(n-8) -282578800148737', 'a(n) -18446744073709551616*a(n-8) -72340172838076673', 'a(n-8) -256*a(n-9) -1', 'a(n-7) -65536*a(n-9) -257', 'a(n-6) -16777216*a(n-9) -65793', 'a(n-5) -4294967296*a(n-9) -16843009', 'a(n-4) -1099511627776*a(n-9) -4311810305', 'a(n-3) -281474976710656*a(n-9) -1103823438081', 'a(n-2) -72057594037927936*a(n-9) -282578800148737', 'a(n-1) -18446744073709551616*a(n-9) -72340172838076673', 'a(n) -4722366482869645213696*a(n-9) -18519084246547628289', 'a(n-9) -256*a(n-10) -1', 'a(n-8) -65536*a(n-10) -257', 'a(n-7) -16777216*a(n-10) -65793', 'a(n-6) -4294967296*a(n-10) -16843009', 'a(n-5) -1099511627776*a(n-10) -4311810305', 'a(n-4) -281474976710656*a(n-10) -1103823438081', 'a(n-3) -72057594037927936*a(n-10) -282578800148737', 'a(n-2) -18446744073709551616*a(n-10) -72340172838076673', 'a(n-1) -4722366482869645213696*a(n-10) -18519084246547628289', 'a(n) -1208925819614629174706176*a(n-10) -4740885567116192841985', 'a(n-10) -256*a(n-11) -1', 'a(n-9) -65536*a(n-11) -257', 'a(n-8) -16777216*a(n-11) -65793', 'a(n-7) -4294967296*a(n-11) -16843009', 'a(n-6) -1099511627776*a(n-11) -4311810305', 'a(n-5) -281474976710656*a(n-11) -1103823438081', 'a(n-4) -72057594037927936*a(n-11) -282578800148737', 'a(n-3) -18446744073709551616*a(n-11) -72340172838076673', 'a(n-2) -4722366482869645213696*a(n-11) -18519084246547628289', 'a(n-1) -1208925819614629174706176*a(n-11) -4740885567116192841985', 'a(n-11) -256*a(n-12) -1', 'a(n-10) -65536*a(n-12) -257', 'a(n-9) -16777216*a(n-12) -65793', 'a(n-8) -4294967296*a(n-12) -16843009', 'a(n-7) -1099511627776*a(n-12) -4311810305', 'a(n-6) -281474976710656*a(n-12) -1103823438081', 'a(n-5) -72057594037927936*a(n-12) -282578800148737', 'a(n-4) -18446744073709551616*a(n-12) -72340172838076673', 'a(n-3) -4722366482869645213696*a(n-12) -18519084246547628289', 'a(n-2) -1208925819614629174706176*a(n-12) -4740885567116192841985', 'a(n-12) -256*a(n-13) -1', 'a(n-11) -65536*a(n-13) -257', 'a(n-10) -16777216*a(n-13) -65793', 'a(n-9) -4294967296*a(n-13) -16843009', 'a(n-8) -1099511627776*a(n-13) -4311810305', 'a(n-7) -281474976710656*a(n-13) -1103823438081', 'a(n-6) -72057594037927936*a(n-13) -282578800148737', 'a(n-5) -18446744073709551616*a(n-13) -72340172838076673', 'a(n-4) -4722366482869645213696*a(n-13) -18519084246547628289', 'a(n-3) -1208925819614629174706176*a(n-13) -4740885567116192841985', 'a(n-13) -256*a(n-14) -1', 'a(n-12) -65536*a(n-14) -257', 'a(n-11) -16777216*a(n-14) -65793', 'a(n-10) -4294967296*a(n-14) -16843009', 'a(n-9) -1099511627776*a(n-14) -4311810305', 'a(n-8) -281474976710656*a(n-14) -1103823438081', 'a(n-7) -72057594037927936*a(n-14) -282578800148737', 'a(n-6) -18446744073709551616*a(n-14) -72340172838076673', 'a(n-5) -4722366482869645213696*a(n-14) -18519084246547628289', 'a(n-4) -1208925819614629174706176*a(n-14) -4740885567116192841985', 'a(n-14) -256*a(n-15) -1', 'a(n-13) -65536*a(n-15) -257', 'a(n-12) -16777216*a(n-15) -65793', 'a(n-11) -4294967296*a(n-15) -16843009', 'a(n-10) -1099511627776*a(n-15) -4311810305', 'a(n-9) -281474976710656*a(n-15) -1103823438081', 'a(n-8) -72057594037927936*a(n-15) -282578800148737', 'a(n-7) -18446744073709551616*a(n-15) -72340172838076673', 'a(n-6) -4722366482869645213696*a(n-15) -18519084246547628289', 'a(n-5) -1208925819614629174706176*a(n-15) -4740885567116192841985', 'a(n-15) -256*a(n-16) -1', 'a(n-14) -65536*a(n-16) -257', 'a(n-13) -16777216*a(n-16) -65793', 'a(n-12) -4294967296*a(n-16) -16843009', 'a(n-11) -1099511627776*a(n-16) -4311810305', 'a(n-10) -281474976710656*a(n-16) -1103823438081', 'a(n-9) -72057594037927936*a(n-16) -282578800148737', 'a(n-8) -18446744073709551616*a(n-16) -72340172838076673', 'a(n-7) -4722366482869645213696*a(n-16) -18519084246547628289', 'a(n-6) -1208925819614629174706176*a(n-16) -4740885567116192841985', 'a(n-16) -256*a(n-17) -1', 'a(n-15) -65536*a(n-17) -257', 'a(n-14) -16777216*a(n-17) -65793', 'a(n-13) -4294967296*a(n-17) -16843009', 'a(n-12) -1099511627776*a(n-17) -4311810305', 'a(n-11) -281474976710656*a(n-17) -1103823438081', 'a(n-10) -72057594037927936*a(n-17) -282578800148737', 'a(n-9) -18446744073709551616*a(n-17) -72340172838076673', 'a(n-8) -4722366482869645213696*a(n-17) -18519084246547628289', 'a(n-7) -1208925819614629174706176*a(n-17) -4740885567116192841985', 'a(n-17) -256*a(n-18) -1', 'a(n-16) -65536*a(n-18) -257', 'a(n-15) -16777216*a(n-18) -65793', 'a(n-14) -4294967296*a(n-18) -16843009', 'a(n-13) -1099511627776*a(n-18) -4311810305', 'a(n-12) -281474976710656*a(n-18) -1103823438081', 'a(n-11) -72057594037927936*a(n-18) -282578800148737', 'a(n-10) -18446744073709551616*a(n-18) -72340172838076673', 'a(n-9) -4722366482869645213696*a(n-18) -18519084246547628289', 'a(n-8) -1208925819614629174706176*a(n-18) -4740885567116192841985', 'a(n-18) -256*a(n-19) -1', 'a(n-17) -65536*a(n-19) -257', 'a(n-16) -16777216*a(n-19) -65793', 'a(n-15) -4294967296*a(n-19) -16843009', 'a(n-14) -1099511627776*a(n-19) -4311810305', 'a(n-13) -281474976710656*a(n-19) -1103823438081', 'a(n-12) -72057594037927936*a(n-19) -282578800148737', 'a(n-11) -18446744073709551616*a(n-19) -72340172838076673', 'a(n-10) -4722366482869645213696*a(n-19) -18519084246547628289', 'a(n-9) -1208925819614629174706176*a(n-19) -4740885567116192841985', 'a(n-19) -256*a(n-20) -1', 'a(n-18) -65536*a(n-20) -257', 'a(n-17) -16777216*a(n-20) -65793', 'a(n-16) -4294967296*a(n-20) -16843009', 'a(n-15) -1099511627776*a(n-20) -4311810305', 'a(n-14) -281474976710656*a(n-20) -1103823438081', 'a(n-13) -72057594037927936*a(n-20) -282578800148737', 'a(n-12) -18446744073709551616*a(n-20) -72340172838076673', 'a(n-11) -4722366482869645213696*a(n-20) -18519084246547628289', 'a(n-10) -1208925819614629174706176*a(n-20) -4740885567116192841985']
A218723: 
MB not reconst
truth: 
a(n) = 257*a(n - 1) + -256*a(n - 2),  
a(0) = 0, a(1) = 1

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

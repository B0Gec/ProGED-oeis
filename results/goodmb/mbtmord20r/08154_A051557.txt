
orders_used: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:8155/10000, seq_id:A051557, order:20 took:
 17.3 seconds, i.e. 0.29 minutes or 0.005 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 8.
eqs_explicit:
['a(n) = 946*a(n-10)/697 - 491*a(n-9)/697 + 648*a(n-8)/697 - 1183*a(n-7)/697 + 16/17']
non_linears:
['a(n-5)^2 +(16/3)*a(n-3) +(4/3)*a(n-4) +(-131/17)*a(n-5) +(-52/17)*a(n-6) +(14/51)*a(n-7) +(122/17)*a(n-8) -906/17', 'n +(43/33)*a(n-3) +(4/33)*a(n-4) +(3/187)*a(n-5) +(-89/187)*a(n-6) +(260/561)*a(n-7) +(284/187)*a(n-8) -5069/187', 'a(n-7)^2 +(83/33)*a(n-3) +(-79/33)*a(n-4) +(213/187)*a(n-5) +(-896/187)*a(n-6) +(-3980/561)*a(n-7) +(-32/187)*a(n-8) +2881/187', 'a(n-8)^2 +(272/33)*a(n-3) +(122/33)*a(n-4) +(-134/187)*a(n-5) +(-388/187)*a(n-6) +(-1640/561)*a(n-7) +(93/187)*a(n-8) -14316/187', 'a(n-5)*a(n-6) +(-100/33)*a(n-3) +(92/33)*a(n-4) +(-1130/187)*a(n-5) +(-386/187)*a(n-6) +(-1940/561)*a(n-7) +(240/187)*a(n-8) +5040/187', 'a(n-3)*a(n-4) +(-5/44)*a(n-3) +(-79/44)*a(n-4) +(-1055/748)*a(n-5) +(142/187)*a(n-6) +(-2033/748)*a(n-7) +(1274/187)*a(n-8) -29307/748', 'a(n-6)*a(n-8) +(-614/33)*a(n-3) +(-65/11)*a(n-4) +(-337/561)*a(n-5) +(149/561)*a(n-6) +(-1466/561)*a(n-7) +(-4297/187)*a(n-8) +132835/561', 'a(n-6)*a(n-7) +(-652/33)*a(n-3) +(-73/11)*a(n-4) +(-809/561)*a(n-5) +(937/561)*a(n-6) +(-3466/561)*a(n-7) +(-4065/187)*a(n-8) +143711/561', 'a(n-3)*a(n-5) +(460/33)*a(n-3) +(74/33)*a(n-4) +(-2138/561)*a(n-5) +(-5264/561)*a(n-6) +(716/187)*a(n-7) +(3054/187)*a(n-8) -88846/561', 'a(n-3)^2 +(314/33)*a(n-3) +(229/33)*a(n-4) +(23/561)*a(n-5) +(-3238/561)*a(n-6) +(-201/187)*a(n-7) +(4258/187)*a(n-8) -118649/561', 'a(n-4) +(23/85)*a(n-5) +(-1/85)*a(n-6) +(-8/17)*a(n-7) +(9/85)*a(n-8) +(96/85)*a(n-9) -193/17', 'a(n-3) +(14/85)*a(n-5) +(-33/85)*a(n-6) +(5/17)*a(n-7) +(77/85)*a(n-8) +(-12/85)*a(n-9) -162/17', 'n +(-59/255)*a(n-5) +(8/255)*a(n-6) +(7/51)*a(n-7) +(83/255)*a(n-8) +(4/85)*a(n-9) -679/51', 'a(n-5)*a(n-9) +(-368/51)*a(n-5) +(98/51)*a(n-6) +(-70/51)*a(n-7) +(98/51)*a(n-8) +(-108/17)*a(n-9) +1894/51', 'a(n-7)^2 +(70/51)*a(n-5) +(-196/51)*a(n-6) +(-457/51)*a(n-7) +(-112/51)*a(n-8) +(52/17)*a(n-9) +622/51', 'a(n-5)^2 +(-2281/255)*a(n-5) +(-248/255)*a(n-6) +(-2/3)*a(n-7) +(562/255)*a(n-8) +(-64/85)*a(n-9) +38/3', 'a(n-1) +(-17/15)*a(n-5) +(178/255)*a(n-6) +(-52/51)*a(n-7) +(403/255)*a(n-8) +(-131/85)*a(n-9) +46/51', 'a(n-6)*a(n-7) +(184/51)*a(n-5) +(-310/51)*a(n-6) +(-178/51)*a(n-7) +(-160/51)*a(n-8) +(80/17)*a(n-9) -380/51', 'a(n-9)^2 +(22/15)*a(n-5) +(-158/255)*a(n-6) +(92/51)*a(n-7) +(-968/255)*a(n-8) +(-749/85)*a(n-9) +868/51', 'a(n-6)*a(n-9) +(1016/255)*a(n-5) +(-2042/255)*a(n-6) +(4/3)*a(n-7) +(-962/255)*a(n-8) +(164/85)*a(n-9) -28/3', 'a(n-6) +(13/41)*a(n-7) +(10/41)*a(n-8) +(-32/41)*a(n-9) +(27/41)*a(n-10) -5', 'a(n-5) +(-4/41)*a(n-7) +(-22/41)*a(n-8) +(13/41)*a(n-9) +(39/41)*a(n-10) -10', 'a(n-3) +(302/697)*a(n-7) +(759/697)*a(n-8) +(-346/697)*a(n-9) +(69/697)*a(n-10) -167/17', 'a(n-2) +(737/697)*a(n-7) +(-518/697)*a(n-8) +(485/697)*a(n-9) +(-554/697)*a(n-10) -81/17', 'n +(73/697)*a(n-7) +(135/697)*a(n-8) +(101/697)*a(n-9) +(139/697)*a(n-10) -263/17', 'a(n-4) +(-307/697)*a(n-7) +(177/697)*a(n-8) +(721/697)*a(n-9) +(-174/697)*a(n-10) -148/17', 'a(n-1) +(-942/697)*a(n-7) +(559/697)*a(n-8) +(-444/697)*a(n-9) +(431/697)*a(n-10) -118/17', 'a(n) +(1183/697)*a(n-7) +(-648/697)*a(n-8) +(491/697)*a(n-9) +(-946/697)*a(n-10) -16/17']
A051557: 
a(n) = 946*a(n-10)/697 - 491*a(n-9)/697 + 648*a(n-8)/697 - 1183*a(n-7)/697 + 16/17
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

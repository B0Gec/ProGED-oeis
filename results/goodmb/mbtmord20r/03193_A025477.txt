
orders_used: [2, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 9, 10, 10, 10, 10, 10, 10, 10, 11, 10, 11, 10, 11, 11, 11, 11, 11, 11]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:3194/10000, seq_id:A025477, order:20 took:
 25.0 seconds, i.e. 0.42 minutes or 0.007 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 2.
eqs_explicit:
['a(n) = 7*a(n-11)/5 - a(n-10) + 4*a(n-9)/5 + 8/5']
non_linears:
['a(n)*a(n-1)*a(n-2) -2*a(n)*a(n-1) -2*a(n)*a(n-2) -2*a(n-1)*a(n-2) +4*a(n) +4*a(n-1) +4*a(n-2) -8', 'a(n-6)*a(n-7) -3*a(n-3) -2*a(n-6) -5*a(n-7) +3*a(n-8) +16', 'a(n-4)*a(n-7) +(2/7)*a(n-3) +(-26/7)*a(n-4) +(6/7)*a(n-6) +(-18/7)*a(n-7) +(-8/7)*a(n-8) +62/7', 'a(n-4)*a(n-6) +(-55/7)*a(n-3) +(-13/7)*a(n-4) +(-25/7)*a(n-6) +(-58/7)*a(n-7) +(59/7)*a(n-8) +269/7', 'a(n-5)*a(n-7) +9*a(n-3) +a(n-4) -4*a(n-5) -5*a(n-6) +2*a(n-7) -7*a(n-8) -7', 'a(n-3)^2 +(-13/4)*a(n-3) +(-9/4)*a(n-4) +(-3/2)*a(n-5) +(3/4)*a(n-6) +7*a(n-7) +(-19/4)*a(n-8) -7/4', 'a(n-5)^2 +(55/7)*a(n-3) +(-1/7)*a(n-4) -9*a(n-5) +(-31/7)*a(n-6) +(44/7)*a(n-7) +(-45/7)*a(n-8) -3/7', 'a(n-8)^2 +(31/7)*a(n-3) +(-11/7)*a(n-4) -2*a(n-5) +(-5/7)*a(n-6) +(50/7)*a(n-7) +(-54/7)*a(n-8) -75/7', 'a(n-4)^2 +(-41/4)*a(n-3) +(-29/4)*a(n-4) +(1/2)*a(n-5) +(11/4)*a(n-6) -9*a(n-7) +(37/4)*a(n-8) +169/4', 'n +(1/14)*a(n-3) +(-13/14)*a(n-4) -a(n-5) +(-11/14)*a(n-6) +(-1/7)*a(n-7) +(-11/14)*a(n-8) +3/14', 'a(n-6)*a(n-8) +(5/28)*a(n-3) +(5/28)*a(n-4) +(1/2)*a(n-5) +(-55/28)*a(n-6) +(1/7)*a(n-7) +(-97/28)*a(n-8) +99/28', 'a(n-8)*a(n-9) -2*a(n-8) -2*a(n-9) +4', 'a(n-4) +(3/59)*a(n-5) +(-14/59)*a(n-6) +(-33/59)*a(n-7) +(36/59)*a(n-8) +(-47/59)*a(n-9) -75/59', 'a(n-3) +(-17/59)*a(n-5) +(-19/59)*a(n-6) +(69/59)*a(n-7) +(-27/59)*a(n-8) +(-9/59)*a(n-9) -224/59', 'n +(-55/59)*a(n-5) +(-58/59)*a(n-6) +(-44/59)*a(n-7) +(-11/59)*a(n-8) +(-43/59)*a(n-9) -41/59', 'a(n-6)^2 +(-32/59)*a(n-5) +(-421/59)*a(n-6) +(-2/59)*a(n-7) +(88/59)*a(n-8) +(-10/59)*a(n-9) +564/59', 'a(n-5)*a(n-6) +(-175/59)*a(n-5) +(-88/59)*a(n-6) +(96/59)*a(n-7) +(24/59)*a(n-8) +(-51/59)*a(n-9) +68/59', 'a(n-7)*a(n-9) +(10/59)*a(n-5) +(32/59)*a(n-6) +(-110/59)*a(n-7) +(2/59)*a(n-8) +(-196/59)*a(n-9) +222/59', 'a(n-8)^2 +(-38/59)*a(n-5) +(20/59)*a(n-6) +(64/59)*a(n-7) +(-279/59)*a(n-8) +(-34/59)*a(n-9) +242/59', 'a(n-7)*a(n-8) +(9/59)*a(n-5) +(-42/59)*a(n-6) +(-217/59)*a(n-7) +(-187/59)*a(n-8) +(36/59)*a(n-9) +719/59', 'a(n-6)*a(n-8) +(32/59)*a(n-5) +(-110/59)*a(n-6) +(2/59)*a(n-7) +(-206/59)*a(n-8) +(10/59)*a(n-9) +262/59', 'a(n-5) +a(n-9) -a(n-10) -4', 'a(n-9)*a(n-10) -2*a(n-9) -2*a(n-10) +4', 'a(n-8)*a(n-9) -2*a(n-8) -2*a(n-9) +4', 'a(n-8)*a(n-10) +(4/3)*a(n-7) +(4/3)*a(n-9) -4*a(n-10) -16/3', 'a(n-7)*a(n-8) -7*a(n-7) -11*a(n-8) -5*a(n-9) +3*a(n-10) +51', 'a(n-4) +(-5/3)*a(n-7) -2*a(n-8) +(-8/3)*a(n-9) +a(n-10) +35/3', 'a(n-3) +(-1/3)*a(n-7) -4*a(n-8) +(-7/3)*a(n-9) +a(n-10) +37/3', 'a(n-7)*a(n-10) -12*a(n-7) -18*a(n-8) -10*a(n-9) +4*a(n-10) +98', 'a(n-7)*a(n-9) +(2/3)*a(n-7) +6*a(n-8) +(2/3)*a(n-9) -2*a(n-10) -74/3', 'a(n-8)^2 +(8/3)*a(n-7) -a(n-8) +(8/3)*a(n-9) -2*a(n-10) -50/3', 'a(n-6) +a(n-10) -a(n-11) -4', 'a(n-5) +a(n-9) -a(n-10) -4', 'a(n-10)*a(n-11) -2*a(n-10) -2*a(n-11) +4', 'a(n-9)*a(n-10) -2*a(n-9) -2*a(n-10) +4', 'a(n-11)^2 +(-6/5)*a(n-9) +(-13/5)*a(n-11) +18/5', 'a(n-9)^2 +(-29/5)*a(n-9) +(-2/5)*a(n-11) +42/5', 'a(n-9)*a(n-11) +(-12/5)*a(n-9) +(-16/5)*a(n-11) +36/5', 'a(n-3) +4*a(n-9) +4*a(n-10) -2*a(n-11) -22', 'a(n-2) +a(n-9) +a(n-10) +a(n-11) -11', 'a(n) +(-4/5)*a(n-9) +a(n-10) +(-7/5)*a(n-11) -8/5']
A025477: 
a(n) = 7*a(n-11)/5 - a(n-10) + 4*a(n-9)/5 + 8/5
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

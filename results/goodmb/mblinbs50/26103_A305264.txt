
orders_used: [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
While total time consumed by now, scale:26104/27236, seq_id:A305264, order:20 took:
 47.8 seconds, i.e. 0.8 minutes or 0.013 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
non_linears:
['a(n) -2*a(n-1) -771', 'a(n-1) -2*a(n-2) -771', 'a(n) -4*a(n-2) -2313', 'a(n-2) -2*a(n-3) -771', 'a(n-1) -4*a(n-3) -2313', 'a(n) -8*a(n-3) -5397', 'a(n-3) -2*a(n-4) -771', 'a(n-2) -4*a(n-4) -2313', 'a(n-1) -8*a(n-4) -5397', 'a(n) -16*a(n-4) -11565', 'a(n-4) -2*a(n-5) -771', 'a(n-3) -4*a(n-5) -2313', 'a(n-2) -8*a(n-5) -5397', 'a(n-1) -16*a(n-5) -11565', 'a(n) -32*a(n-5) -23901', 'a(n-5) -2*a(n-6) -771', 'a(n-4) -4*a(n-6) -2313', 'a(n-3) -8*a(n-6) -5397', 'a(n-2) -16*a(n-6) -11565', 'a(n-1) -32*a(n-6) -23901', 'a(n) -64*a(n-6) -48573', 'a(n-6) -2*a(n-7) -771', 'a(n-5) -4*a(n-7) -2313', 'a(n-4) -8*a(n-7) -5397', 'a(n-3) -16*a(n-7) -11565', 'a(n-2) -32*a(n-7) -23901', 'a(n-1) -64*a(n-7) -48573', 'a(n) -128*a(n-7) -97917', 'a(n-7) -2*a(n-8) -771', 'a(n-6) -4*a(n-8) -2313', 'a(n-5) -8*a(n-8) -5397', 'a(n-4) -16*a(n-8) -11565', 'a(n-3) -32*a(n-8) -23901', 'a(n-2) -64*a(n-8) -48573', 'a(n-1) -128*a(n-8) -97917', 'a(n) -256*a(n-8) -196605', 'a(n-8) -2*a(n-9) -771', 'a(n-7) -4*a(n-9) -2313', 'a(n-6) -8*a(n-9) -5397', 'a(n-5) -16*a(n-9) -11565', 'a(n-4) -32*a(n-9) -23901', 'a(n-3) -64*a(n-9) -48573', 'a(n-2) -128*a(n-9) -97917', 'a(n-1) -256*a(n-9) -196605', 'a(n) -512*a(n-9) -393981', 'a(n-9) -2*a(n-10) -771', 'a(n-8) -4*a(n-10) -2313', 'a(n-7) -8*a(n-10) -5397', 'a(n-6) -16*a(n-10) -11565', 'a(n-5) -32*a(n-10) -23901', 'a(n-4) -64*a(n-10) -48573', 'a(n-3) -128*a(n-10) -97917', 'a(n-2) -256*a(n-10) -196605', 'a(n-1) -512*a(n-10) -393981', 'a(n) -1024*a(n-10) -788733', 'a(n-10) -2*a(n-11) -771', 'a(n-9) -4*a(n-11) -2313', 'a(n-8) -8*a(n-11) -5397', 'a(n-7) -16*a(n-11) -11565', 'a(n-6) -32*a(n-11) -23901', 'a(n-5) -64*a(n-11) -48573', 'a(n-4) -128*a(n-11) -97917', 'a(n-3) -256*a(n-11) -196605', 'a(n-2) -512*a(n-11) -393981', 'a(n-1) -1024*a(n-11) -788733', 'a(n-11) -2*a(n-12) -771', 'a(n-10) -4*a(n-12) -2313', 'a(n-9) -8*a(n-12) -5397', 'a(n-8) -16*a(n-12) -11565', 'a(n-7) -32*a(n-12) -23901', 'a(n-6) -64*a(n-12) -48573', 'a(n-5) -128*a(n-12) -97917', 'a(n-4) -256*a(n-12) -196605', 'a(n-3) -512*a(n-12) -393981', 'a(n-2) -1024*a(n-12) -788733', 'a(n-12) -2*a(n-13) -771', 'a(n-11) -4*a(n-13) -2313', 'a(n-10) -8*a(n-13) -5397', 'a(n-9) -16*a(n-13) -11565', 'a(n-8) -32*a(n-13) -23901', 'a(n-7) -64*a(n-13) -48573', 'a(n-6) -128*a(n-13) -97917', 'a(n-5) -256*a(n-13) -196605', 'a(n-4) -512*a(n-13) -393981', 'a(n-3) -1024*a(n-13) -788733', 'a(n-13) -2*a(n-14) -771', 'a(n-12) -4*a(n-14) -2313', 'a(n-11) -8*a(n-14) -5397', 'a(n-10) -16*a(n-14) -11565', 'a(n-9) -32*a(n-14) -23901', 'a(n-8) -64*a(n-14) -48573', 'a(n-7) -128*a(n-14) -97917', 'a(n-6) -256*a(n-14) -196605', 'a(n-5) -512*a(n-14) -393981', 'a(n-4) -1024*a(n-14) -788733', 'a(n-14) -2*a(n-15) -771', 'a(n-13) -4*a(n-15) -2313', 'a(n-12) -8*a(n-15) -5397', 'a(n-11) -16*a(n-15) -11565', 'a(n-10) -32*a(n-15) -23901', 'a(n-9) -64*a(n-15) -48573', 'a(n-8) -128*a(n-15) -97917', 'a(n-7) -256*a(n-15) -196605', 'a(n-6) -512*a(n-15) -393981', 'a(n-5) -1024*a(n-15) -788733', 'a(n-15) -2*a(n-16) -771', 'a(n-14) -4*a(n-16) -2313', 'a(n-13) -8*a(n-16) -5397', 'a(n-12) -16*a(n-16) -11565', 'a(n-11) -32*a(n-16) -23901', 'a(n-10) -64*a(n-16) -48573', 'a(n-9) -128*a(n-16) -97917', 'a(n-8) -256*a(n-16) -196605', 'a(n-7) -512*a(n-16) -393981', 'a(n-6) -1024*a(n-16) -788733', 'a(n-16) -2*a(n-17) -771', 'a(n-15) -4*a(n-17) -2313', 'a(n-14) -8*a(n-17) -5397', 'a(n-13) -16*a(n-17) -11565', 'a(n-12) -32*a(n-17) -23901', 'a(n-11) -64*a(n-17) -48573', 'a(n-10) -128*a(n-17) -97917', 'a(n-9) -256*a(n-17) -196605', 'a(n-8) -512*a(n-17) -393981', 'a(n-7) -1024*a(n-17) -788733', 'a(n-17) -2*a(n-18) -771', 'a(n-16) -4*a(n-18) -2313', 'a(n-15) -8*a(n-18) -5397', 'a(n-14) -16*a(n-18) -11565', 'a(n-13) -32*a(n-18) -23901', 'a(n-12) -64*a(n-18) -48573', 'a(n-11) -128*a(n-18) -97917', 'a(n-10) -256*a(n-18) -196605', 'a(n-9) -512*a(n-18) -393981', 'a(n-8) -1024*a(n-18) -788733', 'a(n-18) -2*a(n-19) -771', 'a(n-17) -4*a(n-19) -2313', 'a(n-16) -8*a(n-19) -5397', 'a(n-15) -16*a(n-19) -11565', 'a(n-14) -32*a(n-19) -23901', 'a(n-13) -64*a(n-19) -48573', 'a(n-12) -128*a(n-19) -97917', 'a(n-11) -256*a(n-19) -196605', 'a(n-10) -512*a(n-19) -393981', 'a(n-9) -1024*a(n-19) -788733', 'a(n-19) -2*a(n-20) -771', 'a(n-18) -4*a(n-20) -2313', 'a(n-17) -8*a(n-20) -5397', 'a(n-16) -16*a(n-20) -11565', 'a(n-15) -32*a(n-20) -23901', 'a(n-14) -64*a(n-20) -48573', 'a(n-13) -128*a(n-20) -97917', 'a(n-12) -256*a(n-20) -196605', 'a(n-11) -512*a(n-20) -393981', 'a(n-10) -1024*a(n-20) -788733']
A305264: 
MB not reconst
truth: 
a(n) = 3*a(n - 1) + -2*a(n - 2),  
a(0) = 65, a(1) = 901

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

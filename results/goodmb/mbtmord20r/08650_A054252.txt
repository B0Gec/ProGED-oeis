
orders_used: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 7, 6, 7, 7, 7, 7, 7, 6, 6, 6, 8, 7, 6, 8, 8, 8, 8, 8, 7, 7, 9, 8, 7, 6, 9, 9, 9, 9, 8, 8, 10, 9, 8, 7, 6, 9, 9, 9, 8, 11, 10, 9, 8, 7, 9, 9, 12, 11, 10, 9, 8, 13, 12, 11, 10, 14, 13, 12, 11, 10]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:8651/10000, seq_id:A054252, order:20 took:
 57.3 seconds, i.e. 0.95 minutes or 0.016 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 3.
eqs_explicit:
[]
non_linears:
['n*a(n-3) +(-47/46)*a(n-1)*a(n-3) +(43/23)*a(n-2)*a(n-3) +(-81/46)*a(n-3)^2 -n +(47/46)*a(n-1) +(-43/23)*a(n-2) +(-82/23)*a(n-3) +245/46', 'a(n-1)*a(n-3)^2 +(135/46)*a(n-1)*a(n-3) +(-308/23)*a(n-2)*a(n-3) +(-519/46)*a(n-3)^2 +(-181/46)*a(n-1) +(308/23)*a(n-2) +(950/23)*a(n-3) -1381/46', 'a(n)*a(n-3) +(-449/92)*a(n-1)*a(n-3) +(189/23)*a(n-2)*a(n-3) +(-581/92)*a(n-3)^2 -a(n) +(449/92)*a(n-1) +(-189/23)*a(n-2) +(336/23)*a(n-3) -763/92', 'a(n-2)^2*a(n-3) -a(n-2)^2 +(105/46)*a(n-1)*a(n-3) +(-237/23)*a(n-2)*a(n-3) +(-1155/46)*a(n-3)^2 +(-105/46)*a(n-1) +(237/23)*a(n-2) +(1894/23)*a(n-3) -2633/46', 'a(n-3)^3 +(-1317/46)*a(n-1)*a(n-3) +(1684/23)*a(n-2)*a(n-3) +(-4097/46)*a(n-3)^2 +(1317/46)*a(n-1) +(-1684/23)*a(n-2) +(4959/23)*a(n-3) -5867/46', 'a(n-2)*a(n-3)^2 +(-1011/46)*a(n-1)*a(n-3) +(1245/23)*a(n-2)*a(n-3) +(-3599/46)*a(n-3)^2 +(1011/46)*a(n-1) +(-1268/23)*a(n-2) +(4590/23)*a(n-3) -5581/46', 'a(n-1)^2*a(n-3) -a(n-1)^2 +(2991/46)*a(n-1)*a(n-3) +(-4620/23)*a(n-2)*a(n-3) +(8085/46)*a(n-3)^2 +(-2991/46)*a(n-1) +(4620/23)*a(n-2) +(-9026/23)*a(n-3) +9967/46', 'a(n-2)^3 -6*a(n-2)^2 +(2409/46)*a(n-1)*a(n-3) +(-3238/23)*a(n-2)*a(n-3) +(4367/46)*a(n-3)^2 +(-2409/46)*a(n-1) +(3491/23)*a(n-2) +(-4517/23)*a(n-3) +4391/46', 'a(n-1)^3 -6*a(n-1)^2 -105*a(n-2)^2 +(-1437/46)*a(n-1)*a(n-3) +(4544/23)*a(n-2)*a(n-3) +(-3421/46)*a(n-3)^2 +(1943/46)*a(n-1) +(2701/23)*a(n-2) +(1306/23)*a(n-3) -9127/46', 'a(n)*a(n-2) -15*a(n-2)^2 +(-303/161)*a(n-1)*a(n-3) +(6876/161)*a(n-2)*a(n-3) +(-5269/161)*a(n-3)^2 -a(n) +(303/161)*a(n-1) +(208/161)*a(n-2) +(9234/161)*a(n-3) -8634/161', 'a(n-3)*a(n-4)^2 +(-11/9)*a(n-3)*a(n-4) +(-184/9)*a(n-4)^2 +(2/9)*a(n-3) +(536/9)*a(n-4) -352/9', 'a(n-4)^3 +(10/9)*a(n-3)*a(n-4) +(-124/9)*a(n-4)^2 +(-10/9)*a(n-3) +(299/9)*a(n-4) -184/9', 'a(n-3)^2*a(n-4) -a(n-3)^2 +(-41/9)*a(n-3)*a(n-4) +(-280/9)*a(n-4)^2 +(41/9)*a(n-3) +(872/9)*a(n-4) -592/9', 'a(n-3)^3 -6*a(n-3)^2 +(-80/9)*a(n-3)*a(n-4) +(-385/9)*a(n-4)^2 +(179/9)*a(n-3) +(1235/9)*a(n-4) -904/9', 'a(n-2)*a(n-4) +(-68/27)*a(n-3)*a(n-4) +(71/27)*a(n-4)^2 -a(n-2) +(68/27)*a(n-3) +(-172/27)*a(n-4) +101/27', 'n*a(n-4) +(-19/27)*a(n-3)*a(n-4) +(25/27)*a(n-4)^2 -n +(19/27)*a(n-3) +(-299/27)*a(n-4) +274/27', 'n*a(n-3) -4*a(n-3)^2 +(227/21)*a(n-3)*a(n-4) +(-55/6)*a(n-4)^2 -n +(-143/21)*a(n-3) +(701/42)*a(n-4) -158/21', 'a(n-1)*a(n-4) +(-110/27)*a(n-3)*a(n-4) +(176/27)*a(n-4)^2 -a(n-1) +(110/27)*a(n-3) +(-445/27)*a(n-4) +269/27', 'a(n)*a(n-4) +(-107/27)*a(n-3)*a(n-4) +(209/27)*a(n-4)^2 -a(n) +(107/27)*a(n-3) +(-601/27)*a(n-4) +392/27', 'a(n-2)^3 -6*a(n-2)^2 -105*a(n-3)^2 +(1070/9)*a(n-3)*a(n-4) +(70/9)*a(n-4)^2 +11*a(n-2) +(1765/9)*a(n-3) +(-1280/9)*a(n-4) -734/9', 'a(n-5)^3 -6*a(n-5)^2 +11*a(n-5) -6', 'n*a(n-5) -4*a(n-5)^2 -n +2*a(n-5) +2', 'a(n)*a(n-5) -8*a(n-5)^2 -a(n) +16*a(n-5) -8', 'a(n-4)*a(n-5) -7*a(n-5)^2 -a(n-4) +20*a(n-5) -13', 'a(n-3)*a(n-5) -15*a(n-5)^2 -a(n-3) +44*a(n-5) -29', 'a(n-2)*a(n-5) -22*a(n-5)^2 -a(n-2) +65*a(n-5) -43', 'a(n-1)*a(n-5) -20*a(n-5)^2 -a(n-1) +57*a(n-5) -37', 'a(n-4)^3 -6*a(n-4)^2 -105*a(n-5)^2 +11*a(n-4) +315*a(n-5) -216', 'a(n-2)*a(n-4) -15*a(n-4)^2 +238*a(n-5)^2 -a(n-2) +44*a(n-4) -714*a(n-5) +447', 'n*a(n-4) -4*a(n-4)^2 +(133/2)*a(n-5)^2 -n +3*a(n-4) +(-399/2)*a(n-5) +134', 'a(n-6)^2 -3*a(n-6) +2', 'a(n-5)*a(n-6) -a(n-5) -a(n-6) +1', 'a(n-4)*a(n-6) -a(n-4) -a(n-6) +1', 'a(n-3)*a(n-6) -a(n-3) -a(n-6) +1', 'a(n-2)*a(n-6) -a(n-2) -3*a(n-6) +3', 'a(n-1)*a(n-6) -a(n-1) -8*a(n-6) +8', 'n*a(n-6) -n -11*a(n-6) +11', 'a(n)*a(n-6) -a(n) -16*a(n-6) +16', 'a(n-7)^2 -3*a(n-7) +2', 'a(n-6)^2 -3*a(n-6) +2', 'a(n-6)*a(n-7) -a(n-6) -a(n-7) +1', 'a(n-5)*a(n-7) -a(n-5) -a(n-7) +1', 'a(n-4)*a(n-7) -a(n-4) -a(n-7) +1', 'a(n-3)*a(n-7) -a(n-3) -3*a(n-7) +3', 'a(n-2)*a(n-7) -a(n-2) -8*a(n-7) +8', 'a(n-5)*a(n-6) -a(n-5) -a(n-6) +1', 'a(n-4)*a(n-6) -a(n-4) -a(n-6) +1', 'a(n-3)*a(n-6) -a(n-3) -a(n-6) +1', 'a(n-8)^2 -3*a(n-8) +2', 'a(n-7)^2 -3*a(n-7) +2', 'a(n-6)^2 -3*a(n-6) +2', 'a(n-7)*a(n-8) -a(n-7) -a(n-8) +1', 'a(n-6)*a(n-8) -a(n-6) -a(n-8) +1', 'a(n-5)*a(n-8) -a(n-5) -a(n-8) +1', 'a(n-4)*a(n-8) -a(n-4) -3*a(n-8) +3', 'a(n-3)*a(n-8) -a(n-3) -8*a(n-8) +8', 'a(n-6)*a(n-7) -a(n-6) -a(n-7) +1', 'a(n-5)*a(n-7) -a(n-5) -a(n-7) +1', 'a(n-9)^2 -3*a(n-9) +2', 'a(n-8)^2 -3*a(n-8) +2', 'a(n-7)^2 -3*a(n-7) +2', 'a(n-6)^2 -3*a(n-6) +2', 'a(n-8)*a(n-9) -a(n-8) -a(n-9) +1', 'a(n-7)*a(n-9) -a(n-7) -a(n-9) +1', 'a(n-6)*a(n-9) -a(n-6) -a(n-9) +1', 'a(n-5)*a(n-9) -a(n-5) -3*a(n-9) +3', 'a(n-7)*a(n-8) -a(n-7) -a(n-8) +1', 'a(n-6)*a(n-8) -a(n-6) -a(n-8) +1', 'a(n-10) -1', 'a(n-9)^2 -3*a(n-9) +2', 'a(n-8)^2 -3*a(n-8) +2', 'a(n-7)^2 -3*a(n-7) +2', 'a(n-6)^2 -3*a(n-6) +2', 'a(n-8)*a(n-9) -a(n-8) -a(n-9) +1', 'a(n-7)*a(n-9) -a(n-7) -a(n-9) +1', 'a(n-6)*a(n-9) -a(n-6) -a(n-9) +1', 'a(n-7)*a(n-8) -a(n-7) -a(n-8) +1', 'a(n-11) -1', 'a(n-10) -1', 'a(n-9)^2 -3*a(n-9) +2', 'a(n-8)^2 -3*a(n-8) +2', 'a(n-7)^2 -3*a(n-7) +2', 'a(n-8)*a(n-9) -a(n-8) -a(n-9) +1', 'a(n-7)*a(n-9) -a(n-7) -a(n-9) +1', 'a(n-12) -1', 'a(n-11) -1', 'a(n-10) -1', 'a(n-9)^2 -3*a(n-9) +2', 'a(n-8)^2 -3*a(n-8) +2', 'a(n-13) -1', 'a(n-12) -1', 'a(n-11) -1', 'a(n-10) -1', 'a(n-14) -1', 'a(n-13) -1', 'a(n-12) -1', 'a(n-11) -1', 'a(n-10) -1']
A054252: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

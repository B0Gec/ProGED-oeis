
orders_used: [2, 2, 2, 1, 2, 2, 2, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 5, 5, 4, 4, 5, 5, 5, 5, 5, 5]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:3747/10000, seq_id:A029305, order:20 took:
 24.3 seconds, i.e. 0.4 minutes or 0.007 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 2.
eqs_explicit:
['a(n) = 2*n/3 + a(n-5)^2/6 + 2*a(n-5)*a(n-3) - 3*a(n-5)/2 + 4*a(n-4)^2/3 - 6*a(n-4) - 2*a(n-3) - 2*a(n-2)']
non_linears:
['a(n)*a(n-1)*a(n-2)', 'a(n-1)*a(n-2)^2 -a(n-1)*a(n-2)', 'a(n-1)^2*a(n-2) -4*a(n-1)*a(n-2)', 'a(n)*a(n-1)^2 -a(n)*a(n-1)', 'n*a(n-1)*a(n-2) -13*a(n-1)*a(n-2)', 'a(n-1)^3 -3*a(n-1)^2 -6*a(n-1)*a(n-2) +2*a(n-1)', 'n*a(n-1)^2 +2*a(n)*a(n-1) -2*n*a(n-1) -4*a(n-1)^2 -18*a(n-1)*a(n-2) +8*a(n-1)', 'a(n-1)*a(n-2)*a(n-3)', 'a(n)*a(n-1) -2*a(n-1)*a(n-3)', 'a(n-2)*a(n-3)^2 -a(n-2)*a(n-3)', 'a(n-1)*a(n-3)^2 -2*a(n-1)*a(n-3)', 'a(n-2)^2*a(n-3) -4*a(n-2)*a(n-3)', 'a(n-1)*a(n-2)^2 -a(n-1)*a(n-2)', 'a(n-3)^3 -3*a(n-3)^2 +2*a(n-3)', 'a(n-2)^3 -3*a(n-2)^2 -6*a(n-2)*a(n-3) +2*a(n-2)', 'n*a(n-3)^2 -n*a(n-3) -3*a(n-1)*a(n-3) -9*a(n-3)^2 +9*a(n-3)', 'a(n)*a(n-2) +(2/3)*n*a(n-3) +(-17/6)*a(n-2)*a(n-3) -4*a(n-3)^2 -2*a(n) +4*a(n-3)', 'a(n-3)*a(n-4)', 'a(n)*a(n-4)', 'a(n-1)*a(n-2) -2*a(n-2)*a(n-4)', 'a(n-2)*a(n-4)^2 -2*a(n-2)*a(n-4)', 'a(n-4)^3 -3*a(n-4)^2 +2*a(n-4)', 'a(n-3)^3 -3*a(n-3)^2 +2*a(n-3)', 'n*a(n-4) -3*a(n-1)*a(n-4) +3*a(n-2)*a(n-4) -3*a(n-4)^2 +2*a(n-4)', 'a(n-1)*a(n-4)^2 -a(n-1)*a(n-4) -2*a(n-2)*a(n-4) -2*a(n-4)^2 +2*a(n-4)', 'a(n-1)*a(n-3) +2*a(n-1)*a(n-4) -2*a(n-2)*a(n-4) -2*a(n-4)^2 -2*a(n-1) +2*a(n-4)', 'a(n-1)^2 -2*a(n-1)*a(n-4) -a(n-2)*a(n-4) +a(n-4)^2 -a(n-1) +a(n-4)', 'a(n-4)*a(n-5)', 'a(n-1)*a(n-5)', 'a(n-3)*a(n-4)', 'a(n)*a(n-4)', 'a(n-2)*a(n-3) -2*a(n-3)*a(n-5)', 'a(n-3)*a(n-5)^2 -2*a(n-3)*a(n-5)', 'a(n)*a(n-5) -a(n-5)^2 +a(n-5)', 'a(n-5)^3 -3*a(n-5)^2 +2*a(n-5)', 'a(n)*a(n-2) -a(n-3)*a(n-5) -a(n-5)^2 +a(n-5)', 'a(n-4)^2 +(3/2)*a(n-3)*a(n-5) +(1/8)*a(n-5)^2 +(-3/4)*a(n) +(1/2)*n +(-3/2)*a(n-2) +(-3/2)*a(n-3) +(-9/2)*a(n-4) +(-9/8)*a(n-5)']
A029305: 
a(n) = 2*n/3 + a(n-5)^2/6 + 2*a(n-5)*a(n-3) - 3*a(n-5)/2 + 4*a(n-4)^2/3 - 6*a(n-4) - 2*a(n-3) - 2*a(n-2)
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

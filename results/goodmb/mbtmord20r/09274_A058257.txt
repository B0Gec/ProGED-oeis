
orders_used: [2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 6, 5, 6, 6, 6]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:9275/10000, seq_id:A058257, order:20 took:
 21.0 seconds, i.e. 0.35 minutes or 0.006 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 2.
eqs_explicit:
['a(n) = (7*n - 42*a(n-6) + 30*a(n-5) + 8*a(n-4) - 2*a(n-3) - 4*a(n-2) + 7*a(n-1) - 72)/(67*a(n-5) - 57)']
non_linears:
['a(n-2)^3 +(-9/10)*a(n)*a(n-2) +(3/10)*n*a(n-2) +(-3/10)*a(n-1)*a(n-2) +(-9/2)*a(n-2)^2 +(9/10)*a(n) +(-3/10)*n +(3/10)*a(n-1) +(29/10)*a(n-2) +3/5', 'a(n)*a(n-2)^2 +(-19/10)*a(n)*a(n-2) +(3/10)*n*a(n-2) +(-3/10)*a(n-1)*a(n-2) +(-3/2)*a(n-2)^2 +(9/10)*a(n) +(-3/10)*n +(3/10)*a(n-1) +(9/10)*a(n-2) +3/5', 'a(n-1)^2*a(n-2) +(-9/10)*a(n)*a(n-2) +(3/10)*n*a(n-2) +(-13/10)*a(n-1)*a(n-2) +(-3/2)*a(n-2)^2 +(9/10)*a(n) +(-3/10)*n +(3/10)*a(n-1) +(9/10)*a(n-2) +3/5', 'a(n-1)*a(n-2)^2 +(-9/10)*a(n)*a(n-2) +(3/10)*n*a(n-2) +(-13/10)*a(n-1)*a(n-2) +(-5/2)*a(n-2)^2 +(9/10)*a(n) +(-3/10)*n +(3/10)*a(n-1) +(19/10)*a(n-2) +3/5', 'n*a(n-2)^2 +(9/10)*a(n)*a(n-2) +(-13/10)*n*a(n-2) +(3/10)*a(n-1)*a(n-2) +(-23/2)*a(n-2)^2 +(-9/10)*a(n) +(3/10)*n +(-3/10)*a(n-1) +(121/10)*a(n-2) -3/5', 'a(n)*a(n-3)^2 -a(n)*a(n-3)', 'a(n-3)^3 +(3/10)*n*a(n-3) +(-9/10)*a(n-1)*a(n-3) +(-3/10)*a(n-2)*a(n-3) +(-9/2)*a(n-3)^2 +(-3/10)*n +(9/10)*a(n-1) +(3/10)*a(n-2) +(13/5)*a(n-3) +9/10', 'a(n-2)*a(n-3)^2 +(3/10)*n*a(n-3) +(-9/10)*a(n-1)*a(n-3) +(-13/10)*a(n-2)*a(n-3) +(-5/2)*a(n-3)^2 +(-3/10)*n +(9/10)*a(n-1) +(3/10)*a(n-2) +(8/5)*a(n-3) +9/10', 'a(n-1)*a(n-3)^2 +(3/10)*n*a(n-3) +(-19/10)*a(n-1)*a(n-3) +(-3/10)*a(n-2)*a(n-3) +(-3/2)*a(n-3)^2 +(-3/10)*n +(9/10)*a(n-1) +(3/10)*a(n-2) +(3/5)*a(n-3) +9/10', 'n*a(n-3)^2 +(-13/10)*n*a(n-3) +(9/10)*a(n-1)*a(n-3) +(3/10)*a(n-2)*a(n-3) +(-25/2)*a(n-3)^2 +(3/10)*n +(-9/10)*a(n-1) +(-3/10)*a(n-2) +(67/5)*a(n-3) -9/10', 'a(n-1)*a(n-4)^2 -a(n-1)*a(n-4)', 'a(n-4)^3 -4*a(n-4)^2 +3*a(n-4)', 'a(n-3)*a(n-4)^2 -a(n-3)*a(n-4) -2*a(n-4)^2 +2*a(n-4)', 'a(n-2)*a(n-4)^2 -a(n-2)*a(n-4) -a(n-4)^2 +a(n-4)', 'a(n)*a(n-4) -a(n-1)*a(n-4) +a(n-2)*a(n-4) -a(n) +a(n-1) -a(n-2) -a(n-4) +1', 'a(n-3)^2 -6*a(n-1)*a(n-4) +6*a(n-2)*a(n-4) +(-7/3)*a(n-4)^2 +6*a(n-1) -6*a(n-2) -a(n-3) +(7/3)*a(n-4)', 'n*a(n-4) -3*a(n-2)*a(n-4) -a(n-3)*a(n-4) +(-5/3)*a(n-4)^2 -n +3*a(n-2) +a(n-3) +(-7/3)*a(n-4) +4', 'a(n-5)^2 -a(n-5)', 'n*a(n-5) -3*a(n-3)*a(n-5) -a(n-4)*a(n-5) -n +3*a(n-3) +a(n-4) -5*a(n-5) +5', 'a(n)*a(n-3) +(3/7)*a(n-3)*a(n-5) +(-136/49)*a(n-4)*a(n-5) +(-17/49)*n +(41/49)*a(n-1) +(57/49)*a(n-2) +(-6/49)*a(n-3) +(66/49)*a(n-4) +(26/49)*a(n-5) -5/49', 'a(n-6)^2 -a(n-6)', 'a(n-5)^2 -a(n-5)', 'a(n-2)*a(n-6) -a(n-2) -a(n-6) +1', 'a(n)*a(n-1) +(-4/3)*n +(-2/3)*a(n-1) +(7/3)*a(n-2) +(7/3)*a(n-3) +2*a(n-4) +(2/3)*a(n-5) +(-1/3)*a(n-6) +6', 'a(n)*a(n-5) +(-57/67)*a(n) +(-7/67)*n +(-7/67)*a(n-1) +(4/67)*a(n-2) +(2/67)*a(n-3) +(-8/67)*a(n-4) +(-30/67)*a(n-5) +(42/67)*a(n-6) +72/67']
A058257: 
a(n) = (7*n - 42*a(n-6) + 30*a(n-5) + 8*a(n-4) - 2*a(n-3) - 4*a(n-2) + 7*a(n-1) - 72)/(67*a(n-5) - 57)
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    


orders_used: [7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:7114/10000, seq_id:A047160, order:20 took:
 38.5 seconds, i.e. 0.64 minutes or 0.011 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 7.
eqs_explicit:
['a(n) = a(n-12)*a(n-8) - 3*a(n-10)/2 - 7*a(n-9)/5 - 19*a(n-8)/15 - 121*a(n-7)/90 - 4*a(n-4)/9 + a(n-3) + 2*a(n-2)/3 + 193/30']
non_linears:
['a(n-2)*a(n-7) +a(n-5)*a(n-7) -3*a(n-7)', 'a(n-5)*a(n-6) +(3/2)*a(n-4)*a(n-7) +(-3/2)*a(n-5) +(-3/2)*a(n-6) +3/2', 'a(n-4)*a(n-7)^2 +(-6/5)*a(n-4)*a(n-7) +(1/5)*a(n-5)*a(n-7) +(-1/5)*a(n-6)*a(n-7) +(-1/5)*a(n-7)', 'a(n-6)*a(n-7)^2 +(3/5)*a(n-4)*a(n-7) +(-3/5)*a(n-5)*a(n-7) +(-12/5)*a(n-6)*a(n-7) +(3/5)*a(n-7)', 'a(n-7)^3 +(1/5)*a(n-4)*a(n-7) +(-1/5)*a(n-5)*a(n-7) +(1/5)*a(n-6)*a(n-7) -4*a(n-7)^2 +(16/5)*a(n-7)', 'a(n-5)*a(n-7)^2 +(7/5)*a(n-4)*a(n-7) +(-12/5)*a(n-5)*a(n-7) +(-3/5)*a(n-6)*a(n-7) -a(n-7)^2 +(12/5)*a(n-7)', 'a(n-3)*a(n-8) +a(n-6)*a(n-8) -3*a(n-8)', 'a(n-4)*a(n-7) +a(n-5)*a(n-8) +(-2/3)*a(n-7)*a(n-8) -a(n-5) +a(n-7)', 'a(n-6)*a(n-7) +(3/2)*a(n-5)*a(n-8) +(-3/2)*a(n-6) +(-3/2)*a(n-7) +3/2', 'a(n-5)*a(n-8)^2 +(-6/5)*a(n-5)*a(n-8) +(1/5)*a(n-6)*a(n-8) +(-1/5)*a(n-7)*a(n-8) +(-1/5)*a(n-8)', 'a(n-7)*a(n-8)^2 +(3/5)*a(n-5)*a(n-8) +(-3/5)*a(n-6)*a(n-8) +(-12/5)*a(n-7)*a(n-8) +(3/5)*a(n-8)', 'a(n-5)*a(n-6) +(-3/2)*a(n-5)*a(n-8) +a(n-7)*a(n-8) +(-3/2)*a(n-6) +(-3/2)*a(n-7) +3/2', 'a(n-8)^3 +(1/5)*a(n-5)*a(n-8) +(-1/5)*a(n-6)*a(n-8) +(1/5)*a(n-7)*a(n-8) -4*a(n-8)^2 +(16/5)*a(n-8)', 'a(n-6)*a(n-8)^2 +(7/5)*a(n-5)*a(n-8) +(-12/5)*a(n-6)*a(n-8) +(-3/5)*a(n-7)*a(n-8) -a(n-8)^2 +(12/5)*a(n-8)', 'a(n-5)*a(n-7) +(3/2)*a(n-5)*a(n-8) +a(n-6)*a(n-8) -a(n-5) +(-3/2)*a(n-6) +(-3/2)*a(n-7) -a(n-8) +3/2', 'a(n-2)*a(n-7) +(-3/2)*a(n-5)*a(n-8) -a(n-6)*a(n-8) +a(n-5) +(3/2)*a(n-6) +(-3/2)*a(n-7) +a(n-8) -3/2', 'a(n-5)*a(n-9) +a(n-8)*a(n-9) -3*a(n-9)', 'a(n-4)*a(n-9) +a(n-7)*a(n-9) -3*a(n-9)', 'a(n-5)*a(n-6) -a(n-8)*a(n-9) -3*a(n-6) +3*a(n-8)', 'a(n-3)*a(n-5) +a(n-8)*a(n-9) -3*a(n-3) -3*a(n-5) -3*a(n-8) +9', 'a(n)*a(n-5) -a(n-8)*a(n-9) -3*a(n-3) -6*a(n-6) +3*a(n-8) +9', 'a(n-4)*a(n-7) +(2/3)*a(n-8)*a(n-9) -a(n-5) +a(n-6) -2*a(n-8) +1', 'a(n-4)*a(n-8) +a(n-7)*a(n-9) -a(n-8)*a(n-9) -a(n-4) +a(n-5) -a(n-6) -a(n-7) +a(n-8) -a(n-9)', 'a(n-7)*a(n-9)^2 +(-14/5)*a(n-7)*a(n-9) +(-1/5)*a(n-8)*a(n-9) +(-9/5)*a(n-9)^2 +(-6/5)*a(n-5) +(6/5)*a(n-6) +(3/5)*a(n-7) +(-9/5)*a(n-8) +6*a(n-9) +3/5', 'a(n-6)*a(n-9) +(2/7)*a(n-7)*a(n-9) +(-2/7)*a(n-8)*a(n-9) +(4/7)*a(n-9)^2 +(6/7)*a(n-5) +(-6/7)*a(n-6) +(-3/7)*a(n-7) +(9/7)*a(n-8) +(-18/7)*a(n-9) -3/7', 'a(n-5)*a(n-8) +(-2/7)*a(n-7)*a(n-9) +(-8/21)*a(n-8)*a(n-9) +(-4/7)*a(n-9)^2 +(-6/7)*a(n-5) +(-1/7)*a(n-6) +(3/7)*a(n-7) +(-2/7)*a(n-8) +(18/7)*a(n-9) +3/7', 'a(n-6)*a(n-10) +a(n-9)*a(n-10) -3*a(n-10)', 'a(n-6)*a(n-7) -a(n-9)*a(n-10) -3*a(n-7) +3*a(n-9)', 'a(n-3)*a(n-10) -a(n-9)*a(n-10) -2*a(n-3) -2*a(n-6) +6', 'a(n-7)*a(n-9) +a(n-9)*a(n-10) +a(n-5) -a(n-6) +a(n-8) -4*a(n-9)', 'a(n-4)*a(n-9) -a(n-9)*a(n-10) -a(n-5) +a(n-6) -a(n-8) +a(n-9)', 'a(n-3)*a(n-7) +a(n-9)*a(n-10) -a(n-3) -a(n-6) -3*a(n-9) +3', 'a(n-4)*a(n-6) +a(n-9)*a(n-10) -3*a(n-4) -3*a(n-6) -3*a(n-9) +9', 'a(n-1)*a(n-6) -a(n-9)*a(n-10) -3*a(n-4) -6*a(n-7) +3*a(n-9) +9', 'a(n-3)*a(n-4) -a(n-9)*a(n-10) -2*a(n-3) +a(n-6) +3*a(n-9) -3', 'a(n-5)*a(n-8) +(2/3)*a(n-9)*a(n-10) -a(n-6) +a(n-7) -2*a(n-9) +1', 'a(n-6)*a(n-10) +(3/2)*a(n-11)^2 +(3/4)*a(n-6) +(3/2)*a(n-7) +(-3/2)*a(n-8) +(9/4)*a(n-9) -6*a(n-11) -15/4', 'a(n-11)^3 +(-9/2)*a(n-11)^2 +(-9/20)*a(n-6) +(-3/10)*a(n-7) +(3/10)*a(n-8) +(-3/4)*a(n-9) +5*a(n-11) +21/20', 'a(n-8)*a(n-11) +a(n-11)^2 +(1/2)*a(n-6) +a(n-7) -a(n-8) +(1/2)*a(n-9) +a(n-10) -4*a(n-11) -3/2', 'a(n-8)^2 -a(n-11)^2 +(1/2)*a(n-6) -2*a(n-7) -2*a(n-8) +(1/2)*a(n-9) -2*a(n-10) +4*a(n-11) +3/2', 'a(n-7)*a(n-9) +(3/2)*a(n-11)^2 +(-1/4)*a(n-6) +(3/2)*a(n-7) +(-3/2)*a(n-8) +(-7/4)*a(n-9) +3*a(n-10) -6*a(n-11) -3/4', 'a(n-4)*a(n-9) +(-3/2)*a(n-11)^2 +(1/4)*a(n-6) +(-3/2)*a(n-7) +(3/2)*a(n-8) +(-5/4)*a(n-9) -3*a(n-10) +6*a(n-11) +3/4', 'a(n-9)*a(n-10) +(-3/2)*a(n-11)^2 +(-3/4)*a(n-6) +(-3/2)*a(n-7) +(3/2)*a(n-8) +(-9/4)*a(n-9) -3*a(n-10) +6*a(n-11) +15/4', 'a(n-6)*a(n-7) +(-3/2)*a(n-11)^2 +(-3/4)*a(n-6) +(-9/2)*a(n-7) +(3/2)*a(n-8) +(3/4)*a(n-9) -3*a(n-10) +6*a(n-11) +15/4', 'a(n-2)*a(n-11) +a(n-11)^2 +(-4/3)*a(n-4) +(1/2)*a(n-6) +(-1/3)*a(n-7) -a(n-8) +(1/2)*a(n-9) +a(n-10) -4*a(n-11) +5/2', 'a(n-8)*a(n-12) -a(n) +(2/3)*a(n-2) +a(n-3) +(-4/9)*a(n-4) +(-121/90)*a(n-7) +(-19/15)*a(n-8) +(-7/5)*a(n-9) +(-3/2)*a(n-10) +193/30']
A047160: 
a(n) = a(n-12)*a(n-8) - 3*a(n-10)/2 - 7*a(n-9)/5 - 19*a(n-8)/15 - 121*a(n-7)/90 - 4*a(n-4)/9 + a(n-3) + 2*a(n-2)/3 + 193/30
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

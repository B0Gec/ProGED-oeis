
orders_used: [0, 1, 1, 0, 2, 2, 1, 3, 3, 3, 4, 4, 4, 5, 5, 5, 4, 5, 4, 5, 6, 6, 6, 6, 5, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 10, 9, 10, 10, 11, 11, 10, 9, 12, 12, 11, 10, 13, 12, 14, 15]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:4439/10000, seq_id:A034876, order:20 took:
 49.8 seconds, i.e. 0.83 minutes or 0.014 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 0.
eqs_explicit:
['a(n) = 2*a(n-15) - 2*a(n-13) + 2*a(n-12) + 2*a(n-7) - 2']
non_linears:
['a(n)^3 -3*a(n)^2 +2*a(n)', 'a(n)*a(n-1)^2 -a(n)*a(n-1)', 'a(n-1)^3 -3*a(n-1)^2 +2*a(n-1)', 'a(n)^3 -3*a(n)^2 +2*a(n)', 'a(n-1)*a(n-2)^2 -a(n-1)*a(n-2)', 'a(n-2)^3 -3*a(n-2)^2 +2*a(n-2)', 'a(n-1)^3 -3*a(n-1)^2 +2*a(n-1)', 'a(n-2)*a(n-3)^2 -a(n-2)*a(n-3)', 'a(n)*a(n-3)^2 -a(n)*a(n-3)', 'a(n-3)^3 -3*a(n-3)^2 +2*a(n-3)', 'a(n-3)*a(n-4)^2 -a(n-3)*a(n-4)', 'a(n-1)*a(n-4)^2 -a(n-1)*a(n-4)', 'a(n-4)^3 -3*a(n-4)^2 +2*a(n-4)', 'a(n-4)*a(n-5)^2 -a(n-4)*a(n-5)', 'a(n-2)*a(n-5)^2 -a(n-2)*a(n-5)', 'a(n-1)*a(n-5)^2 -a(n-1)*a(n-5)', 'a(n-3)*a(n-4)^2 -a(n-3)*a(n-4)', 'a(n-5)^3 -3*a(n-5)^2 +2*a(n-5)', 'a(n-4)^3 -3*a(n-4)^2 +2*a(n-4)', 'a(n)*a(n-5) +a(n-1)*a(n-5) +a(n-4)*a(n-5) +2*a(n-5)^2 -4*a(n-5)', 'a(n-5)*a(n-6)^2 -a(n-5)*a(n-6)', 'a(n-3)*a(n-6)^2 -a(n-3)*a(n-6)', 'a(n-2)*a(n-6)^2 -a(n-2)*a(n-6)', 'a(n-6)^3 -3*a(n-6)^2 +2*a(n-6)', 'a(n-5)^3 -3*a(n-5)^2 +2*a(n-5)', 'a(n-1)*a(n-6) +a(n-2)*a(n-6) +a(n-5)*a(n-6) +2*a(n-6)^2 -4*a(n-6)', 'a(n-5)^2*a(n-6) +(2/19)*n*a(n-6) +(-4/19)*a(n-2)*a(n-6) +(12/19)*a(n-4)*a(n-6) +(-39/19)*a(n-5)*a(n-6) +(-16/19)*a(n-6)^2 +(-10/19)*a(n-6)', 'a(n-4)*a(n-6)^2 +(5/19)*n*a(n-6) +(-29/19)*a(n-2)*a(n-6) +a(n-3)*a(n-6) +(-8/19)*a(n-4)*a(n-6) +(-31/19)*a(n-5)*a(n-6) +(-78/19)*a(n-6)^2 +(51/19)*a(n-6)', 'a(n)*a(n-6) +(9/19)*n*a(n-6) +(-18/19)*a(n-2)*a(n-6) +a(n-3)*a(n-6) +(16/19)*a(n-4)*a(n-6) +(-14/19)*a(n-5)*a(n-6) +(-72/19)*a(n-6)^2 +(-45/19)*a(n-6)', 'a(n-6)*a(n-7)^2 -a(n-6)*a(n-7)', 'a(n-4)*a(n-7)^2 -a(n-4)*a(n-7)', 'a(n-3)*a(n-7)^2 -a(n-3)*a(n-7)', 'a(n)*a(n-3) +a(n-3)*a(n-7) -a(n-3)', 'a(n-7)^3 -3*a(n-7)^2 +2*a(n-7)', 'a(n-6)^3 -3*a(n-6)^2 +2*a(n-6)', 'a(n-2)*a(n-7) +a(n-3)*a(n-7) +a(n-6)*a(n-7) +2*a(n-7)^2 -4*a(n-7)', 'a(n)*a(n-7) +(-2/9)*a(n-1)*a(n-7) +(-2/9)*a(n-4)*a(n-7) +(4/9)*a(n-5)*a(n-7) +(-8/9)*a(n-6)*a(n-7)', 'a(n-6)^2*a(n-7) +(-2/9)*a(n-1)*a(n-7) +(-2/9)*a(n-4)*a(n-7) +(4/9)*a(n-5)*a(n-7) +(-17/9)*a(n-6)*a(n-7)', 'a(n-5)*a(n-7)^2 +(-5/9)*a(n-1)*a(n-7) -a(n-3)*a(n-7) +(4/9)*a(n-4)*a(n-7) +(-8/9)*a(n-5)*a(n-7) +(-11/9)*a(n-6)*a(n-7) -2*a(n-7)^2 +4*a(n-7)', 'a(n-7)*a(n-8)^2 -a(n-7)*a(n-8)', 'a(n-5)*a(n-8)^2 -a(n-5)*a(n-8)', 'a(n-4)*a(n-8)^2 -a(n-4)*a(n-8)', 'a(n-1)*a(n-4) +a(n-4)*a(n-8) -a(n-4)', 'a(n-8)^3 -3*a(n-8)^2 +2*a(n-8)', 'a(n-3)*a(n-8) +a(n-4)*a(n-8) +a(n-7)*a(n-8) +2*a(n-8)^2 -4*a(n-8)', 'a(n-1)*a(n-8) +(-2/9)*a(n-2)*a(n-8) +(-2/9)*a(n-5)*a(n-8) +(4/9)*a(n-6)*a(n-8) +(-8/9)*a(n-7)*a(n-8)', 'a(n)*a(n-7) +(4/9)*a(n-2)*a(n-8) +(4/9)*a(n-5)*a(n-8) +(-8/9)*a(n-6)*a(n-8) +(-2/9)*a(n-7)*a(n-8)', 'a(n)*a(n-1) -a(n-2)*a(n-8) -2*a(n-4)*a(n-8) +a(n-6)*a(n-8) -2*a(n-7)*a(n-8) -3*a(n-8)^2 -a(n) +7*a(n-8)', 'a(n-6)*a(n-8)^2 +(-5/9)*a(n-2)*a(n-8) -a(n-4)*a(n-8) +(4/9)*a(n-5)*a(n-8) +(-8/9)*a(n-6)*a(n-8) +(-11/9)*a(n-7)*a(n-8) -2*a(n-8)^2 +4*a(n-8)', 'a(n)*a(n-9)', 'a(n-8)*a(n-9)^2 -a(n-8)*a(n-9)', 'a(n-6)*a(n-9)^2 -a(n-6)*a(n-9)', 'a(n-9)^3 -3*a(n-9)^2 +2*a(n-9)', 'a(n-1)*a(n-10)', 'a(n)*a(n-9)', 'a(n-9)*a(n-10)^2 -a(n-9)*a(n-10)', 'a(n-10)^3 -3*a(n-10)^2 +2*a(n-10)', 'a(n-2)*a(n-11)', 'a(n)*a(n-11)', 'a(n-1)*a(n-10)', 'a(n)*a(n-9)', 'a(n-3)*a(n-12)', 'a(n-1)*a(n-12)', 'a(n-2)*a(n-11)', 'a(n-1)*a(n-10)', 'a(n-4)*a(n-13)', 'a(n-3)*a(n-12)', 'a(n-5)*a(n-14)', 'a(n) -2*a(n-7) -2*a(n-12) +2*a(n-13) -2*a(n-15) +2']
A034876: 
a(n) = 2*a(n-15) - 2*a(n-13) + 2*a(n-12) + 2*a(n-7) - 2
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

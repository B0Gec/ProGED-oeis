
orders_used: [1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:9525/10000, seq_id:A059556, order:20 took:
 74.6 seconds, i.e. 1.24 minutes or 0.021 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
eqs_explicit:
['a(n) = a(n-11) + 30']
non_linears:
['a(n)^2 -2*a(n)*a(n-1) +a(n-1)^2 -5*a(n) +5*a(n-1) +6', 'a(n-1)^2 -2*a(n-1)*a(n-2) +a(n-2)^2 -5*a(n-1) +5*a(n-2) +6', 'a(n)^2 -2*a(n)*a(n-2) +a(n-2)^2 -11*a(n) +11*a(n-2) +30', 'a(n)*a(n-1) -a(n)*a(n-2) -a(n-1)*a(n-2) +a(n-2)^2 -3*a(n) -5*a(n-1) +8*a(n-2) +15', 'a(n-2)^2 -2*a(n-2)*a(n-3) +a(n-3)^2 -5*a(n-2) +5*a(n-3) +6', 'a(n-1)^2 -2*a(n-1)*a(n-3) +a(n-3)^2 -11*a(n-1) +11*a(n-3) +30', 'a(n)^2 -2*a(n)*a(n-3) +a(n-3)^2 -17*a(n) +17*a(n-3) +72', 'a(n-1)*a(n-2) -a(n-1)*a(n-3) -a(n-2)*a(n-3) +a(n-3)^2 -3*a(n-1) -5*a(n-2) +8*a(n-3) +15', 'a(n)*a(n-2) -a(n)*a(n-3) -a(n-2)*a(n-3) +a(n-3)^2 -3*a(n) -8*a(n-2) +11*a(n-3) +24', 'a(n)*a(n-1) -a(n)*a(n-3) -a(n-1)*a(n-3) +a(n-3)^2 -6*a(n) -8*a(n-1) +14*a(n-3) +48', 'a(n)*a(n-4) -a(n-4)^2 -30*a(n) +19*a(n-4) +330', 'a(n)^2 -a(n-4)^2 -81*a(n) +59*a(n-4) +770', 'a(n-3)^2 -2*a(n-3)*a(n-4) +a(n-4)^2 -5*a(n-3) +5*a(n-4) +6', 'a(n-2)^2 -2*a(n-2)*a(n-4) +a(n-4)^2 -11*a(n-2) +11*a(n-4) +30', 'a(n-1)^2 -2*a(n-1)*a(n-4) +a(n-4)^2 -17*a(n-1) +17*a(n-4) +72', 'a(n)*a(n-3) -a(n-3)*a(n-4) -32*a(n) -11*a(n-3) +32*a(n-4) +352', 'a(n)*a(n-2) -a(n-2)*a(n-4) -35*a(n) -11*a(n-2) +35*a(n-4) +385', 'a(n)*a(n-1) -a(n-1)*a(n-4) -38*a(n) -11*a(n-1) +38*a(n-4) +418', 'a(n)*n -n*a(n-4) -14*a(n) -11*n +14*a(n-4) +154', 'a(n-1)*a(n-5) -a(n-5)^2 -30*a(n-1) +19*a(n-5) +330', 'a(n-1)^2 -a(n-5)^2 -81*a(n-1) +59*a(n-5) +770', 'a(n-4)^2 -2*a(n-4)*a(n-5) +a(n-5)^2 -5*a(n-4) +5*a(n-5) +6', 'a(n-3)^2 -2*a(n-3)*a(n-5) +a(n-5)^2 -11*a(n-3) +11*a(n-5) +30', 'a(n-2)^2 -2*a(n-2)*a(n-5) +a(n-5)^2 -17*a(n-2) +17*a(n-5) +72', 'a(n)*a(n-5) -a(n-4)*a(n-5) -27*a(n) +27*a(n-4) -11*a(n-5) +297', 'a(n-1)*a(n-4) -a(n-4)*a(n-5) -32*a(n-1) -11*a(n-4) +32*a(n-5) +352', 'a(n-1)*a(n-3) -a(n-3)*a(n-5) -35*a(n-1) -11*a(n-3) +35*a(n-5) +385', 'a(n-1)*a(n-2) -a(n-2)*a(n-5) -38*a(n-1) -11*a(n-2) +38*a(n-5) +418', 'n*a(n-1) -n*a(n-5) -11*n -15*a(n-1) +15*a(n-5) +165', 'a(n-2)*a(n-6) -a(n-6)^2 -30*a(n-2) +19*a(n-6) +330', 'a(n-2)^2 -a(n-6)^2 -81*a(n-2) +59*a(n-6) +770', 'a(n-5)^2 -2*a(n-5)*a(n-6) +a(n-6)^2 -5*a(n-5) +5*a(n-6) +6', 'a(n-4)^2 -2*a(n-4)*a(n-6) +a(n-6)^2 -11*a(n-4) +11*a(n-6) +30', 'a(n-3)^2 -2*a(n-3)*a(n-6) +a(n-6)^2 -17*a(n-3) +17*a(n-6) +72', 'a(n-1)*a(n-6) -a(n-5)*a(n-6) -27*a(n-1) +27*a(n-5) -11*a(n-6) +297', 'a(n)*a(n-6) -a(n-4)*a(n-6) -24*a(n) +24*a(n-4) -11*a(n-6) +264', 'a(n-2)*a(n-5) -a(n-5)*a(n-6) -32*a(n-2) -11*a(n-5) +32*a(n-6) +352', 'a(n-2)*a(n-4) -a(n-4)*a(n-6) -35*a(n-2) -11*a(n-4) +35*a(n-6) +385', 'a(n-2)*a(n-3) -a(n-3)*a(n-6) -38*a(n-2) -11*a(n-3) +38*a(n-6) +418', 'a(n-3)*a(n-7) -a(n-7)^2 -30*a(n-3) +19*a(n-7) +330', 'a(n-3)^2 -a(n-7)^2 -81*a(n-3) +59*a(n-7) +770', 'a(n-6)^2 -2*a(n-6)*a(n-7) +a(n-7)^2 -5*a(n-6) +5*a(n-7) +6', 'a(n-5)^2 -2*a(n-5)*a(n-7) +a(n-7)^2 -11*a(n-5) +11*a(n-7) +30', 'a(n-4)^2 -2*a(n-4)*a(n-7) +a(n-7)^2 -17*a(n-4) +17*a(n-7) +72', 'a(n-2)*a(n-7) -a(n-6)*a(n-7) -27*a(n-2) +27*a(n-6) -11*a(n-7) +297', 'a(n-1)*a(n-7) -a(n-5)*a(n-7) -24*a(n-1) +24*a(n-5) -11*a(n-7) +264', 'a(n)*a(n-7) -a(n-4)*a(n-7) -21*a(n) +21*a(n-4) -11*a(n-7) +231', 'a(n-3)*a(n-6) -a(n-6)*a(n-7) -32*a(n-3) -11*a(n-6) +32*a(n-7) +352', 'a(n-3)*a(n-5) -a(n-5)*a(n-7) -35*a(n-3) -11*a(n-5) +35*a(n-7) +385', 'a(n-4)*a(n-8) -a(n-8)^2 -30*a(n-4) +19*a(n-8) +330', 'a(n-4)^2 -a(n-8)^2 -81*a(n-4) +59*a(n-8) +770', 'a(n-7)^2 -2*a(n-7)*a(n-8) +a(n-8)^2 -5*a(n-7) +5*a(n-8) +6', 'a(n-6)^2 -2*a(n-6)*a(n-8) +a(n-8)^2 -11*a(n-6) +11*a(n-8) +30', 'a(n-5)^2 -2*a(n-5)*a(n-8) +a(n-8)^2 -17*a(n-5) +17*a(n-8) +72', 'a(n)*a(n-8) -a(n-8)^2 -19*a(n) -11*a(n-4) +8*a(n-8) +539', 'a(n-3)*a(n-8) -a(n-7)*a(n-8) -27*a(n-3) +27*a(n-7) -11*a(n-8) +297', 'a(n-2)*a(n-8) -a(n-6)*a(n-8) -24*a(n-2) +24*a(n-6) -11*a(n-8) +264', 'a(n-1)*a(n-8) -a(n-5)*a(n-8) -21*a(n-1) +21*a(n-5) -11*a(n-8) +231', 'a(n-4)*a(n-7) -a(n-7)*a(n-8) -32*a(n-4) -11*a(n-7) +32*a(n-8) +352', 'a(n-5)*a(n-9) -a(n-9)^2 -30*a(n-5) +19*a(n-9) +330', 'a(n-5)^2 -a(n-9)^2 -81*a(n-5) +59*a(n-9) +770', 'a(n-8)^2 -2*a(n-8)*a(n-9) +a(n-9)^2 -5*a(n-8) +5*a(n-9) +6', 'a(n-7)^2 -2*a(n-7)*a(n-9) +a(n-9)^2 -11*a(n-7) +11*a(n-9) +30', 'a(n-6)^2 -2*a(n-6)*a(n-9) +a(n-9)^2 -17*a(n-6) +17*a(n-9) +72', 'a(n-1)*a(n-9) -a(n-9)^2 -19*a(n-1) -11*a(n-5) +8*a(n-9) +539', 'a(n-4)*a(n-9) -a(n-8)*a(n-9) -27*a(n-4) +27*a(n-8) -11*a(n-9) +297', 'a(n-3)*a(n-9) -a(n-7)*a(n-9) -24*a(n-3) +24*a(n-7) -11*a(n-9) +264', 'a(n-2)*a(n-9) -a(n-6)*a(n-9) -21*a(n-2) +21*a(n-6) -11*a(n-9) +231', 'a(n-5)*a(n-8) -a(n-8)*a(n-9) -32*a(n-5) -11*a(n-8) +32*a(n-9) +352', 'a(n-6)*a(n-10) -a(n-10)^2 -30*a(n-6) +19*a(n-10) +330', 'a(n-6)^2 -a(n-10)^2 -81*a(n-6) +59*a(n-10) +770', 'a(n-9)^2 -2*a(n-9)*a(n-10) +a(n-10)^2 -5*a(n-9) +5*a(n-10) +6', 'a(n-8)^2 -2*a(n-8)*a(n-10) +a(n-10)^2 -11*a(n-8) +11*a(n-10) +30', 'a(n-2)*a(n-10) -a(n-10)^2 -19*a(n-2) -11*a(n-6) +8*a(n-10) +539', 'a(n-5)*a(n-10) -a(n-9)*a(n-10) -27*a(n-5) +27*a(n-9) -11*a(n-10) +297', 'a(n-4)*a(n-10) -a(n-8)*a(n-10) -24*a(n-4) +24*a(n-8) -11*a(n-10) +264', 'a(n-6)*a(n-9) -a(n-9)*a(n-10) -32*a(n-6) -11*a(n-9) +32*a(n-10) +352', 'a(n-6)*a(n-8) -a(n-8)*a(n-10) -35*a(n-6) -11*a(n-8) +35*a(n-10) +385', 'a(n-2)*a(n-6) -a(n-10)^2 -30*a(n-2) -62*a(n-6) +59*a(n-10) +1100', 'a(n) -a(n-11) -30']
A059556: 
a(n) = a(n-11) + 30
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

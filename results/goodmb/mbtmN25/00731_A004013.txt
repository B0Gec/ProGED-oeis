
orders_used: [2, 3, 2, 4, 3, 2, 5, 4, 3, 2, 6, 6, 5, 4, 3, 2, 6, 6, 6, 7, 7, 6, 6, 5, 4, 3, 2, 7, 7, 8, 8, 7, 7, 6, 6, 5, 4, 3, 2, 9, 9, 8, 8, 7, 7, 6, 6, 5, 4, 10, 10, 10, 9, 9, 8, 8, 7, 7, 6, 11, 11, 11, 10, 10, 10, 9, 9, 8, 8, 12, 12, 12, 11, 11, 11, 10, 10, 9, 9, 13, 13, 13, 12, 12, 11, 11, 10, 10, 9, 14, 14, 13, 13, 12, 12, 11, 11, 10, 9, 15, 15, 14, 14, 13, 13, 12, 11, 10, 9, 16, 16, 15, 15, 14, 13, 12, 11, 17, 17, 16, 15, 14, 13, 18, 17, 16, 15, 18, 18, 18, 18, 19, 18, 17, 19, 19, 19, 19, 19, 19, 20, 19, 20, 20, 20, 20, 20, 20, 20, 20]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:732/10000, seq_id:A004013, order:20 took:
 71.6 seconds, i.e. 1.19 minutes or 0.02 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 2.
eqs_explicit:
[]
non_linears:
['a(n)*a(n-2)', 'a(n-1)*a(n-3)', 'a(n)*a(n-2)', 'a(n-2)*a(n-4)', 'a(n-1)*a(n-3)', 'a(n)*a(n-2)', 'a(n-3)*a(n-5)', 'a(n-2)*a(n-4)', 'a(n-1)*a(n-3)', 'a(n)*a(n-2)', 'a(n-4)*a(n-6)', 'a(n)*a(n-6)', 'a(n-3)*a(n-5)', 'a(n-2)*a(n-4)', 'a(n-1)*a(n-3)', 'a(n)*a(n-2)', 'a(n-1)*a(n-6)^2 +(8/5)*a(n-1)*a(n-6) +(-96/5)*a(n-5)*a(n-6)', 'a(n-5)^2*a(n-6) +(8/5)*a(n-1)*a(n-6) +(-46/5)*a(n-5)*a(n-6)', 'a(n-5)*a(n-6)^2 +(64/5)*a(n-1)*a(n-6) +(-168/5)*a(n-5)*a(n-6)', 'a(n-5)*a(n-7)', 'a(n-1)*a(n-7)', 'a(n-4)*a(n-6)', 'a(n)*a(n-6)', 'a(n-3)*a(n-5)', 'a(n-2)*a(n-4)', 'a(n-1)*a(n-3)', 'a(n)*a(n-2)', 'a(n-2)*a(n-7)^2 +(8/5)*a(n-2)*a(n-7) +(-96/5)*a(n-6)*a(n-7)', 'a(n-6)^2*a(n-7) +(8/5)*a(n-2)*a(n-7) +(-46/5)*a(n-6)*a(n-7)', 'a(n-6)*a(n-8)', 'a(n-2)*a(n-8)', 'a(n-5)*a(n-7)', 'a(n-1)*a(n-7)', 'a(n-4)*a(n-6)', 'a(n)*a(n-6)', 'a(n-3)*a(n-5)', 'a(n-2)*a(n-4)', 'a(n-1)*a(n-3)', 'a(n)*a(n-2)', 'a(n-7)*a(n-9)', 'a(n-3)*a(n-9)', 'a(n-6)*a(n-8)', 'a(n-2)*a(n-8)', 'a(n-5)*a(n-7)', 'a(n-1)*a(n-7)', 'a(n-4)*a(n-6)', 'a(n)*a(n-6)', 'a(n-3)*a(n-5)', 'a(n-2)*a(n-4)', 'a(n-8)*a(n-10)', 'a(n-4)*a(n-10)', 'a(n)*a(n-10)', 'a(n-7)*a(n-9)', 'a(n-3)*a(n-9)', 'a(n-6)*a(n-8)', 'a(n-2)*a(n-8)', 'a(n-5)*a(n-7)', 'a(n-1)*a(n-7)', 'a(n-4)*a(n-6)', 'a(n-9)*a(n-11)', 'a(n-5)*a(n-11)', 'a(n-1)*a(n-11)', 'a(n-8)*a(n-10)', 'a(n-4)*a(n-10)', 'a(n)*a(n-10)', 'a(n-7)*a(n-9)', 'a(n-3)*a(n-9)', 'a(n-6)*a(n-8)', 'a(n-2)*a(n-8)', 'a(n-10)*a(n-12)', 'a(n-6)*a(n-12)', 'a(n-2)*a(n-12)', 'a(n-9)*a(n-11)', 'a(n-5)*a(n-11)', 'a(n-1)*a(n-11)', 'a(n-8)*a(n-10)', 'a(n-4)*a(n-10)', 'a(n-7)*a(n-9)', 'a(n-3)*a(n-9)', 'a(n-11)*a(n-13)', 'a(n-7)*a(n-13)', 'a(n-3)*a(n-13)', 'a(n-10)*a(n-12)', 'a(n-6)*a(n-12)', 'a(n-9)*a(n-11)', 'a(n-5)*a(n-11)', 'a(n-8)*a(n-10)', 'a(n-4)*a(n-10)', 'a(n-7)*a(n-9)', 'a(n-12)*a(n-14)', 'a(n-8)*a(n-14)', 'a(n-11)*a(n-13)', 'a(n-7)*a(n-13)', 'a(n-10)*a(n-12)', 'a(n-6)*a(n-12)', 'a(n-9)*a(n-11)', 'a(n-5)*a(n-11)', 'a(n-8)*a(n-10)', 'a(n-7)*a(n-9)', 'a(n-13)*a(n-15)', 'a(n-9)*a(n-15)', 'a(n-12)*a(n-14)', 'a(n-8)*a(n-14)', 'a(n-11)*a(n-13)', 'a(n-7)*a(n-13)', 'a(n-10)*a(n-12)', 'a(n-9)*a(n-11)', 'a(n-8)*a(n-10)', 'a(n-7)*a(n-9)', 'a(n-14)*a(n-16)', 'a(n-10)*a(n-16)', 'a(n-13)*a(n-15)', 'a(n-9)*a(n-15)', 'a(n-12)*a(n-14)', 'a(n-11)*a(n-13)', 'a(n-10)*a(n-12)', 'a(n-9)*a(n-11)', 'a(n-15)*a(n-17)', 'a(n-11)*a(n-17)', 'a(n-14)*a(n-16)', 'a(n-13)*a(n-15)', 'a(n-12)*a(n-14)', 'a(n-11)*a(n-13)', 'a(n-16)*a(n-18)', 'a(n-15)*a(n-17)', 'a(n-14)*a(n-16)', 'a(n-13)*a(n-15)', 'a(n-2) +(-1/2)*a(n-14) -3*a(n-18)', 'a(n-9) +(2/5)*a(n-13) +(8/5)*a(n-14) +(16/5)*a(n-15) +(12/5)*a(n-16) +(16/5)*a(n-18) -192/5', 'a(n-16)^2 +(-7/5)*a(n-13) +(12/5)*a(n-14) +(24/5)*a(n-15) +(-22/5)*a(n-16) +6*a(n-17) +(24/5)*a(n-18) -288/5', 'a(n-6) +(-4/5)*a(n-13) +(-99/20)*a(n-14) +(-32/5)*a(n-15) +(-24/5)*a(n-16) -6*a(n-17) +(-39/10)*a(n-18) +384/5', 'a(n-17)*a(n-19)', 'a(n-16)*a(n-18)', 'a(n-15)*a(n-17)', 'a(n-3) +(-1/2)*a(n-15) -3*a(n-19)', 'a(n-4) +(81/2)*a(n-15) +69*a(n-16) +54*a(n-17) +66*a(n-18) +57*a(n-19) -852', 'a(n-10) +(40/13)*a(n-15) +(80/13)*a(n-16) +(60/13)*a(n-17) +(36/13)*a(n-18) +(80/13)*a(n-19) -960/13', 'a(n-9) +(-30/13)*a(n-15) +(-60/13)*a(n-16) +(-84/13)*a(n-17) +(-40/13)*a(n-18) +(-60/13)*a(n-19) +720/13', 'a(n-6) +(-24/13)*a(n-15) +(-48/13)*a(n-16) +(-36/13)*a(n-17) +(-45/13)*a(n-18) +(-48/13)*a(n-19) +576/13', 'a(n-2) +(-24/13)*a(n-15) +(-48/13)*a(n-16) +(-36/13)*a(n-17) +(-84/13)*a(n-18) +(-48/13)*a(n-19) +576/13', 'a(n-18)*a(n-20)', 'a(n-17)*a(n-19)', 'a(n-10) +(-60/67)*a(n-17) +(-228/67)*a(n-18) +(32/67)*a(n-19) +(-96/67)*a(n-20) +576/67', 'a(n-11) +(80/67)*a(n-17) +(36/67)*a(n-18) +(-132/67)*a(n-19) +(128/67)*a(n-20) -768/67', 'a(n-9) +(-156/67)*a(n-17) +(104/67)*a(n-18) +(-24/67)*a(n-19) +(72/67)*a(n-20) -432/67', 'a(n-6) +(36/67)*a(n-17) +(81/335)*a(n-18) +(-96/335)*a(n-19) +(288/335)*a(n-20) -1728/335', 'n +(59/134)*a(n-17) +(-9/335)*a(n-18) +(133/670)*a(n-19) +(-32/335)*a(n-20) -7848/335', 'a(n-2) +(36/67)*a(n-17) +(-924/335)*a(n-18) +(-96/335)*a(n-19) +(288/335)*a(n-20) -1728/335', 'a(n-17)*a(n-20) +(-40/67)*a(n-17) +(312/335)*a(n-18) +(-72/335)*a(n-19) +(216/335)*a(n-20) -1296/335', 'a(n-15) +(-96/67)*a(n-17) +(-216/335)*a(n-18) +(-414/335)*a(n-19) +(-768/335)*a(n-20) +4608/335']
A004013: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

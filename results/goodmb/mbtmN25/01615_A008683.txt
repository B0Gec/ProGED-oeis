
orders_used: [0, 1, 0, 2, 1, 3, 2, 4, 3, 5, 6, 7, 8, 9, 10, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 19, 18, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 19, 18, 20, 20, 20, 20, 20]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:1616/10000, seq_id:A008683, order:20 took:
 42.5 seconds, i.e. 0.71 minutes or 0.012 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 0.
eqs_explicit:
[]
non_linears:
['a(n)^3 -a(n)', 'a(n-1)^3 -a(n-1)', 'a(n)^3 -a(n)', 'a(n-2)^3 -a(n-2)', 'a(n-1)^3 -a(n-1)', 'a(n-3)^3 -a(n-3)', 'a(n-2)^3 -a(n-2)', 'a(n-4)^3 -a(n-4)', 'a(n-3)^3 -a(n-3)', 'a(n-5)^3 -a(n-5)', 'a(n-6)^3 -a(n-6)', 'a(n-7)^3 -a(n-7)', 'a(n-8)^3 -a(n-8)', 'a(n-9)^3 -a(n-9)', 'a(n-10)^3 -a(n-10)', 'a(n-13)*a(n-15) +(2/3)*a(n-7) +(-2/3)*a(n-11) +(-2/3)*a(n-12) +(-1/3)*a(n-13) +(1/3)*a(n-15) -1/3', 'a(n-1) +(-1/2)*a(n-7) +(-1/2)*a(n-8) +(1/2)*a(n-9) +(1/2)*a(n-11) +(1/2)*a(n-12) +(-1/2)*a(n-13) +(-1/2)*a(n-15)', 'a(n-10)*a(n-14) +(-1/3)*a(n-7) +a(n-8) +a(n-10) +(1/3)*a(n-11) +(1/3)*a(n-12) +(2/3)*a(n-13) -a(n-14) +(1/3)*a(n-15) -1/3', 'a(n-9)*a(n-13) +(7/6)*a(n-7) +(1/2)*a(n-8) +(3/2)*a(n-9) +a(n-10) +(5/6)*a(n-11) +(5/6)*a(n-12) +(-5/6)*a(n-13) +(-1/6)*a(n-15) -1/3', 'a(n-10)*a(n-11) +(7/13)*a(n-7) +(-11/13)*a(n-8) +(-2/13)*a(n-9) +(-16/13)*a(n-10) +(-16/13)*a(n-11) -a(n-12) +(-16/13)*a(n-13) +(6/13)*a(n-14) +(1/13)*a(n-15)', 'a(n-5) +(23/26)*a(n-7) +(27/26)*a(n-8) +(25/26)*a(n-9) +(9/13)*a(n-10) +(5/26)*a(n-11) +(1/2)*a(n-12) +(-21/26)*a(n-13) +(-5/13)*a(n-14) +(7/26)*a(n-15)', 'a(n-9)*a(n-16) +(7/31)*a(n-9) +(8/31)*a(n-10) +(7/31)*a(n-11) +(18/31)*a(n-12) +(34/31)*a(n-13) +(8/31)*a(n-14) +(-7/31)*a(n-15) +(2/31)*a(n-16) +18/31', 'a(n-10)*a(n-13) +(-7/31)*a(n-9) +(-8/31)*a(n-10) +(-7/31)*a(n-11) +(-18/31)*a(n-12) +(-3/31)*a(n-13) +(23/31)*a(n-14) +(7/31)*a(n-15) +(-2/31)*a(n-16) +13/31', 'a(n-9)*a(n-12) +(7/31)*a(n-9) +(8/31)*a(n-10) +(7/31)*a(n-11) +(18/31)*a(n-12) +(34/31)*a(n-13) +(8/31)*a(n-14) +(-7/31)*a(n-15) +(2/31)*a(n-16) +18/31', 'a(n-12)*a(n-14) +(-14/31)*a(n-9) +(-16/31)*a(n-10) +(-14/31)*a(n-11) +(-5/31)*a(n-12) +(-6/31)*a(n-13) +(15/31)*a(n-14) +(14/31)*a(n-15) +(-4/31)*a(n-16) -5/31', 'a(n-11)*a(n-14) +(25/31)*a(n-9) +(2/31)*a(n-10) +(25/31)*a(n-11) +(20/31)*a(n-12) +(-7/31)*a(n-13) +(2/31)*a(n-14) +(6/31)*a(n-15) +(16/31)*a(n-16) +20/31', 'a(n-10)*a(n-12) +(-14/31)*a(n-9) +(15/31)*a(n-10) +(-14/31)*a(n-11) +(-5/31)*a(n-12) +(-6/31)*a(n-13) +(-16/31)*a(n-14) +(14/31)*a(n-15) +(-4/31)*a(n-16) -5/31', 'a(n-16)^2 +(-12/31)*a(n-9) +(4/31)*a(n-10) +(-12/31)*a(n-11) +(-22/31)*a(n-12) +(-14/31)*a(n-13) +(4/31)*a(n-14) +(12/31)*a(n-15) +(1/31)*a(n-16) -22/31', 'a(n-9)*a(n-13) +(8/31)*a(n-9) +(-13/31)*a(n-10) +(-23/31)*a(n-11) +(-6/31)*a(n-12) +(-32/31)*a(n-13) +(-13/31)*a(n-14) +(23/31)*a(n-15) +(20/31)*a(n-16) -6/31', 'a(n-9)*a(n-11) +(45/31)*a(n-9) +(16/31)*a(n-10) +(45/31)*a(n-11) +(36/31)*a(n-12) +(6/31)*a(n-13) +(16/31)*a(n-14) +(-14/31)*a(n-15) +(4/31)*a(n-16) +5/31', 'a(n-5) -a(n-11) +(1/2)*a(n-12) +a(n-15) +(1/2)*a(n-16) +(1/2)*a(n-17) +1/2', 'a(n-8) +(3/13)*a(n-11) +(-5/13)*a(n-12) +(-8/13)*a(n-13) +(-8/13)*a(n-14) +(3/13)*a(n-15) +(-5/13)*a(n-16) +(-9/13)*a(n-17) -6/13', 'a(n-17)^2 +(4/13)*a(n-11) +(2/13)*a(n-12) +(-2/13)*a(n-13) +(-2/13)*a(n-14) +(4/13)*a(n-15) +(2/13)*a(n-16) +(1/13)*a(n-17) -8/13', 'a(n-1) +(-3/13)*a(n-11) +(-8/13)*a(n-12) +(-18/13)*a(n-13) +(-5/13)*a(n-14) +(-3/13)*a(n-15) +(-8/13)*a(n-16) +(-4/13)*a(n-17) -7/13', 'a(n-15)*a(n-17) +(-10/13)*a(n-11) +(-5/13)*a(n-12) +(-8/13)*a(n-13) +(-8/13)*a(n-14) +(3/13)*a(n-15) +(-5/13)*a(n-16) +(4/13)*a(n-17) -6/13', 'a(n-14)*a(n-17) +(4/13)*a(n-11) +(2/13)*a(n-12) +(-2/13)*a(n-13) +(11/13)*a(n-14) +(4/13)*a(n-15) +(2/13)*a(n-16) +(1/13)*a(n-17) +5/13', 'a(n-11)*a(n-17) +(3/13)*a(n-11) +(-5/13)*a(n-12) +(-8/13)*a(n-13) +(-8/13)*a(n-14) +(-10/13)*a(n-15) +(-5/13)*a(n-16) +(4/13)*a(n-17) -6/13', 'a(n-13)*a(n-16) +(1/13)*a(n-11) +(-5/39)*a(n-12) +(31/39)*a(n-13) +(6/13)*a(n-14) +(1/13)*a(n-15) +(-5/39)*a(n-16) +(-3/13)*a(n-17) +7/39', 'a(n-17)*a(n-18) +a(n-17) +a(n-18) +1', 'a(n-2) +a(n-13) +a(n-15) -2*a(n-17) -a(n-18) -1', 'a(n-18)^2 -2*a(n-13) -2*a(n-14) -2*a(n-15) +2*a(n-17) +a(n-18)', 'a(n-15)*a(n-18) -2*a(n-13) -2*a(n-14) -a(n-15) +2*a(n-17) +a(n-18) +1', 'a(n-18)*a(n-19) +a(n-18) +a(n-19) +1', 'a(n-17)*a(n-18) +a(n-17) +a(n-18) +1', 'a(n-16)*a(n-18) +(2/19)*a(n-15) +(7/19)*a(n-16) +(-4/19)*a(n-17) +(5/19)*a(n-18) +(6/19)*a(n-19) -3/19', 'a(n-15)*a(n-17) +(7/19)*a(n-15) +(-4/19)*a(n-16) +(5/19)*a(n-17) +(8/19)*a(n-18) +(2/19)*a(n-19) -1/19', 'a(n-13) +(2/19)*a(n-15) +(-12/19)*a(n-16) +(-23/19)*a(n-17) +(5/19)*a(n-18) +(6/19)*a(n-19) -3/19', 'a(n-19)^2 +(-6/19)*a(n-15) +(-2/19)*a(n-16) +(12/19)*a(n-17) +(4/19)*a(n-18) +(1/19)*a(n-19) -10/19', 'a(n-16)*a(n-19) +(-6/19)*a(n-15) +(17/19)*a(n-16) +(12/19)*a(n-17) +(4/19)*a(n-18) +(1/19)*a(n-19) +9/19', 'a(n-18)^2 +(-2/19)*a(n-15) +(12/19)*a(n-16) +(4/19)*a(n-17) +(-5/19)*a(n-18) +(-6/19)*a(n-19) -16/19', 'a(n-15)*a(n-18) +(17/19)*a(n-15) +(12/19)*a(n-16) +(4/19)*a(n-17) +(-5/19)*a(n-18) +(-6/19)*a(n-19) +3/19', 'a(n-17)^2 +(12/19)*a(n-15) +(4/19)*a(n-16) +(-5/19)*a(n-17) +(-8/19)*a(n-18) +(-2/19)*a(n-19) -18/19', 'a(n-15) -a(n-19) -a(n-20) -1', 'a(n-19)*a(n-20) +a(n-19) +a(n-20) +1', 'a(n-18)*a(n-19) +a(n-18) +a(n-19) +1', 'a(n-17)*a(n-18) +a(n-17) +a(n-18) +1', 'a(n-1) +a(n-18) +a(n-19) +a(n-20) +1', 'a(n-16) +(9/8)*a(n-17) +(3/8)*a(n-18) +(1/8)*a(n-19) +(5/8)*a(n-20) +7/8', 'a(n-14) +(-3/4)*a(n-17) +(-5/4)*a(n-18) +(1/4)*a(n-19) +(1/4)*a(n-20) -1/4', 'a(n-13) +(-1/2)*a(n-17) +(1/2)*a(n-18) +(1/2)*a(n-19) +(1/2)*a(n-20) +1/2', 'a(n-12) +(7/8)*a(n-17) +(5/8)*a(n-18) +(7/8)*a(n-19) +(3/8)*a(n-20) +9/8']
A008683: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

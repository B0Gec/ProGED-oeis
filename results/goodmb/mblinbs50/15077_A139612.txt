
orders_used: [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
While total time consumed by now, scale:15078/27236, seq_id:A139612, order:20 took:
 50.3 seconds, i.e. 0.84 minutes or 0.014 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
non_linears:
['a(n) -a(n-1) -66', 'a(n-1) -a(n-2) -66', 'a(n) -a(n-2) -132', 'a(n-2) -a(n-3) -66', 'a(n-1) -a(n-3) -132', 'a(n) -a(n-3) -198', 'a(n-3) -a(n-4) -66', 'a(n-2) -a(n-4) -132', 'a(n-1) -a(n-4) -198', 'a(n) -a(n-4) -264', 'a(n-4) -a(n-5) -66', 'a(n-3) -a(n-5) -132', 'a(n-2) -a(n-5) -198', 'a(n-1) -a(n-5) -264', 'a(n) -a(n-5) -330', 'a(n-5) -a(n-6) -66', 'a(n-4) -a(n-6) -132', 'a(n-3) -a(n-6) -198', 'a(n-2) -a(n-6) -264', 'a(n-1) -a(n-6) -330', 'a(n) -a(n-6) -396', 'a(n-6) -a(n-7) -66', 'a(n-5) -a(n-7) -132', 'a(n-4) -a(n-7) -198', 'a(n-3) -a(n-7) -264', 'a(n-2) -a(n-7) -330', 'a(n-1) -a(n-7) -396', 'a(n) -a(n-7) -462', 'a(n-7) -a(n-8) -66', 'a(n-6) -a(n-8) -132', 'a(n-5) -a(n-8) -198', 'a(n-4) -a(n-8) -264', 'a(n-3) -a(n-8) -330', 'a(n-2) -a(n-8) -396', 'a(n-1) -a(n-8) -462', 'a(n) -a(n-8) -528', 'a(n-8) -a(n-9) -66', 'a(n-7) -a(n-9) -132', 'a(n-6) -a(n-9) -198', 'a(n-5) -a(n-9) -264', 'a(n-4) -a(n-9) -330', 'a(n-3) -a(n-9) -396', 'a(n-2) -a(n-9) -462', 'a(n-1) -a(n-9) -528', 'a(n) -a(n-9) -594', 'a(n-9) -a(n-10) -66', 'a(n-8) -a(n-10) -132', 'a(n-7) -a(n-10) -198', 'a(n-6) -a(n-10) -264', 'a(n-5) -a(n-10) -330', 'a(n-4) -a(n-10) -396', 'a(n-3) -a(n-10) -462', 'a(n-2) -a(n-10) -528', 'a(n-1) -a(n-10) -594', 'a(n) -a(n-10) -660', 'a(n-10) -a(n-11) -66', 'a(n-9) -a(n-11) -132', 'a(n-8) -a(n-11) -198', 'a(n-7) -a(n-11) -264', 'a(n-6) -a(n-11) -330', 'a(n-5) -a(n-11) -396', 'a(n-4) -a(n-11) -462', 'a(n-3) -a(n-11) -528', 'a(n-2) -a(n-11) -594', 'a(n-1) -a(n-11) -660', 'a(n-11) -a(n-12) -66', 'a(n-10) -a(n-12) -132', 'a(n-9) -a(n-12) -198', 'a(n-8) -a(n-12) -264', 'a(n-7) -a(n-12) -330', 'a(n-6) -a(n-12) -396', 'a(n-5) -a(n-12) -462', 'a(n-4) -a(n-12) -528', 'a(n-3) -a(n-12) -594', 'a(n-2) -a(n-12) -660', 'a(n-12) -a(n-13) -66', 'a(n-11) -a(n-13) -132', 'a(n-10) -a(n-13) -198', 'a(n-9) -a(n-13) -264', 'a(n-8) -a(n-13) -330', 'a(n-7) -a(n-13) -396', 'a(n-6) -a(n-13) -462', 'a(n-5) -a(n-13) -528', 'a(n-4) -a(n-13) -594', 'a(n-3) -a(n-13) -660', 'a(n-13) -a(n-14) -66', 'a(n-12) -a(n-14) -132', 'a(n-11) -a(n-14) -198', 'a(n-10) -a(n-14) -264', 'a(n-9) -a(n-14) -330', 'a(n-8) -a(n-14) -396', 'a(n-7) -a(n-14) -462', 'a(n-6) -a(n-14) -528', 'a(n-5) -a(n-14) -594', 'a(n-4) -a(n-14) -660', 'a(n-14) -a(n-15) -66', 'a(n-13) -a(n-15) -132', 'a(n-12) -a(n-15) -198', 'a(n-11) -a(n-15) -264', 'a(n-10) -a(n-15) -330', 'a(n-9) -a(n-15) -396', 'a(n-8) -a(n-15) -462', 'a(n-7) -a(n-15) -528', 'a(n-6) -a(n-15) -594', 'a(n-5) -a(n-15) -660', 'a(n-15) -a(n-16) -66', 'a(n-14) -a(n-16) -132', 'a(n-13) -a(n-16) -198', 'a(n-12) -a(n-16) -264', 'a(n-11) -a(n-16) -330', 'a(n-10) -a(n-16) -396', 'a(n-9) -a(n-16) -462', 'a(n-8) -a(n-16) -528', 'a(n-7) -a(n-16) -594', 'a(n-6) -a(n-16) -660', 'a(n-16) -a(n-17) -66', 'a(n-15) -a(n-17) -132', 'a(n-14) -a(n-17) -198', 'a(n-13) -a(n-17) -264', 'a(n-12) -a(n-17) -330', 'a(n-11) -a(n-17) -396', 'a(n-10) -a(n-17) -462', 'a(n-9) -a(n-17) -528', 'a(n-8) -a(n-17) -594', 'a(n-7) -a(n-17) -660', 'a(n-17) -a(n-18) -66', 'a(n-16) -a(n-18) -132', 'a(n-15) -a(n-18) -198', 'a(n-14) -a(n-18) -264', 'a(n-13) -a(n-18) -330', 'a(n-12) -a(n-18) -396', 'a(n-11) -a(n-18) -462', 'a(n-10) -a(n-18) -528', 'a(n-9) -a(n-18) -594', 'a(n-8) -a(n-18) -660', 'a(n-18) -a(n-19) -66', 'a(n-17) -a(n-19) -132', 'a(n-16) -a(n-19) -198', 'a(n-15) -a(n-19) -264', 'a(n-14) -a(n-19) -330', 'a(n-13) -a(n-19) -396', 'a(n-12) -a(n-19) -462', 'a(n-11) -a(n-19) -528', 'a(n-10) -a(n-19) -594', 'a(n-9) -a(n-19) -660', 'a(n-19) -a(n-20) -66', 'a(n-18) -a(n-20) -132', 'a(n-17) -a(n-20) -198', 'a(n-16) -a(n-20) -264', 'a(n-15) -a(n-20) -330', 'a(n-14) -a(n-20) -396', 'a(n-13) -a(n-20) -462', 'a(n-12) -a(n-20) -528', 'a(n-11) -a(n-20) -594', 'a(n-10) -a(n-20) -660']
A139612: 
MB not reconst
truth: 
a(n) = 2*a(n - 1) + -1*a(n - 2),  
a(0) = 12, a(1) = 78

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

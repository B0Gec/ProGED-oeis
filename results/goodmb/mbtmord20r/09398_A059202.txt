
orders_used: [4, 4, 4, 4, 5, 5, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 10, 11, 10, 11, 11, 11, 11, 11, 12, 12, 10, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:9399/10000, seq_id:A059202, order:20 took:
 36.1 seconds, i.e. 0.6 minutes or 0.01 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 4.
eqs_explicit:
['a(n) = 6*a(n-13) + 1']
non_linears:
['a(n-1)*a(n-4)^2 +(-358/29)*a(n-1)*a(n-4) +(-987/29)*a(n-2)*a(n-4) +(1437/29)*a(n-3)*a(n-4) +(-1212/29)*a(n-4)^2 +(2199/29)*a(n-4)', 'a(n-4)^3 +(-1456/29)*a(n-1)*a(n-4) +(-4368/29)*a(n-2)*a(n-4) +(6552/29)*a(n-3)*a(n-4) +(-5576/29)*a(n-4)^2 +(9915/29)*a(n-4)', 'a(n-2)*a(n-4)^2 +(-1071/29)*a(n-1)*a(n-4) +(-3242/29)*a(n-2)*a(n-4) +(4747/29)*a(n-3)*a(n-4) +(-3980/29)*a(n-4)^2 +(7193/29)*a(n-4)', 'a(n-3)*a(n-4)^2 +(-1820/29)*a(n-1)*a(n-4) +(-5460/29)*a(n-2)*a(n-4) +(8103/29)*a(n-3)*a(n-4) +(-6825/29)*a(n-4)^2 +(12285/29)*a(n-4)', 'a(n-4)*a(n-5)^2 -3*a(n-4)*a(n-5)', 'a(n-5)^3 -4*a(n-5)^2 +3*a(n-5)', 'a(n-5)*a(n-8) +(27/239)*a(n-3) +(-135/956)*a(n-4) +(-393/478)*a(n-5) +(51/956)*a(n-6) +(-84/239)*a(n-7) +(-252/239)*a(n-8) +633/956', 'a(n-6)*a(n-8) +(60/239)*a(n-3) +(-75/239)*a(n-4) +(121/239)*a(n-5) +(-131/239)*a(n-6) +(-107/239)*a(n-7) +(-560/239)*a(n-8) +272/239', 'a(n-5)^2 +(54/239)*a(n-3) +(-135/478)*a(n-4) +(-632/239)*a(n-5) +(51/478)*a(n-6) +(-168/239)*a(n-7) +(-504/239)*a(n-8) +633/478', 'a(n-6)*a(n-7) +(63/239)*a(n-3) +(-315/956)*a(n-4) +(39/478)*a(n-5) +(-837/956)*a(n-6) +(-435/239)*a(n-7) +(-588/239)*a(n-8) +2433/956', 'a(n-7)*a(n-8) +(-69/239)*a(n-3) +(345/956)*a(n-4) +(-111/478)*a(n-5) +(507/956)*a(n-6) +(135/239)*a(n-7) +(405/239)*a(n-8) -1299/956', 'a(n-4)*a(n-8) +(-18/239)*a(n-3) +(-433/478)*a(n-4) +(-108/239)*a(n-5) +(-495/478)*a(n-6) +(-183/239)*a(n-7) +(-549/239)*a(n-8) +1701/478', 'a(n-5)*a(n-6) +(-81/239)*a(n-3) +(405/956)*a(n-4) +(-255/478)*a(n-5) +(-153/956)*a(n-6) +(252/239)*a(n-7) +(756/239)*a(n-8) -1899/956', 'a(n-8)^2 +(-138/239)*a(n-3) +(345/478)*a(n-4) +(-111/239)*a(n-5) +(507/478)*a(n-6) +(270/239)*a(n-7) +(571/239)*a(n-8) -1299/478', 'a(n-6)*a(n-9) +(3/20)*a(n-5) +(-9/10)*a(n-6) +(9/20)*a(n-7) -9/20', 'a(n-7)*a(n-9) +(1/3)*a(n-5) +(1/3)*a(n-6) +(1/3)*a(n-7) +(1/3)*a(n-8) -4/3', 'a(n-9)*a(n-10)', 'a(n-10)^2 -a(n-10)', 'a(n-8)*a(n-10) +(7/23)*a(n-7) +(-2/23)*a(n-8) +(1/23)*a(n-9) +(-20/23)*a(n-10) -1/23', 'a(n-7)*a(n-10) +(-21/23)*a(n-7) +(6/23)*a(n-8) +(-3/23)*a(n-9) +(-9/23)*a(n-10) +3/23', 'a(n-7)*a(n-8) +(-6/23)*a(n-7) +(-18/23)*a(n-8) +(9/23)*a(n-9) +(27/23)*a(n-10) -9/23', 'a(n-5) +(21/23)*a(n-7) +(-6/23)*a(n-8) +(-20/23)*a(n-9) +(-60/23)*a(n-10) -3/23', 'a(n-8)*a(n-9) +(-3/23)*a(n-7) +(-9/23)*a(n-8) +(-30/23)*a(n-9) +(-21/23)*a(n-10) +30/23', 'a(n-7)^2 +(-65/23)*a(n-7) +(12/23)*a(n-8) +(-6/23)*a(n-9) +(-18/23)*a(n-10) +6/23', 'a(n-6) +(2/23)*a(n-7) +(29/23)*a(n-8) +(20/23)*a(n-9) +(60/23)*a(n-10) -89/23', 'a(n-10)*a(n-11)', 'a(n-9)*a(n-10)', 'a(n-11)^2 -a(n-11)', 'a(n-10)^2 -a(n-10)', 'a(n-7) +a(n-9) +2*a(n-11) -3', 'a(n-9)*a(n-11) -a(n-9) -3*a(n-10) -3*a(n-11) +3', 'a(n-9)^2 -a(n-9) +6*a(n-10) +6*a(n-11) -6', 'a(n-6) -3*a(n-9) -10*a(n-10) -9*a(n-11) +9', 'n +2*a(n-9) +8*a(n-10) +7*a(n-11) -20', 'a(n-12)^2 -a(n-12)', 'a(n-10)*a(n-12) -a(n-10)', 'a(n-10)^2 -a(n-10)', 'a(n-11) +a(n-12) -1', 'a(n-9) +3*a(n-10) -3*a(n-12)', 'a(n-5) +3*a(n-10) -3*a(n-12)', 'a(n-8) +a(n-10) +2*a(n-12) -3', 'a(n-7) -3*a(n-10) +a(n-12) -1', 'n +2*a(n-10) -a(n-12) -13', 'a(n-11) -a(n-13)', 'a(n-7) -a(n-13)', 'a(n-13)^2 -a(n-13)', 'a(n-12) +a(n-13) -1', 'a(n-9) +3*a(n-13) -3', 'a(n-8) -2*a(n-13) -1', 'a(n-5) +3*a(n-13) -3', 'a(n) -6*a(n-13) -1']
A059202: 
a(n) = 6*a(n-13) + 1
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

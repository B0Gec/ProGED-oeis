
orders_used: [7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:6082/10000, seq_id:A040385, order:20 took:
 29.2 seconds, i.e. 0.49 minutes or 0.008 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 7.
eqs_explicit:
[]
non_linears:
['a(n-3)*a(n-5) +(171/241)*a(n-1) +(-117/241)*a(n-2) +(-697/241)*a(n-3) +(486/241)*a(n-4) +(-697/241)*a(n-5) +(-117/241)*a(n-6) +(171/241)*a(n-7) -521/241', 'a(n-4)*a(n-6) +(-27/14)*a(n-3) +(-34/7)*a(n-4) +(-31/7)*a(n-6) +(-9/7)*a(n-7) +(9/14)*a(n-8) +395/14', 'a(n-3)*a(n-7) +(55/56)*a(n-3) +(237/28)*a(n-4) +(15/2)*a(n-5) +(117/14)*a(n-6) +(23/28)*a(n-7) +(-9/56)*a(n-8) -6037/56', 'a(n-4)^2 +(153/95)*a(n-3) +(-35/19)*a(n-4) +(108/19)*a(n-5) +(558/95)*a(n-6) +(108/19)*a(n-7) +(9/19)*a(n-8) -7669/95', 'a(n-8)^2 +(-192/19)*a(n-3) +(-486/19)*a(n-4) +(-738/19)*a(n-5) +(-698/19)*a(n-6) +(-510/19)*a(n-7) +(-489/19)*a(n-8) +10702/19', 'a(n-4)*a(n-8) +(-531/760)*a(n-3) +(-217/76)*a(n-4) +(27/38)*a(n-5) +(111/190)*a(n-6) +(225/76)*a(n-7) +(-599/152)*a(n-8) -3527/760', 'a(n-2) +(541/266)*a(n-3) +(1105/399)*a(n-4) +(54/19)*a(n-5) +(288/133)*a(n-6) +(150/133)*a(n-7) +(25/266)*a(n-8) -34163/798', 'a(n-6)*a(n-7) +(1107/532)*a(n-3) +(351/266)*a(n-4) +(15/19)*a(n-5) +(-376/133)*a(n-6) +(-569/266)*a(n-7) +(-117/532)*a(n-8) -3917/532', 'a(n-3)*a(n-5) +(-776/665)*a(n-3) +(636/133)*a(n-4) +(11/19)*a(n-5) +(1674/665)*a(n-6) +(324/133)*a(n-7) +(27/133)*a(n-8) -31462/665', 'a(n-6)^2 +(3111/2660)*a(n-3) +(-131/266)*a(n-4) +(-3/19)*a(n-5) +(-5286/665)*a(n-6) +(-669/266)*a(n-7) +(-45/532)*a(n-8) +47427/2660', 'a(n-5)^2 +(-666/133)*a(n-3) +(-1136/133)*a(n-4) +(-297/19)*a(n-5) +(-1128/133)*a(n-6) +(-654/133)*a(n-7) +(12/133)*a(n-8) +17644/133', 'a(n-1) +(-1462/4323)*a(n-5) +(-35/1441)*a(n-6) +(590/1441)*a(n-7) +(1104/1441)*a(n-8) +(156/1441)*a(n-9) -29267/4323', 'a(n-2) +(2168/4323)*a(n-5) +(-1190/1441)*a(n-6) +(-1555/1441)*a(n-7) +(70/1441)*a(n-8) +(-460/1441)*a(n-9) +12181/4323', 'a(n-7)*a(n-8) +(-5319/1441)*a(n-5) +(-4980/1441)*a(n-6) +(-8893/1441)*a(n-7) +(-8014/1441)*a(n-8) +(-36/1441)*a(n-9) +80287/1441', 'a(n-6)*a(n-8) +(4145/1441)*a(n-5) +(1992/1441)*a(n-6) +(4710/1441)*a(n-7) +(-541/1441)*a(n-8) +(879/1441)*a(n-9) -56900/1441', 'a(n-6)*a(n-7) +(2940/1441)*a(n-5) +(-4033/1441)*a(n-6) +(-2830/1441)*a(n-7) +(3204/1441)*a(n-8) +(-675/1441)*a(n-9) -9470/1441', 'a(n-5)*a(n-7) +(-307/1441)*a(n-5) +(5670/1441)*a(n-6) +(-1915/1441)*a(n-7) +(2718/1441)*a(n-8) +(666/1441)*a(n-9) -43589/1441', 'a(n-6)^2 +(5068/1441)*a(n-5) +(-7803/1441)*a(n-6) +(-624/1441)*a(n-7) +(4782/1441)*a(n-8) +(-546/1441)*a(n-9) -27578/1441', 'a(n-4) +(3470/1441)*a(n-5) +(2940/1441)*a(n-6) +(2316/1441)*a(n-7) +(2370/1441)*a(n-8) +(-135/1441)*a(n-9) -43683/1441', 'a(n-3) +(-9200/4323)*a(n-5) +(-1884/1441)*a(n-6) +(-1590/1441)*a(n-7) +(-3195/1441)*a(n-8) +(410/1441)*a(n-9) +81461/4323', 'a(n-8)^2 +(1798/1441)*a(n-5) +(3226/1441)*a(n-6) +(4494/1441)*a(n-7) +(-8751/1441)*a(n-8) +(690/1441)*a(n-9) -31308/1441', 'a(n-4) +(108/83)*a(n-7) +(30/83)*a(n-8) +(15/83)*a(n-9) +(30/83)*a(n-10) -1019/83', 'a(n-10)^2 +(-1386/83)*a(n-7) +(-1630/83)*a(n-8) +(-732/83)*a(n-9) +(-2211/83)*a(n-10) +19814/83', 'a(n-5) +(-1740/1909)*a(n-7) +(-96/1909)*a(n-8) +(-2040/1909)*a(n-9) +(-15/83)*a(n-10) +9353/1909', 'a(n-1) +(250/1909)*a(n-7) +(1462/1909)*a(n-8) +(-431/1909)*a(n-9) +(-5/83)*a(n-10) -10439/1909', 'n +(245/1909)*a(n-7) +(211/1909)*a(n-8) +(-766/1909)*a(n-9) +(20/83)*a(n-10) -24395/1909', 'a(n-8)*a(n-9) +(2040/1909)*a(n-7) +(-6931/1909)*a(n-8) +(-2677/1909)*a(n-9) +(9/83)*a(n-10) +3319/1909', 'a(n-6) +(2340/1909)*a(n-7) +(1314/1909)*a(n-8) +(2151/1909)*a(n-9) +(3/83)*a(n-10) -27916/1909', 'a(n-3) +(-2750/1909)*a(n-7) +(-2719/1909)*a(n-8) +(-986/1909)*a(n-9) +(-28/83)*a(n-10) +19379/1909', 'a(n-2) +(745/1909)*a(n-7) +(1226/1909)*a(n-8) +(2190/1909)*a(n-9) +(10/83)*a(n-10) -22365/1909', 'a(n-7)*a(n-9) +(-4092/1909)*a(n-7) +(2460/1909)*a(n-8) +(-6904/1909)*a(n-9) +(42/83)*a(n-10) +4920/1909', 'n +(-27/82)*a(n-9) +(-3/82)*a(n-10) +(5/82)*a(n-11) -957/82', 'a(n-2) +(13/41)*a(n-9) +(6/41)*a(n-10) +(-10/41)*a(n-11) -136/41', 'a(n-1) +(-98/41)*a(n-9) +(62/41)*a(n-10) +(-35/41)*a(n-11) +262/41', 'a(n-10)^2 +(-7/41)*a(n-9) +(-224/41)*a(n-10) +(-23/41)*a(n-11) +335/41', 'a(n-3) +(-57/82)*a(n-9) +(185/82)*a(n-10) +(-35/82)*a(n-11) -435/82', 'a(n-9)*a(n-10) +(-299/41)*a(n-9) +(67/41)*a(n-10) +(-57/41)*a(n-11) +791/41', 'a(n-7) +(-144/41)*a(n-9) +(189/41)*a(n-10) +(-69/41)*a(n-11) +226/41', 'a(n-6) +(126/41)*a(n-9) +(-150/41)*a(n-10) +(45/41)*a(n-11) -413/41', 'a(n-5) +(-168/41)*a(n-9) +(159/41)*a(n-10) +(-60/41)*a(n-11) +373/41', 'a(n-4) +(144/41)*a(n-9) +(-189/41)*a(n-10) +(69/41)*a(n-11) -554/41', 'a(n-3) +(1/3)*a(n-11) +(-1/3)*a(n-12) -7/3', 'a(n-7) +(-24/13)*a(n-11) +(3/13)*a(n-12) -7/13', 'a(n-2) +(4/39)*a(n-11) +(-7/39)*a(n-12) -40/39', 'a(n-8) +(33/13)*a(n-11) +(-9/13)*a(n-12) -70/13', 'a(n-6) +(19/13)*a(n-11) +(-4/13)*a(n-12) -47/13', 'a(n-5) +(-33/13)*a(n-11) +(9/13)*a(n-12) -34/13', 'a(n-4) +(24/13)*a(n-11) +(-3/13)*a(n-12) -97/13', 'a(n-1) +(-25/13)*a(n-11) +(8/13)*a(n-12) -36/13', 'n +(-3/13)*a(n-11) +(2/13)*a(n-12) -178/13', 'a(n-10) +(-23/39)*a(n-11) +(11/39)*a(n-12) -121/39', 'a(n-3) +(-1/7)*a(n-13) -8/7', 'a(n-12) +(-5/14)*a(n-13) +8/7', 'a(n-10) +(1/7)*a(n-13) -34/7', 'a(n-8) +(-3/7)*a(n-13) +11/7', 'a(n-6) +(-3/14)*a(n-13) +2/7', 'a(n-5) +(3/7)*a(n-13) -67/7', 'a(n-2) +(-1/14)*a(n-13) -4/7', 'a(n-13)^2 -26*a(n-13) +120', 'a(n-11) +(1/14)*a(n-13) -17/7', 'a(n-9) +(3/14)*a(n-13) -58/7']
A040385: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

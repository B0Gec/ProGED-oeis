
orders_used: [2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 5, 4, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 4, 6]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:7575/10000, seq_id:A047969, order:20 took:
 26.1 seconds, i.e. 0.43 minutes or 0.007 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 2.
eqs_explicit:
['a(n) = -n/17 + 45*a(n-6)/17 + 61*a(n-5)*a(n-4)/136 - 77*a(n-5)/136 - 37*a(n-4)/136 + 13*a(n-3)/34 - 28*a(n-2)/17 + 21*a(n-1)/34 + 413/136']
non_linears:
['a(n)*a(n-2)^2 -8*a(n)*a(n-2) -a(n-2)^2 +7*a(n) +8*a(n-2) -7', 'a(n-1)*a(n-3)^2 -8*a(n-1)*a(n-3) -a(n-3)^2 +7*a(n-1) +8*a(n-3) -7', 'n*a(n-3) +(-1/6)*a(n-2)*a(n-3) -a(n-3)^2 -n +(1/6)*a(n-2) +(-17/6)*a(n-3) +23/6', 'a(n-1)*a(n-2)*a(n-3) -a(n-1)*a(n-2) -19*a(n-1)*a(n-3) -a(n-2)*a(n-3) +19*a(n-1) +a(n-2) +19*a(n-3) -19', 'a(n-2)*a(n-3)^2 +(-18/7)*a(n-1)*a(n-3) -6*a(n-2)*a(n-3) -a(n-3)^2 +(18/7)*a(n-1) +5*a(n-2) +(60/7)*a(n-3) -53/7', 'a(n-2)^2*a(n-3) -a(n-2)^2 +(-108/7)*a(n-1)*a(n-3) -8*a(n-2)*a(n-3) +(108/7)*a(n-1) +8*a(n-2) +(157/7)*a(n-3) -157/7', 'a(n-2)^3 +(-4/3)*a(n-1)*a(n-2) -5*a(n-2)^2 -50*a(n-1)*a(n-3) -6*a(n-2)*a(n-3) +(154/3)*a(n-1) +(43/3)*a(n-2) +56*a(n-3) -181/3', 'a(n)*a(n-2) +(-7/3)*a(n-1)*a(n-2) +7*a(n-2)^2 -8*a(n-1)*a(n-3) -7*a(n-2)*a(n-3) -a(n) +(31/3)*a(n-1) +(-59/3)*a(n-2) +15*a(n-3) +14/3', 'a(n-3)^3 +(-6/7)*a(n-1)*a(n-3) +(2/3)*a(n-2)*a(n-3) -11*a(n-3)^2 +(6/7)*a(n-1) +(-2/3)*a(n-2) +(655/21)*a(n-3) -445/21', 'a(n)*a(n-3) +(-9/14)*a(n-1)*a(n-3) +(5/6)*a(n-2)*a(n-3) +(-1/2)*a(n-3)^2 -a(n) +(9/14)*a(n-1) +(-5/6)*a(n-2) +(-67/21)*a(n-3) +155/42', 'n*a(n-2) +(-1/6)*a(n-1)*a(n-2) -a(n-2)^2 +(31/14)*a(n-1)*a(n-3) -n +(-43/21)*a(n-1) +(-11/6)*a(n-2) +(-31/14)*a(n-3) +106/21', 'a(n-2)*a(n-4) -a(n-2) -a(n-4) +1', 'a(n-3)*a(n-4)^2 -6*a(n-3)*a(n-4) -a(n-4)^2 +5*a(n-3) +6*a(n-4) -5', 'a(n-3)^2*a(n-4) -a(n-3)^2 -8*a(n-3)*a(n-4) +8*a(n-3) +7*a(n-4) -7', 'a(n-4)^3 +(2/3)*a(n-3)*a(n-4) -11*a(n-4)^2 +(-2/3)*a(n-3) +(91/3)*a(n-4) -61/3', 'a(n)*a(n-4) +a(n-3)*a(n-4) -3*a(n-4)^2 -a(n) -a(n-3) +4*a(n-4) -1', 'n*a(n-4) +(-1/6)*a(n-3)*a(n-4) -a(n-4)^2 -n +(1/6)*a(n-3) +(-23/6)*a(n-4) +29/6', 'n*a(n-3) +(-1/6)*a(n-2)*a(n-3) -a(n-3)^2 -n +(1/6)*a(n-2) +(-17/6)*a(n-3) +23/6', 'a(n-1)*a(n-4) +(5/6)*a(n-3)*a(n-4) +(-1/2)*a(n-4)^2 -a(n-1) +(-5/6)*a(n-3) +(-23/6)*a(n-4) +13/3', 'a(n-3)^3 +(-4/3)*a(n-2)*a(n-3) -5*a(n-3)^2 -6*a(n-3)*a(n-4) +(4/3)*a(n-2) +(43/3)*a(n-3) +6*a(n-4) -31/3', 'a(n-2)*a(n-3)^2 -12*a(n-2)*a(n-3) +17*a(n-3)^2 -18*a(n-3)*a(n-4) +11*a(n-2) -42*a(n-3) +18*a(n-4) +25', 'a(n-3)*a(n-5) -a(n-3) -a(n-5) +1', 'a(n-2)*a(n-4) -a(n-2) -a(n-4) +1', 'a(n)*a(n-4) -3*a(n-4)*a(n-5) -a(n) -4*a(n-4) +3*a(n-5) +4', 'a(n-4)*a(n-5)^2 -6*a(n-4)*a(n-5) -a(n-5)^2 +5*a(n-4) +6*a(n-5) -5', 'a(n-5)^3 +(2/3)*a(n-4)*a(n-5) -11*a(n-5)^2 +(-2/3)*a(n-4) +(91/3)*a(n-5) -61/3', 'a(n-1)*a(n-5) +a(n-4)*a(n-5) -3*a(n-5)^2 -a(n-1) -a(n-4) +4*a(n-5) -1', 'n*a(n-5) +(-1/6)*a(n-4)*a(n-5) -a(n-5)^2 -n +(1/6)*a(n-4) +(-29/6)*a(n-5) +35/6', 'a(n-2)*a(n-5) +(5/6)*a(n-4)*a(n-5) +(-1/2)*a(n-5)^2 -a(n-2) +(-5/6)*a(n-4) +(-23/6)*a(n-5) +13/3', 'a(n)*a(n-5) +(-11/6)*a(n-4)*a(n-5) +(-7/2)*a(n-5)^2 -a(n) +(11/6)*a(n-4) +(89/6)*a(n-5) -34/3', 'a(n)*a(n-2) +(7/6)*a(n-4)*a(n-5) +(-7/2)*a(n-5)^2 -a(n) -a(n-2) +(-7/6)*a(n-4) +(77/6)*a(n-5) -25/3', 'a(n-4)*a(n-6) -a(n-4) -a(n-6) +1', 'a(n-3)*a(n-5) -a(n-3) -a(n-5) +1', 'a(n-2)*a(n-4) -a(n-2) -a(n-4) +1', 'a(n-4)*a(n-5) +(-136/61)*a(n) +(-8/61)*n +(84/61)*a(n-1) +(-224/61)*a(n-2) +(52/61)*a(n-3) +(-37/61)*a(n-4) +(-77/61)*a(n-5) +(360/61)*a(n-6) +413/61']
A047969: 
a(n) = -n/17 + 45*a(n-6)/17 + 61*a(n-5)*a(n-4)/136 - 77*a(n-5)/136 - 37*a(n-4)/136 + 13*a(n-3)/34 - 28*a(n-2)/17 + 21*a(n-1)/34 + 413/136
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

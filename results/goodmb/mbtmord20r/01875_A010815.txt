
orders_used: [0, 1, 1, 0, 2, 2, 2, 1, 3, 3, 3, 2, 3, 3, 3, 3, 3, 4, 4, 5, 5, 6]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:1876/10000, seq_id:A010815, order:20 took:
 30.8 seconds, i.e. 0.51 minutes or 0.009 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 0.
eqs_explicit:
['a(n) = -n + a(n-6)*a(n-2) - a(n-6) + a(n-4) - a(n-3) - 3*a(n-2) - 3*a(n-1) + 11']
non_linears:
['a(n)^3 -a(n)', 'a(n-1)^3 -a(n-1)', 'a(n)^2*a(n-1) +a(n)*a(n-1)', 'a(n)^3 -a(n)', 'a(n-2)^3 -a(n-2)', 'a(n)*a(n-2)^2 -a(n)*a(n-2)', 'a(n-1)^2*a(n-2) +a(n-1)*a(n-2)', 'a(n-1)^3 -a(n-1)', 'a(n-3)^3 -a(n-3)', 'a(n-1)*a(n-3)^2 -a(n-1)*a(n-3)', 'a(n-2)^2*a(n-3) +a(n-2)*a(n-3)', 'a(n-2)^3 -a(n-2)', 'a(n-2)*a(n-3)^2 +(-1/4)*n*a(n-3) +(-1/2)*a(n-1)*a(n-3) +(5/4)*a(n-2)*a(n-3) +(5/8)*a(n-3)^2 +(15/8)*a(n-3)', 'n*a(n-3)^2 +(-5/4)*n*a(n-3) +(-1/2)*a(n-1)*a(n-3) +(9/4)*a(n-2)*a(n-3) +(-35/8)*a(n-3)^2 +(55/8)*a(n-3)', 'a(n)*a(n-3) +(1/8)*n*a(n-3) +(1/4)*a(n-1)*a(n-3) +(-9/8)*a(n-2)*a(n-3) +(3/16)*a(n-3)^2 +(-23/16)*a(n-3)', 'a(n-1)*a(n-2) +(1/8)*n*a(n-3) +(1/4)*a(n-1)*a(n-3) +(-1/8)*a(n-2)*a(n-3) +(-5/16)*a(n-3)^2 +(-15/16)*a(n-3)', 'n*a(n-2)*a(n-3) +(1/8)*n*a(n-3) +(1/4)*a(n-1)*a(n-3) +(-33/8)*a(n-2)*a(n-3) +(-5/16)*a(n-3)^2 +(-15/16)*a(n-3)', 'a(n-4)^3 -a(n-4)', 'a(n-2)*a(n-4)^2 -a(n-2)*a(n-4)', 'a(n-5)^3 -a(n-5)', 'a(n)^2 +2*a(n-4)*a(n-5) -a(n-5)^2 +a(n) +a(n-5)', 'a(n-2)*a(n-6) -a(n) -n -3*a(n-1) -3*a(n-2) -a(n-3) +a(n-4) -a(n-6) +11']
A010815: 
a(n) = -n + a(n-6)*a(n-2) - a(n-6) + a(n-4) - a(n-3) - 3*a(n-2) - 3*a(n-1) + 11
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

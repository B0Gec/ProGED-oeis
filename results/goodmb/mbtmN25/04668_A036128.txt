
orders_used: [1, 2, 2, 3, 3, 4, 4, 5, 6, 7, 8, 9, 10, 14, 14, 14]
dasco's acc_1, acc_10: True, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:4669/10000, seq_id:A036128, order:20 took:
 19.2 seconds, i.e. 0.32 minutes or 0.005 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
eqs_explicit:
['a(n) = a(n-14) + a(n-13) + a(n-12) - a(n-10) - a(n-9) + a(n-7) + a(n-6) + a(n-5) - 53']
non_linears:
['a(n)^2 -4*a(n)*a(n-1) +4*a(n-1)^2 +53*a(n) -106*a(n-1)', 'a(n-1)^2 -4*a(n-1)*a(n-2) +4*a(n-2)^2 +53*a(n-1) -106*a(n-2)', 'a(n)^2 -4*a(n)*a(n-1) +16*a(n-1)*a(n-2) -16*a(n-2)^2 +53*a(n) -318*a(n-1) +424*a(n-2)', 'a(n-2)^2 -4*a(n-2)*a(n-3) +4*a(n-3)^2 +53*a(n-2) -106*a(n-3)', 'a(n-1)^2 -4*a(n-1)*a(n-2) +16*a(n-2)*a(n-3) -16*a(n-3)^2 +53*a(n-1) -318*a(n-2) +424*a(n-3)', 'a(n-3)^2 -4*a(n-3)*a(n-4) +4*a(n-4)^2 +53*a(n-3) -106*a(n-4)', 'a(n-2)^2 -4*a(n-2)*a(n-3) +16*a(n-3)*a(n-4) -16*a(n-4)^2 +53*a(n-2) -318*a(n-3) +424*a(n-4)', 'a(n-4)^2 -4*a(n-4)*a(n-5) +4*a(n-5)^2 +53*a(n-4) -106*a(n-5)', 'a(n-5)^2 -4*a(n-5)*a(n-6) +4*a(n-6)^2 +53*a(n-5) -106*a(n-6)', 'a(n-6)^2 -4*a(n-6)*a(n-7) +4*a(n-7)^2 +53*a(n-6) -106*a(n-7)', 'a(n-7)^2 -4*a(n-7)*a(n-8) +4*a(n-8)^2 +53*a(n-7) -106*a(n-8)', 'a(n-8)^2 -4*a(n-8)*a(n-9) +4*a(n-9)^2 +53*a(n-8) -106*a(n-9)', 'a(n-9)^2 -4*a(n-9)*a(n-10) +4*a(n-10)^2 +53*a(n-9) -106*a(n-10)', 'a(n-4) +a(n-5) +a(n-14) -53', 'a(n-1) +a(n-10) +a(n-11) -a(n-14) -53', 'a(n) -a(n-5) -a(n-6) -a(n-7) +a(n-9) +a(n-10) -a(n-12) -a(n-13) -a(n-14) +53']
A036128: 
a(n) = a(n-14) + a(n-13) + a(n-12) - a(n-10) - a(n-9) + a(n-7) + a(n-6) + a(n-5) - 53
truth: 
None

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    


orders_used: [18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:1171/10000, seq_id:A006530, order:20 took:
 19.9 seconds, i.e. 0.33 minutes or 0.006 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 18.
eqs_explicit:
[]
non_linears:
['n +(78/545)*a(n-13) +(-7/109)*a(n-14) +(32/545)*a(n-15) +(39/545)*a(n-16) +(-458/545)*a(n-17) +(-526/545)*a(n-18) -8608/545', 'a(n-15)*a(n-18) +(476/545)*a(n-13) +(2/109)*a(n-14) +(-741/545)*a(n-15) +(1328/545)*a(n-16) +(-56/545)*a(n-17) +(-2637/545)*a(n-18) -2321/545', 'a(n-8) +(814/545)*a(n-13) +(-101/109)*a(n-14) +(306/545)*a(n-15) +(407/545)*a(n-16) +(-224/545)*a(n-17) +(-193/545)*a(n-18) -7104/545', 'a(n-3) +(-356/545)*a(n-13) +(113/109)*a(n-14) +(-1809/545)*a(n-15) +(367/545)*a(n-16) +(651/545)*a(n-17) +(-478/545)*a(n-18) -1154/545', 'a(n-2) +(788/545)*a(n-13) +(-244/109)*a(n-14) +(1022/545)*a(n-15) +(394/545)*a(n-16) +(-798/545)*a(n-17) +(164/545)*a(n-18) -7323/545', 'a(n-13)*a(n-18) +(-1067/545)*a(n-13) +(72/109)*a(n-14) +(792/545)*a(n-15) +(284/545)*a(n-16) +(-708/545)*a(n-17) +(-2391/545)*a(n-18) +1137/545', 'a(n-15)^2 +(1042/545)*a(n-13) +(172/109)*a(n-14) +(-3667/545)*a(n-15) +(1066/545)*a(n-16) +(-892/545)*a(n-17) +(-934/545)*a(n-18) -2752/545', 'a(n-14)*a(n-16) +(-844/545)*a(n-13) +(-609/109)*a(n-14) +(-1576/545)*a(n-15) +(-4237/545)*a(n-16) +(484/545)*a(n-17) +(2198/545)*a(n-18) +22279/545', 'a(n-13)*a(n-14) +(-1591/545)*a(n-13) +(-303/109)*a(n-14) +(1136/545)*a(n-15) +(1112/545)*a(n-16) +(-1544/545)*a(n-17) +(-688/545)*a(n-18) +2341/545', 'n +(-73/613)*a(n-15) +(-38/613)*a(n-16) +(-195/613)*a(n-17) +(-514/613)*a(n-18) +(-326/613)*a(n-19) -9267/613', 'a(n-19)^2 +(608/613)*a(n-15) +(602/613)*a(n-16) +(-492/613)*a(n-17) +(-52/613)*a(n-18) +(-2869/613)*a(n-19) -408/613', 'a(n-14) +(235/613)*a(n-15) +(517/613)*a(n-16) +(1669/613)*a(n-17) +(-8/613)*a(n-18) +(-1856/613)*a(n-19) -7183/613', 'a(n-10) +(850/613)*a(n-15) +(-582/613)*a(n-16) +(272/613)*a(n-17) +(258/613)*a(n-18) +(-218/613)*a(n-19) -7265/613', 'a(n-16)*a(n-19) +(-194/613)*a(n-15) +(-1285/613)*a(n-16) +(36/613)*a(n-17) +(-56/613)*a(n-18) +(-1345/613)*a(n-19) +3663/613', 'a(n-12) +(-603/613)*a(n-15) +(-591/613)*a(n-16) +(-855/613)*a(n-17) +(-1735/613)*a(n-18) +(834/613)*a(n-19) +8172/613', 'a(n-11) +(-504/613)*a(n-15) +(-128/613)*a(n-16) +(182/613)*a(n-17) +(398/613)*a(n-18) +(-2066/613)*a(n-19) +1661/613', 'a(n-18)*a(n-19) +(84/613)*a(n-15) +(430/613)*a(n-16) +(174/613)*a(n-17) +(-1701/613)*a(n-18) +(-1699/613)*a(n-19) +2073/613', 'a(n-17)*a(n-18) +(454/613)*a(n-15) +(18/613)*a(n-16) +(-2037/613)*a(n-17) +(-1531/613)*a(n-18) +(348/613)*a(n-19) +2841/613', 'a(n-15)^2 +(-6153/613)*a(n-15) +(-1154/613)*a(n-16) +(-792/613)*a(n-17) +(6/613)*a(n-18) +(166/613)*a(n-19) +19946/613', 'a(n-17)*a(n-18) +(-13/3)*a(n-17) -5*a(n-18) +(4/3)*a(n-19) +(8/3)*a(n-20) +37/3', 'a(n-7) +(1/3)*a(n-17) -2*a(n-18) +(-16/3)*a(n-19) +(13/3)*a(n-20) +14/3', 'a(n-12) +(-16/11)*a(n-17) +(-14/11)*a(n-18) +(34/11)*a(n-19) -2*a(n-20) -5/11', 'a(n-5) +(-9/11)*a(n-17) +(54/11)*a(n-18) +(-29/11)*a(n-19) -5*a(n-20) -53/11', 'a(n-19)*a(n-20) +(10/11)*a(n-17) +(6/11)*a(n-18) +(-35/11)*a(n-19) -3*a(n-20) +43/11', 'a(n-13) +(-27/11)*a(n-17) +(-36/11)*a(n-18) +(1/11)*a(n-19) +3*a(n-20) +105/11', 'n +(-8/33)*a(n-17) +(-6/11)*a(n-18) +(-16/33)*a(n-19) +(-1/3)*a(n-20) -547/33', 'a(n-19)^2 +(-8/11)*a(n-17) +(-18/11)*a(n-18) +(-71/11)*a(n-19) +2*a(n-20) +146/11', 'a(n-17)*a(n-20) +(-85/33)*a(n-17) +(-6/11)*a(n-18) +(28/33)*a(n-19) +(-5/3)*a(n-20) +157/33']
A006530: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

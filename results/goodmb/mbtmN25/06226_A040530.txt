
orders_used: [2, 2, 3, 2, 3, 4, 3, 2, 5, 4, 3, 2, 5, 5, 6, 5, 4, 3, 2, 7, 6, 5, 4, 3, 2, 8, 7, 6, 5, 4, 3, 2, 9, 9, 8, 7, 6, 5, 4, 3, 2, 10, 10, 9, 9, 8, 7, 6, 5, 4, 3, 11, 11, 10, 10, 9, 8, 7, 6, 5, 4, 12, 12, 11, 11, 10, 9, 8, 7, 6, 13, 13, 12, 12, 11, 10, 9, 8, 14, 14, 13, 12, 11, 10, 9, 15, 14, 13, 12, 11, 10, 16, 15, 14, 13, 12, 17, 17, 16, 15, 18, 17, 16, 15, 19, 18, 17, 20, 19, 20, 20, 20, 20, 20]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:6227/10000, seq_id:A040530, order:20 took:
 53.9 seconds, i.e. 0.9 minutes or 0.015 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 2.
eqs_explicit:
[]
non_linears:
['a(n)*a(n-2) -a(n) -a(n-2) +1', 'a(n-1)^3 +(-1680/37)*a(n)*a(n-1) +(-2087/37)*a(n-1)^2 +(-1680/37)*a(n-1)*a(n-2) +(1680/37)*a(n) +(21418/37)*a(n-1) +(1680/37)*a(n-2) -19368/37', 'a(n-1)*a(n-3) -a(n-1) -a(n-3) +1', 'a(n)*a(n-2) -a(n) -a(n-2) +1', 'a(n-2)^3 +(-1680/37)*a(n-1)*a(n-2) +(-2087/37)*a(n-2)^2 +(-1680/37)*a(n-2)*a(n-3) +(1680/37)*a(n-1) +(21418/37)*a(n-2) +(1680/37)*a(n-3) -19368/37', 'a(n-2)*a(n-4) -a(n-2) -a(n-4) +1', 'a(n-1)*a(n-3) -a(n-1) -a(n-3) +1', 'a(n)*a(n-2) -a(n) -a(n-2) +1', 'a(n-3)*a(n-5) -a(n-3) -a(n-5) +1', 'a(n-2)*a(n-4) -a(n-2) -a(n-4) +1', 'a(n-1)*a(n-3) -a(n-1) -a(n-3) +1', 'a(n)*a(n-2) -a(n) -a(n-2) +1', 'a(n)*a(n-5)^2 -7*a(n)*a(n-5) -a(n-5)^2 +6*a(n) +7*a(n-5) -6', 'a(n-4)*a(n-5)^2 +(-6/5)*a(n)*a(n-5) -5*a(n-4)*a(n-5) -a(n-5)^2 +(6/5)*a(n) +4*a(n-4) +(31/5)*a(n-5) -26/5', 'a(n-4)*a(n-6) -a(n-4) -a(n-6) +1', 'a(n-3)*a(n-5) -a(n-3) -a(n-5) +1', 'a(n-2)*a(n-4) -a(n-2) -a(n-4) +1', 'a(n-1)*a(n-3) -a(n-1) -a(n-3) +1', 'a(n)*a(n-2) -a(n) -a(n-2) +1', 'a(n-5)*a(n-7) -a(n-5) -a(n-7) +1', 'a(n-4)*a(n-6) -a(n-4) -a(n-6) +1', 'a(n-3)*a(n-5) -a(n-3) -a(n-5) +1', 'a(n-2)*a(n-4) -a(n-2) -a(n-4) +1', 'a(n-1)*a(n-3) -a(n-1) -a(n-3) +1', 'a(n)*a(n-2) -a(n) -a(n-2) +1', 'a(n-6)*a(n-8) -a(n-6) -a(n-8) +1', 'a(n-5)*a(n-7) -a(n-5) -a(n-7) +1', 'a(n-4)*a(n-6) -a(n-4) -a(n-6) +1', 'a(n-3)*a(n-5) -a(n-3) -a(n-5) +1', 'a(n-2)*a(n-4) -a(n-2) -a(n-4) +1', 'a(n-1)*a(n-3) -a(n-1) -a(n-3) +1', 'a(n)*a(n-2) -a(n) -a(n-2) +1', 'a(n-7)*a(n-9) -a(n-7) -a(n-9) +1', 'a(n)*a(n-9) -a(n) -a(n-9) +1', 'a(n-6)*a(n-8) -a(n-6) -a(n-8) +1', 'a(n-5)*a(n-7) -a(n-5) -a(n-7) +1', 'a(n-4)*a(n-6) -a(n-4) -a(n-6) +1', 'a(n-3)*a(n-5) -a(n-3) -a(n-5) +1', 'a(n-2)*a(n-4) -a(n-2) -a(n-4) +1', 'a(n-1)*a(n-3) -a(n-1) -a(n-3) +1', 'a(n)*a(n-2) -a(n) -a(n-2) +1', 'a(n-8)*a(n-10) -a(n-8) -a(n-10) +1', 'a(n-1)*a(n-10) -a(n-1) -a(n-10) +1', 'a(n-7)*a(n-9) -a(n-7) -a(n-9) +1', 'a(n)*a(n-9) -a(n) -a(n-9) +1', 'a(n-6)*a(n-8) -a(n-6) -a(n-8) +1', 'a(n-5)*a(n-7) -a(n-5) -a(n-7) +1', 'a(n-4)*a(n-6) -a(n-4) -a(n-6) +1', 'a(n-3)*a(n-5) -a(n-3) -a(n-5) +1', 'a(n-2)*a(n-4) -a(n-2) -a(n-4) +1', 'a(n-1)*a(n-3) -a(n-1) -a(n-3) +1', 'a(n-9)*a(n-11) -a(n-9) -a(n-11) +1', 'a(n-2)*a(n-11) -a(n-2) -a(n-11) +1', 'a(n-8)*a(n-10) -a(n-8) -a(n-10) +1', 'a(n-1)*a(n-10) -a(n-1) -a(n-10) +1', 'a(n-7)*a(n-9) -a(n-7) -a(n-9) +1', 'a(n-6)*a(n-8) -a(n-6) -a(n-8) +1', 'a(n-5)*a(n-7) -a(n-5) -a(n-7) +1', 'a(n-4)*a(n-6) -a(n-4) -a(n-6) +1', 'a(n-3)*a(n-5) -a(n-3) -a(n-5) +1', 'a(n-2)*a(n-4) -a(n-2) -a(n-4) +1', 'a(n-10)*a(n-12) -a(n-10) -a(n-12) +1', 'a(n-3)*a(n-12) -a(n-3) -a(n-12) +1', 'a(n-9)*a(n-11) -a(n-9) -a(n-11) +1', 'a(n-2)*a(n-11) -a(n-2) -a(n-11) +1', 'a(n-8)*a(n-10) -a(n-8) -a(n-10) +1', 'a(n-7)*a(n-9) -a(n-7) -a(n-9) +1', 'a(n-6)*a(n-8) -a(n-6) -a(n-8) +1', 'a(n-5)*a(n-7) -a(n-5) -a(n-7) +1', 'a(n-4)*a(n-6) -a(n-4) -a(n-6) +1', 'a(n-11)*a(n-13) -a(n-11) -a(n-13) +1', 'a(n-4)*a(n-13) -a(n-4) -a(n-13) +1', 'a(n-10)*a(n-12) -a(n-10) -a(n-12) +1', 'a(n-3)*a(n-12) -a(n-3) -a(n-12) +1', 'a(n-9)*a(n-11) -a(n-9) -a(n-11) +1', 'a(n-8)*a(n-10) -a(n-8) -a(n-10) +1', 'a(n-7)*a(n-9) -a(n-7) -a(n-9) +1', 'a(n-6)*a(n-8) -a(n-6) -a(n-8) +1', 'a(n-12)*a(n-14) -a(n-12) -a(n-14) +1', 'a(n-5)*a(n-14) -a(n-5) -a(n-14) +1', 'a(n-11)*a(n-13) -a(n-11) -a(n-13) +1', 'a(n-10)*a(n-12) -a(n-10) -a(n-12) +1', 'a(n-9)*a(n-11) -a(n-9) -a(n-11) +1', 'a(n-8)*a(n-10) -a(n-8) -a(n-10) +1', 'a(n-7)*a(n-9) -a(n-7) -a(n-9) +1', 'a(n-13)*a(n-15) -a(n-13) -a(n-15) +1', 'a(n-12)*a(n-14) -a(n-12) -a(n-14) +1', 'a(n-11)*a(n-13) -a(n-11) -a(n-13) +1', 'a(n-10)*a(n-12) -a(n-10) -a(n-12) +1', 'a(n-9)*a(n-11) -a(n-9) -a(n-11) +1', 'a(n-8)*a(n-10) -a(n-8) -a(n-10) +1', 'a(n-14)*a(n-16) -a(n-14) -a(n-16) +1', 'a(n-13)*a(n-15) -a(n-13) -a(n-15) +1', 'a(n-12)*a(n-14) -a(n-12) -a(n-14) +1', 'a(n-11)*a(n-13) -a(n-11) -a(n-13) +1', 'a(n-10)*a(n-12) -a(n-10) -a(n-12) +1', 'a(n-15)*a(n-17) -a(n-15) -a(n-17) +1', 'a(n-11)*a(n-17) -a(n-11) -a(n-17) +1', 'a(n-14)*a(n-16) -a(n-14) -a(n-16) +1', 'a(n-13)*a(n-15) -a(n-13) -a(n-15) +1', 'a(n-16)*a(n-18) -a(n-16) -a(n-18) +1', 'a(n-15)*a(n-17) -a(n-15) -a(n-17) +1', 'a(n-14)*a(n-16) -a(n-14) -a(n-16) +1', 'a(n-13)*a(n-15) -a(n-13) -a(n-15) +1', 'a(n-17)*a(n-19) -a(n-17) -a(n-19) +1', 'a(n-16)*a(n-18) -a(n-16) -a(n-18) +1', 'a(n-15)*a(n-17) -a(n-15) -a(n-17) +1', 'a(n-18)*a(n-20) -a(n-18) -a(n-20) +1', 'a(n-17)*a(n-19) -a(n-17) -a(n-19) +1', 'n +(-73/353)*a(n-17) +(261/353)*a(n-18) +(-10/353)*a(n-19) +(82/353)*a(n-20) -8759/353', 'a(n-16) +(-122/353)*a(n-17) +(383/353)*a(n-18) +(80/353)*a(n-19) +(50/353)*a(n-20) -2293/353', 'a(n-15) +(760/353)*a(n-17) +(-48/353)*a(n-18) +(225/353)*a(n-19) +(-80/353)*a(n-20) -3250/353', 'a(n-5) +(-122/353)*a(n-17) +(383/353)*a(n-18) +(80/353)*a(n-19) +(50/353)*a(n-20) -2293/353', 'a(n-4) +(760/353)*a(n-17) +(-48/353)*a(n-18) +(225/353)*a(n-19) +(-80/353)*a(n-20) -3250/353']
A040530: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

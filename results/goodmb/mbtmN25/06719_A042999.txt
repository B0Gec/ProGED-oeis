
orders_used: [18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:6720/10000, seq_id:A042999, order:20 took:
 21.1 seconds, i.e. 0.35 minutes or 0.006 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 18.
eqs_explicit:
[]
non_linears:
['a(n-11) +(-730/291)*a(n-13) +(150/97)*a(n-14) +(50/291)*a(n-15) +(686/291)*a(n-16) +(-259/291)*a(n-17) +(-844/291)*a(n-18) -4262/291', 'n +(-131/1164)*a(n-13) +(3/388)*a(n-14) +(1/1164)*a(n-15) +(37/1164)*a(n-16) +(-11/1164)*a(n-17) +(-55/582)*a(n-18) -18523/1164', 'a(n-12) +(-1233/970)*a(n-13) +(59/194)*a(n-14) +(-269/970)*a(n-15) +(523/970)*a(n-16) +(631/970)*a(n-17) +(-531/485)*a(n-18) -7963/970', 'a(n-10) +(-952/485)*a(n-13) +(128/97)*a(n-14) +(804/485)*a(n-15) +(357/485)*a(n-16) +(-696/485)*a(n-17) +(-1528/485)*a(n-18) -16572/485', 'a(n-9) +(882/485)*a(n-13) +(-130/97)*a(n-14) +(111/485)*a(n-15) +(-1422/485)*a(n-16) +(-154/485)*a(n-17) +(788/485)*a(n-18) -29238/485', 'a(n-4) +(1249/582)*a(n-13) +(-541/194)*a(n-14) +(-245/582)*a(n-15) +(-1499/582)*a(n-16) +(1531/582)*a(n-17) +(89/291)*a(n-18) -56173/582', 'a(n-3) +(-539/970)*a(n-13) +(-93/194)*a(n-14) +(-1927/970)*a(n-15) +(1839/970)*a(n-16) +(-1307/970)*a(n-17) +(837/485)*a(n-18) -74929/970', 'a(n-13)*a(n-18) +(82/485)*a(n-13) +(1413/97)*a(n-14) +(-379/485)*a(n-15) +(-3547/485)*a(n-16) +(-9799/485)*a(n-17) +(-25337/485)*a(n-18) -9858/485', 'a(n-14)^2 +(32068/485)*a(n-13) +(-7908/97)*a(n-14) +(4/485)*a(n-15) +(-27788/485)*a(n-16) +(-9356/485)*a(n-17) +(8872/485)*a(n-18) -28017/485', 'n +(-113/887)*a(n-15) +(2/887)*a(n-16) +(-57/887)*a(n-17) +(87/1774)*a(n-18) +(42/887)*a(n-19) -30671/1774', 'a(n-14) +(-1065/887)*a(n-15) +(11/887)*a(n-16) +(-757/887)*a(n-17) +(461/887)*a(n-18) +(1118/887)*a(n-19) -2963/887', 'a(n-9) +(747/887)*a(n-15) +(-2164/887)*a(n-16) +(-416/887)*a(n-17) +(-56/887)*a(n-18) +(680/887)*a(n-19) -37352/887', 'a(n-12) +(-1300/887)*a(n-15) +(180/887)*a(n-16) +(192/887)*a(n-17) +(367/887)*a(n-18) +(232/887)*a(n-19) -20424/887', 'a(n-11) +(-920/887)*a(n-15) +(1492/887)*a(n-16) +(-833/887)*a(n-17) +(-368/887)*a(n-18) +(-600/887)*a(n-19) -36124/887', 'a(n-2) +(-1159/887)*a(n-15) +(256/887)*a(n-16) +(-200/887)*a(n-17) +(246/887)*a(n-18) +(54/887)*a(n-19) -103792/887', 'a(n-13) +(-1084/887)*a(n-15) +(-232/887)*a(n-16) +(-484/887)*a(n-17) +(1163/887)*a(n-18) +(450/887)*a(n-19) -11048/887', 'a(n-10) +(748/887)*a(n-15) +(183/887)*a(n-16) +(-1224/887)*a(n-17) +(-1120/887)*a(n-18) +(-592/887)*a(n-19) -48084/887', 'a(n-7) +(-2832/887)*a(n-15) +(2248/887)*a(n-16) +(-204/887)*a(n-17) +(109/887)*a(n-18) +(-690/887)*a(n-19) -45268/887', 'a(n-6) +(-984/887)*a(n-15) +(300/887)*a(n-16) +(-2341/887)*a(n-17) +(316/887)*a(n-18) +(2752/887)*a(n-19) -58876/887', 'a(n-19)^2 -44*a(n-17) -a(n-18) +7*a(n-19) +64*a(n-20) +331', 'a(n-19)*a(n-20) -28*a(n-17) -a(n-18) +12*a(n-19) +29*a(n-20) +213', 'a(n-9) +(7/2)*a(n-17) +(3/8)*a(n-18) +(-29/8)*a(n-19) -8*a(n-20) -149/2', 'a(n-17)^2 -144*a(n-17) -6*a(n-18) +66*a(n-19) +144*a(n-20) +1007', 'a(n-12) +(32/7)*a(n-17) +(-8/7)*a(n-18) +(-23/7)*a(n-19) +(-40/7)*a(n-20) -464/7', 'a(n-8) +(80/7)*a(n-17) +(-6/7)*a(n-18) +(-61/7)*a(n-19) +(-114/7)*a(n-20) -908/7', 'a(n-7) +(24/7)*a(n-17) +(-20/7)*a(n-18) +(-19/7)*a(n-19) +(-16/7)*a(n-20) -656/7', 'n +(5/14)*a(n-17) +(-5/56)*a(n-18) +(-17/56)*a(n-19) +(-4/7)*a(n-20) -150/7', 'a(n-20)^2 +(-104/7)*a(n-17) +(-2/7)*a(n-18) +(73/7)*a(n-19) +(39/7)*a(n-20) +829/7', 'a(n-13) +(30/7)*a(n-17) +(-1/14)*a(n-18) +(-51/14)*a(n-19) +(-48/7)*a(n-20) -414/7']
A042999: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

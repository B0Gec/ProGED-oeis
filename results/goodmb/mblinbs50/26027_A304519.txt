
orders_used: [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
While total time consumed by now, scale:26028/27236, seq_id:A304519, order:20 took:
 47.4 seconds, i.e. 0.79 minutes or 0.013 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
non_linears:
['a(n) -2*a(n-1) -56', 'a(n-1) -2*a(n-2) -56', 'a(n) -4*a(n-2) -168', 'a(n-2) -2*a(n-3) -56', 'a(n-1) -4*a(n-3) -168', 'a(n) -8*a(n-3) -392', 'a(n-3) -2*a(n-4) -56', 'a(n-2) -4*a(n-4) -168', 'a(n-1) -8*a(n-4) -392', 'a(n) -16*a(n-4) -840', 'a(n-4) -2*a(n-5) -56', 'a(n-3) -4*a(n-5) -168', 'a(n-2) -8*a(n-5) -392', 'a(n-1) -16*a(n-5) -840', 'a(n) -32*a(n-5) -1736', 'a(n-5) -2*a(n-6) -56', 'a(n-4) -4*a(n-6) -168', 'a(n-3) -8*a(n-6) -392', 'a(n-2) -16*a(n-6) -840', 'a(n-1) -32*a(n-6) -1736', 'a(n) -64*a(n-6) -3528', 'a(n-6) -2*a(n-7) -56', 'a(n-5) -4*a(n-7) -168', 'a(n-4) -8*a(n-7) -392', 'a(n-3) -16*a(n-7) -840', 'a(n-2) -32*a(n-7) -1736', 'a(n-1) -64*a(n-7) -3528', 'a(n) -128*a(n-7) -7112', 'a(n-7) -2*a(n-8) -56', 'a(n-6) -4*a(n-8) -168', 'a(n-5) -8*a(n-8) -392', 'a(n-4) -16*a(n-8) -840', 'a(n-3) -32*a(n-8) -1736', 'a(n-2) -64*a(n-8) -3528', 'a(n-1) -128*a(n-8) -7112', 'a(n) -256*a(n-8) -14280', 'a(n-8) -2*a(n-9) -56', 'a(n-7) -4*a(n-9) -168', 'a(n-6) -8*a(n-9) -392', 'a(n-5) -16*a(n-9) -840', 'a(n-4) -32*a(n-9) -1736', 'a(n-3) -64*a(n-9) -3528', 'a(n-2) -128*a(n-9) -7112', 'a(n-1) -256*a(n-9) -14280', 'a(n) -512*a(n-9) -28616', 'a(n-9) -2*a(n-10) -56', 'a(n-8) -4*a(n-10) -168', 'a(n-7) -8*a(n-10) -392', 'a(n-6) -16*a(n-10) -840', 'a(n-5) -32*a(n-10) -1736', 'a(n-4) -64*a(n-10) -3528', 'a(n-3) -128*a(n-10) -7112', 'a(n-2) -256*a(n-10) -14280', 'a(n-1) -512*a(n-10) -28616', 'a(n) -1024*a(n-10) -57288', 'a(n-10) -2*a(n-11) -56', 'a(n-9) -4*a(n-11) -168', 'a(n-8) -8*a(n-11) -392', 'a(n-7) -16*a(n-11) -840', 'a(n-6) -32*a(n-11) -1736', 'a(n-5) -64*a(n-11) -3528', 'a(n-4) -128*a(n-11) -7112', 'a(n-3) -256*a(n-11) -14280', 'a(n-2) -512*a(n-11) -28616', 'a(n-1) -1024*a(n-11) -57288', 'a(n-11) -2*a(n-12) -56', 'a(n-10) -4*a(n-12) -168', 'a(n-9) -8*a(n-12) -392', 'a(n-8) -16*a(n-12) -840', 'a(n-7) -32*a(n-12) -1736', 'a(n-6) -64*a(n-12) -3528', 'a(n-5) -128*a(n-12) -7112', 'a(n-4) -256*a(n-12) -14280', 'a(n-3) -512*a(n-12) -28616', 'a(n-2) -1024*a(n-12) -57288', 'a(n-12) -2*a(n-13) -56', 'a(n-11) -4*a(n-13) -168', 'a(n-10) -8*a(n-13) -392', 'a(n-9) -16*a(n-13) -840', 'a(n-8) -32*a(n-13) -1736', 'a(n-7) -64*a(n-13) -3528', 'a(n-6) -128*a(n-13) -7112', 'a(n-5) -256*a(n-13) -14280', 'a(n-4) -512*a(n-13) -28616', 'a(n-3) -1024*a(n-13) -57288', 'a(n-13) -2*a(n-14) -56', 'a(n-12) -4*a(n-14) -168', 'a(n-11) -8*a(n-14) -392', 'a(n-10) -16*a(n-14) -840', 'a(n-9) -32*a(n-14) -1736', 'a(n-8) -64*a(n-14) -3528', 'a(n-7) -128*a(n-14) -7112', 'a(n-6) -256*a(n-14) -14280', 'a(n-5) -512*a(n-14) -28616', 'a(n-4) -1024*a(n-14) -57288', 'a(n-14) -2*a(n-15) -56', 'a(n-13) -4*a(n-15) -168', 'a(n-12) -8*a(n-15) -392', 'a(n-11) -16*a(n-15) -840', 'a(n-10) -32*a(n-15) -1736', 'a(n-9) -64*a(n-15) -3528', 'a(n-8) -128*a(n-15) -7112', 'a(n-7) -256*a(n-15) -14280', 'a(n-6) -512*a(n-15) -28616', 'a(n-5) -1024*a(n-15) -57288', 'a(n-15) -2*a(n-16) -56', 'a(n-14) -4*a(n-16) -168', 'a(n-13) -8*a(n-16) -392', 'a(n-12) -16*a(n-16) -840', 'a(n-11) -32*a(n-16) -1736', 'a(n-10) -64*a(n-16) -3528', 'a(n-9) -128*a(n-16) -7112', 'a(n-8) -256*a(n-16) -14280', 'a(n-7) -512*a(n-16) -28616', 'a(n-6) -1024*a(n-16) -57288', 'a(n-16) -2*a(n-17) -56', 'a(n-15) -4*a(n-17) -168', 'a(n-14) -8*a(n-17) -392', 'a(n-13) -16*a(n-17) -840', 'a(n-12) -32*a(n-17) -1736', 'a(n-11) -64*a(n-17) -3528', 'a(n-10) -128*a(n-17) -7112', 'a(n-9) -256*a(n-17) -14280', 'a(n-8) -512*a(n-17) -28616', 'a(n-7) -1024*a(n-17) -57288', 'a(n-17) -2*a(n-18) -56', 'a(n-16) -4*a(n-18) -168', 'a(n-15) -8*a(n-18) -392', 'a(n-14) -16*a(n-18) -840', 'a(n-13) -32*a(n-18) -1736', 'a(n-12) -64*a(n-18) -3528', 'a(n-11) -128*a(n-18) -7112', 'a(n-10) -256*a(n-18) -14280', 'a(n-9) -512*a(n-18) -28616', 'a(n-8) -1024*a(n-18) -57288', 'a(n-18) -2*a(n-19) -56', 'a(n-17) -4*a(n-19) -168', 'a(n-16) -8*a(n-19) -392', 'a(n-15) -16*a(n-19) -840', 'a(n-14) -32*a(n-19) -1736', 'a(n-13) -64*a(n-19) -3528', 'a(n-12) -128*a(n-19) -7112', 'a(n-11) -256*a(n-19) -14280', 'a(n-10) -512*a(n-19) -28616', 'a(n-9) -1024*a(n-19) -57288', 'a(n-19) -2*a(n-20) -56', 'a(n-18) -4*a(n-20) -168', 'a(n-17) -8*a(n-20) -392', 'a(n-16) -16*a(n-20) -840', 'a(n-15) -32*a(n-20) -1736', 'a(n-14) -64*a(n-20) -3528', 'a(n-13) -128*a(n-20) -7112', 'a(n-12) -256*a(n-20) -14280', 'a(n-11) -512*a(n-20) -28616', 'a(n-10) -1024*a(n-20) -57288']
A304519: 
MB not reconst
truth: 
a(n) = 3*a(n - 1) + -2*a(n - 2),  
a(0) = 88, a(1) = 232

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

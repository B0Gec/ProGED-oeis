
orders_used: [1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:5251/10000, seq_id:A039183, order:20 took:
 26.7 seconds, i.e. 0.45 minutes or 0.007 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
eqs_explicit:
['a(n) = -8*n + a(n-6)*a(n-5)/2 - 2*a(n-6) + a(n-5) + 3*a(n-4) + 3*a(n-3) - 2*a(n-2) - a(n-1) + 56']
non_linears:
['a(n)^2 -2*a(n)*a(n-1) +a(n-1)^2 -3*a(n) +3*a(n-1) +2', 'a(n-1)^2 -2*a(n-1)*a(n-2) +a(n-2)^2 -3*a(n-1) +3*a(n-2) +2', 'a(n-2)^2 -2*a(n-2)*a(n-3) +a(n-3)^2 -3*a(n-2) +3*a(n-3) +2', 'n*a(n-1) +(-5/8)*n*a(n-3) +(-3/4)*a(n-1)*a(n-3) +(3/8)*a(n-3)^2 -2*n -4*a(n-1) +(-1/2)*a(n-2) +(45/8)*a(n-3) +17/2', 'a(n-1)*a(n-3)^2 -a(n-3)^3 +(11/2)*n*a(n-3) -12*a(n-1)*a(n-3) -4*a(n-2)*a(n-3) +(17/2)*a(n-3)^2 +26*a(n-2) +(-7/2)*a(n-3) -26', 'a(n-2)*a(n-3)^2 -a(n-3)^3 +(33/4)*n*a(n-3) +(3/2)*a(n-1)*a(n-3) -15*a(n-2)*a(n-3) +(17/4)*a(n-3)^2 -18*a(n-1) +23*a(n-2) +(-5/4)*a(n-3) +13', 'a(n-1)^2 +(11/12)*n*a(n-3) +(-11/6)*a(n-1)*a(n-3) +(-1/12)*a(n-3)^2 -7*a(n-1) +(-7/3)*a(n-2) +(97/12)*a(n-3) +37/3', 'n^2 +(-37/24)*n*a(n-3) +(1/12)*a(n-1)*a(n-3) +(11/24)*a(n-3)^2 -4*n -a(n-1) +(-1/6)*a(n-2) +(109/24)*a(n-3) +31/6', 'a(n-1)*a(n-2) +(11/24)*n*a(n-3) +(-11/12)*a(n-1)*a(n-3) -a(n-2)*a(n-3) +(11/24)*a(n-3)^2 -2*a(n-1) +(-25/6)*a(n-2) +(133/24)*a(n-3) +37/6', 'n*a(n-3)^2 -a(n-3)^3 -5*n*a(n-3) +(-8/11)*a(n-1)*a(n-3) +(4/11)*a(n-2)*a(n-3) +(48/11)*a(n-3)^2 +(96/11)*a(n-1) +(-36/11)*a(n-2) +(7/11)*a(n-3) -156/11', 'a(n)*a(n-2) +(77/48)*n*a(n-3) +(-17/24)*a(n-1)*a(n-3) +(-91/48)*a(n-3)^2 -12*a(n) +(11/2)*n +(13/2)*a(n-1) +(-199/12)*a(n-2) +(595/48)*a(n-3) +373/12', 'n*a(n-2) +(-17/24)*n*a(n-3) +(7/132)*a(n-1)*a(n-3) +(-9/11)*a(n-2)*a(n-3) +(125/264)*a(n-3)^2 -n +(-7/11)*a(n-1) +(-229/66)*a(n-2) +(1195/264)*a(n-3) +313/66', 'a(n-3)^2 -2*a(n-3)*a(n-4) +a(n-4)^2 -3*a(n-3) +3*a(n-4) +2', 'a(n-3)*a(n-4)^2 -a(n-4)^3 -6*a(n-3)*a(n-4) +5*a(n-4)^2 +8*a(n-3) -2*a(n-4) -8', 'a(n-2)^2 -2*a(n-2)*a(n-4) +a(n-3)*a(n-4) -5*a(n-2) -4*a(n-3) +8*a(n-4) +10', 'a(n)*a(n-3) -a(n-3)*a(n-4) -11*a(n) +11*n -2*a(n-1) -8*a(n-3) +6*a(n-4) +32', 'a(n-2)*a(n-3) -a(n-2)*a(n-4) +(-1/2)*a(n-3)*a(n-4) +(1/2)*a(n-4)^2 -a(n-2) -5*a(n-3) +(11/2)*a(n-4) +5', 'a(n)*a(n-2) -a(n-2)*a(n-4) -12*a(n) +11*n -2*a(n-1) -6*a(n-2) -2*a(n-3) +7*a(n-4) +38', 'a(n)^2 -a(n-4)^2 -29*a(n) +22*n -6*a(n-1) +2*a(n-2) -6*a(n-3) +9*a(n-4) +76', 'a(n-2)*a(n-4)^2 -a(n-4)^3 -13*a(n-2)*a(n-4) +2*a(n-3)*a(n-4) +9*a(n-4)^2 +12*a(n-2) +16*a(n-3) -4*a(n-4) -40', 'a(n)*a(n-4) +(-1/2)*a(n-3)*a(n-4) +(-1/2)*a(n-4)^2 -10*a(n) +11*n -2*a(n-1) -a(n-3) +(-3/2)*a(n-4) +25', 'a(n-1)^2 -2*a(n-2)*a(n-4) +(9/2)*a(n-3)*a(n-4) +(-7/2)*a(n-4)^2 +11*n -29*a(n-1) +18*a(n-2) -25*a(n-3) +(37/2)*a(n-4) +45', 'n*a(n-5) -a(n-4)*a(n-5) -2*a(n-3) +2*a(n-4) -2*a(n-5) +2', 'a(n-4)^2 -2*a(n-4)*a(n-5) +a(n-5)^2 -3*a(n-4) +3*a(n-5) +2', 'a(n-3)*a(n-4) -a(n-4)*a(n-5) -2*a(n-3) -6*a(n-4) +6*a(n-5) +8', 'a(n-3)^2 -a(n-5)^2 -7*a(n-3) -6*a(n-4) +9*a(n-5) +16', 'n*a(n-3) -a(n-4)*a(n-5) -2*n -8*a(n-3) +6*a(n-5) +16', 'a(n-3)*a(n-5) +(-1/2)*a(n-4)*a(n-5) +(-1/2)*a(n-5)^2 -a(n-3) -a(n-4) +(1/2)*a(n-5) +3', 'n*a(n-1) -a(n-4)*a(n-5) +5*n -13*a(n-1) -2*a(n-2) -2*a(n-3) +6*a(n-5) +35', 'a(n-1)*a(n-4) -a(n-4)*a(n-5) +11*n -11*a(n-1) -2*a(n-2) -8*a(n-4) +6*a(n-5) +21', 'n*a(n-4) +(-3/2)*a(n-4)*a(n-5) +(1/2)*a(n-5)^2 -n -2*a(n-3) -4*a(n-4) +(9/2)*a(n-5) +8', 'a(n)*a(n-3) -a(n-4)*a(n-5) -11*a(n) +11*n -2*a(n-1) -10*a(n-3) +6*a(n-5) +40', 'a(n-5)*a(n-6) -2*a(n) -16*n -2*a(n-1) -4*a(n-2) +6*a(n-3) +6*a(n-4) +2*a(n-5) -4*a(n-6) +112']
A039183: 
a(n) = -8*n + a(n-6)*a(n-5)/2 - 2*a(n-6) + a(n-5) + 3*a(n-4) + 3*a(n-3) - 2*a(n-2) - a(n-1) + 56
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

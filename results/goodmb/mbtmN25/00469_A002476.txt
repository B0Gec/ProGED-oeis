
orders_used: [16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:470/10000, seq_id:A002476, order:20 took:
 27.2 seconds, i.e. 0.45 minutes or 0.008 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 16.
eqs_explicit:
['a(n) = -a(n-19)/2 + a(n-18)/2 + 3*a(n-16)/4 + a(n-15)/4 + 315/2']
non_linears:
['a(n-15)*a(n-16) +(-564/5)*a(n-9) +(-384/5)*a(n-10) -18*a(n-11) +(102/5)*a(n-12) +96*a(n-13) +(348/5)*a(n-14) +(-191/5)*a(n-15) +(1/5)*a(n-16) +41837/5', 'a(n-8) +(-2/23)*a(n-9) +(-10/23)*a(n-10) +(-4/23)*a(n-11) +(-25/46)*a(n-12) +(3/46)*a(n-13) +(12/23)*a(n-14) +(-17/23)*a(n-15) +(5/23)*a(n-16) -389/23', 'a(n-11)*a(n-13) +(-1212/5)*a(n-9) +(-492/5)*a(n-10) -67*a(n-11) +(66/5)*a(n-12) +65*a(n-13) +(384/5)*a(n-14) +(-168/5)*a(n-15) +(948/5)*a(n-16) +94691/5', 'n +(3/115)*a(n-9) +(-1/345)*a(n-10) +(-1/69)*a(n-11) +(-7/345)*a(n-12) +(-5/138)*a(n-13) +(-8/345)*a(n-14) +(-4/345)*a(n-15) +(-11/345)*a(n-16) -9839/690', 'a(n-3) +(-7/115)*a(n-9) +(-12/115)*a(n-10) +(-12/23)*a(n-11) +(-53/230)*a(n-12) +(9/46)*a(n-13) +(19/115)*a(n-14) +(-48/115)*a(n-15) +(-17/115)*a(n-16) -10159/115', 'a(n-5) +(-61/115)*a(n-9) +(-6/115)*a(n-10) +(11/46)*a(n-11) +(-199/230)*a(n-12) +(-15/23)*a(n-13) +(-48/115)*a(n-14) +(-24/115)*a(n-15) +(164/115)*a(n-16) -2492/115', 'a(n-2) +(98/115)*a(n-9) +(-62/115)*a(n-10) +(-9/46)*a(n-11) +(26/115)*a(n-12) +(-11/46)*a(n-13) +(-36/115)*a(n-14) +(-18/115)*a(n-15) +(-107/115)*a(n-16) -16244/115', 'a(n-1) +(41/115)*a(n-9) +(21/115)*a(n-10) +(19/46)*a(n-11) +(32/115)*a(n-12) +(-33/46)*a(n-13) +(-62/115)*a(n-14) +(-31/115)*a(n-15) +(-114/115)*a(n-16) -19683/115', 'a(n-7) +(304/115)*a(n-9) +(-21/115)*a(n-10) +(-19/46)*a(n-11) +(51/230)*a(n-12) +(-18/23)*a(n-13) +(-53/115)*a(n-14) +(31/115)*a(n-15) +(-346/115)*a(n-16) -21257/115', 'a(n-4) +(203/115)*a(n-9) +(3/115)*a(n-10) +(-20/23)*a(n-11) +(-94/115)*a(n-12) +(-27/23)*a(n-13) +(24/115)*a(n-14) +(127/115)*a(n-15) +(-197/115)*a(n-16) -15084/115', 'a(n-10) +(1/106)*a(n-11) +(5/106)*a(n-12) +(7/106)*a(n-13) +(-45/106)*a(n-14) +(4/53)*a(n-15) +(2/53)*a(n-16) +(-52/53)*a(n-17) -2859/53', 'a(n-9) +(-23/53)*a(n-11) +(-9/53)*a(n-12) +(-57/106)*a(n-13) +(3/106)*a(n-14) +(28/53)*a(n-15) +(-39/53)*a(n-16) +(7/53)*a(n-17) -1145/53', 'a(n-8) +(-11/53)*a(n-11) +(-57/106)*a(n-12) +(5/106)*a(n-13) +(18/53)*a(n-14) +(-35/53)*a(n-15) +(9/53)*a(n-16) +(-22/53)*a(n-17) -2239/53', 'a(n-4) +(-11/106)*a(n-11) +(-55/106)*a(n-12) +(-12/53)*a(n-13) +(9/53)*a(n-14) +(9/53)*a(n-15) +(-22/53)*a(n-16) +(-11/53)*a(n-17) -4856/53', 'a(n-3) +(-29/53)*a(n-11) +(-25/106)*a(n-12) +(9/53)*a(n-13) +(13/106)*a(n-14) +(-20/53)*a(n-15) +(-10/53)*a(n-16) +(-5/53)*a(n-17) -5050/53', 'a(n-6) +(-5/106)*a(n-11) +(14/53)*a(n-12) +(-44/53)*a(n-13) +(-93/106)*a(n-14) +(-20/53)*a(n-15) +(-10/53)*a(n-16) +(48/53)*a(n-17) -2665/53', 'a(n-1) +(30/53)*a(n-11) +(35/106)*a(n-12) +(-57/106)*a(n-13) +(-25/53)*a(n-14) +(-25/53)*a(n-15) +(-39/53)*a(n-16) +(7/53)*a(n-17) -8141/53', 'n +(-1/318)*a(n-11) +(-5/318)*a(n-12) +(-7/318)*a(n-13) +(-4/159)*a(n-14) +(-4/159)*a(n-15) +(-2/159)*a(n-16) +(-1/159)*a(n-17) -4405/318', 'a(n-7) +(39/53)*a(n-11) +(36/53)*a(n-12) +(69/106)*a(n-13) +(-65/106)*a(n-14) +(-59/53)*a(n-15) +(-56/53)*a(n-16) +(-28/53)*a(n-17) -7292/53', 'a(n-5) +(1/106)*a(n-11) +(-101/106)*a(n-12) +(-99/106)*a(n-13) +(-45/106)*a(n-14) +(4/53)*a(n-15) +(55/53)*a(n-16) +(1/53)*a(n-17) -1905/53', 'a(n-13)*a(n-14) -13*a(n-13) -13*a(n-14) +60*a(n-15) -72*a(n-17) -108*a(n-18) -719', 'a(n-11) +(2/47)*a(n-13) +(3/47)*a(n-14) +(-20/47)*a(n-15) +(4/47)*a(n-16) +(2/47)*a(n-17) +(-46/47)*a(n-18) -2506/47', 'a(n-10) +(2/47)*a(n-13) +(-41/94)*a(n-14) +(7/94)*a(n-15) +(4/47)*a(n-16) +(-45/47)*a(n-17) +(1/47)*a(n-18) -2365/47', 'a(n-9) +(-41/94)*a(n-13) +(9/94)*a(n-14) +(17/47)*a(n-15) +(-41/47)*a(n-16) +(3/47)*a(n-17) +(-22/47)*a(n-18) -2631/47', 'a(n-6) +(-45/47)*a(n-13) +(-44/47)*a(n-14) +(-20/47)*a(n-15) +(4/47)*a(n-16) +(49/47)*a(n-17) +(1/47)*a(n-18) -1660/47', 'a(n-2) +(5/94)*a(n-13) +(-63/94)*a(n-14) +(-25/47)*a(n-15) +(5/47)*a(n-16) +(-21/47)*a(n-17) +(13/47)*a(n-18) -5459/47', 'a(n-12) +(23/47)*a(n-13) +(11/47)*a(n-14) +(5/47)*a(n-15) +(-48/47)*a(n-16) +(-24/47)*a(n-17) +(-12/47)*a(n-18) -3110/47', 'a(n-5) +(-22/47)*a(n-13) +(-19/94)*a(n-14) +(17/94)*a(n-15) +(3/47)*a(n-16) +(-22/47)*a(n-17) +(-11/47)*a(n-18) -4629/47', 'a(n-4) +(3/94)*a(n-13) +(14/47)*a(n-14) +(17/94)*a(n-15) +(-44/47)*a(n-16) +(-22/47)*a(n-17) +(-11/47)*a(n-18) -6180/47', 'a(n-3) +(29/94)*a(n-13) +(10/47)*a(n-14) +(-55/94)*a(n-15) +(-18/47)*a(n-16) +(-9/47)*a(n-17) +(-28/47)*a(n-18) -6583/47', 'n +(1/6)*a(n-16) +(-1/3)*a(n-19) -131/6', 'a(n-9) -5*a(n-16) -a(n-17) -a(n-18) +7*a(n-19) +41', 'a(n-11) +(-1/2)*a(n-15) +(-1/2)*a(n-16) -a(n-18) +a(n-19) -33', 'a(n-6) +(1/2)*a(n-15) +(13/2)*a(n-16) +a(n-17) -11*a(n-19) -289', 'a(n-3) +(-3/4)*a(n-15) +(-5/4)*a(n-16) +(-1/2)*a(n-18) +(3/2)*a(n-19) -189/2', 'a(n) +(-1/4)*a(n-15) +(-3/4)*a(n-16) +(-1/2)*a(n-18) +(1/2)*a(n-19) -315/2']
A002476: 
a(n) = -a(n-19)/2 + a(n-18)/2 + 3*a(n-16)/4 + a(n-15)/4 + 315/2
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

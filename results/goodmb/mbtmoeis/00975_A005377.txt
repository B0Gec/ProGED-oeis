
orders_used: [1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:976/10000, seq_id:A005377, order:10 took:
 42.1 seconds, i.e. 0.7 minutes or 0.012 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 10, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 10, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
eqs_explicit:
['a(n) = n/2 + a(n-5)^2 - a(n-5)*a(n-1)/2 + 3*a(n-5)/2 + a(n-1)/2 - 1']
non_linears:
['a(n)*a(n-1)^2 -a(n-1)^3 -6*a(n)*a(n-1) +2*n*a(n-1) +3*a(n-1)^2 -2*a(n-1)', 'a(n)*a(n-1) -2*a(n-1)^2 +(-6/5)*a(n)*a(n-2) +(17/5)*a(n-1)*a(n-2) +(-6/5)*a(n-2)^2', 'a(n-1)*a(n-2)^2 -a(n-2)^3 +2*n*a(n-2) -6*a(n-1)*a(n-2) +3*a(n-2)^2 -4*a(n-2)', 'a(n-1)^2*a(n-2) -a(n-2)^3 +4*n*a(n-2) -15*a(n-1)*a(n-2) +9*a(n-2)^2 -6*a(n-2)', 'n*a(n-1) -3*a(n-1)^2 -n*a(n-2) +6*a(n-1)*a(n-2) -3*a(n-2)^2 -2*a(n-1) +a(n-2)', 'a(n)*a(n-2)^2 -a(n-2)^3 -5*a(n)*a(n-2) +4*n*a(n-2) -2*a(n-1)*a(n-2) +a(n-2)^2 -8*a(n-2)', 'a(n-1)^3 -a(n-2)^3 -3*a(n-1)^2 +6*n*a(n-2) -21*a(n-1)*a(n-2) +15*a(n-2)^2 +2*a(n-1) -8*a(n-2)', 'a(n)^2 -4*a(n-1)^2 +(-14/5)*a(n)*a(n-2) +(48/5)*a(n-1)*a(n-2) +(-19/5)*a(n-2)^2 -a(n) +2*a(n-1) -a(n-2)', 'a(n)*n -6*a(n-1)^2 +(-6/5)*a(n)*a(n-2) -n*a(n-2) +(72/5)*a(n-1)*a(n-2) +(-36/5)*a(n-2)^2 -4*a(n) +4*a(n-1) -2*a(n-2)', 'a(n-1)*a(n-2) -2*a(n-2)^2 +(-6/5)*a(n-1)*a(n-3) +(17/5)*a(n-2)*a(n-3) +(-6/5)*a(n-3)^2', 'a(n-2)*a(n-3)^2 -a(n-3)^3 +2*n*a(n-3) -6*a(n-2)*a(n-3) +3*a(n-3)^2 -6*a(n-3)', 'a(n-2)^2*a(n-3) -a(n-3)^3 +4*n*a(n-3) -15*a(n-2)*a(n-3) +9*a(n-3)^2 -10*a(n-3)', 'n*a(n-2) -3*a(n-2)^2 -n*a(n-3) +6*a(n-2)*a(n-3) -3*a(n-3)^2 -3*a(n-2) +2*a(n-3)', 'a(n-1)*a(n-3)^2 -a(n-3)^3 +4*n*a(n-3) -5*a(n-1)*a(n-3) -2*a(n-2)*a(n-3) +a(n-3)^2 -12*a(n-3)', 'a(n-2)^3 -a(n-3)^3 -3*a(n-2)^2 +6*n*a(n-3) -21*a(n-2)*a(n-3) +15*a(n-3)^2 +2*a(n-2) -14*a(n-3)', 'a(n)*a(n-3) +(-2/5)*a(n-1)*a(n-3) +(-1/5)*a(n-2)*a(n-3) +(-2/5)*a(n-3)^2 -4*a(n) +4*n -2*a(n-3) -12', 'a(n-1)^2 -4*a(n-2)^2 +(-14/5)*a(n-1)*a(n-3) +(48/5)*a(n-2)*a(n-3) +(-19/5)*a(n-3)^2 -a(n-1) +2*a(n-2) -a(n-3)', 'n*a(n-3)^2 -a(n-3)^3 +120*a(n-2)^2 -18*n*a(n-3) -280*a(n-2)*a(n-3) +172*a(n-3)^2 -120*a(n-2) +268*a(n-3)', 'n*a(n-1) -6*a(n-2)^2 -n*a(n-3) +(-6/5)*a(n-1)*a(n-3) +(72/5)*a(n-2)*a(n-3) +(-36/5)*a(n-3)^2 -5*a(n-1) +4*a(n-2) -a(n-3)', 'n*a(n-3) +(-5/4)*n*a(n-4) -a(n-3)*a(n-4) +(5/4)*a(n-4)^2 -7*a(n-3) +(35/4)*a(n-4)', 'a(n-3)^2 +(-1/12)*n*a(n-4) +(-7/3)*a(n-3)*a(n-4) +(17/12)*a(n-4)^2 -a(n-3) +(23/12)*a(n-4)', 'a(n-2)*a(n-3) +(-1/6)*n*a(n-4) +(-6/5)*a(n-2)*a(n-4) +(-19/15)*a(n-3)*a(n-4) +(49/30)*a(n-4)^2 -2*a(n-3) +(23/6)*a(n-4)', 'a(n-1)*a(n-4) +(-2/5)*a(n-2)*a(n-4) +(-1/5)*a(n-3)*a(n-4) +(-2/5)*a(n-4)^2 +4*n -4*a(n-1) -2*a(n-4) -16', 'n*a(n-2) +(-3/2)*n*a(n-4) +(-6/5)*a(n-2)*a(n-4) +(2/5)*a(n-3)*a(n-4) +(13/10)*a(n-4)^2 -6*a(n-2) -2*a(n-3) +(23/2)*a(n-4)', 'a(n-2)^2 +(-1/3)*n*a(n-4) +(-14/5)*a(n-2)*a(n-4) +(4/15)*a(n-3)*a(n-4) +(28/15)*a(n-4)^2 -a(n-2) -2*a(n-3) +(20/3)*a(n-4)', 'n*a(n-1) +(-7/4)*n*a(n-4) +(3/4)*a(n-4)^2 +6*n -11*a(n-1) -2*a(n-2) -2*a(n-3) +(45/4)*a(n-4) -24', 'a(n-1)*a(n-2) +(-1/2)*n*a(n-4) -2*a(n-2)*a(n-4) +(3/2)*a(n-4)^2 +6*n -6*a(n-1) -2*a(n-2) -2*a(n-3) +(13/2)*a(n-4) -24', 'a(n)*n +(-7/4)*n*a(n-4) +(3/4)*a(n-4)^2 -10*a(n) +6*n -2*a(n-1) -2*a(n-2) -2*a(n-3) +(45/4)*a(n-4) -18', 'a(n)*a(n-4) +(1/8)*n*a(n-4) +(-2/5)*a(n-2)*a(n-4) +(-1/5)*a(n-3)*a(n-4) +(-21/40)*a(n-4)^2 -3*a(n) +5*n -2*a(n-1) +(-31/8)*a(n-4) -17', 'n*a(n-5) -a(n-5)^2 -8*a(n-5)', 'a(n)*a(n-5) -2*a(n-5)^2 -4*a(n-5)', 'n*a(n-4) -a(n-4)*a(n-5) -8*a(n-4)', 'a(n-4)^2 +(-7/3)*a(n-4)*a(n-5) +(4/3)*a(n-5)^2 -a(n-4) +(4/3)*a(n-5)', 'a(n-1)*a(n-5) -2*a(n-5)^2 +2*a(n) -n -a(n-1) -3*a(n-5) +2']
A005377: 
a(n) = n/2 + a(n-5)^2 - a(n-5)*a(n-1)/2 + 3*a(n-5)/2 + a(n-1)/2 - 1
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

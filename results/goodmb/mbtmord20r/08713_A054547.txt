
orders_used: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 9, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:8714/10000, seq_id:A054547, order:20 took:
 21.1 seconds, i.e. 0.35 minutes or 0.006 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 9.
eqs_explicit:
['a(n) = 67*a(n-12) + 6*a(n-11)']
non_linears:
['a(n-7)*a(n-9)', 'n +(-63/2)*a(n-5) +(73/2)*a(n-6) +(-45/2)*a(n-7) +(13/2)*a(n-8) +(361/2)*a(n-9) -1/2', 'a(n-9)^2 +(-512/47)*a(n-5) +(600/47)*a(n-6) +(-372/47)*a(n-7) +(114/47)*a(n-8) +(2849/47)*a(n-9) +144/47', 'a(n-8)*a(n-9) +(-512/47)*a(n-5) +(600/47)*a(n-6) +(-372/47)*a(n-7) +(114/47)*a(n-8) +(2896/47)*a(n-9) +144/47', 'a(n-5)*a(n-9) +(4096/47)*a(n-5) +(-4800/47)*a(n-6) +(2976/47)*a(n-7) +(-912/47)*a(n-8) +(-24108/47)*a(n-9) -1152/47', 'a(n-2) +(7741/47)*a(n-5) +(-8965/47)*a(n-6) +(5516/47)*a(n-7) +(-1607/47)*a(n-8) +(-44280/47)*a(n-9) -3007/47', 'a(n-6)*a(n-9) +(6144/47)*a(n-5) +(-7200/47)*a(n-6) +(4464/47)*a(n-7) +(-1368/47)*a(n-8) +(-35316/47)*a(n-9) -1728/47', 'a(n-3) +(-12676/47)*a(n-5) +(14793/47)*a(n-6) +(-9041/47)*a(n-7) +(2688/47)*a(n-8) +(72997/47)*a(n-9) +2725/47', 'a(n-5)*a(n-8) +(16548/47)*a(n-5) +(-19260/47)*a(n-6) +(11772/47)*a(n-7) +(-3744/47)*a(n-8) +(-95556/47)*a(n-9) -4284/47', 'a(n-4) +(-37583/94)*a(n-5) +(43729/94)*a(n-6) +(-26767/94)*a(n-7) +(7917/94)*a(n-8) +(215697/94)*a(n-9) +9805/94', 'a(n-8)*a(n-10)', 'a(n-7)*a(n-9)', 'a(n-9)*a(n-10) +(8/109)*a(n-7) +(-76/545)*a(n-8) +(-18/545)*a(n-9) +(-592/545)*a(n-10) +112/545', 'a(n-8)*a(n-9) +(-4/109)*a(n-7) +(38/545)*a(n-8) +(-536/545)*a(n-9) +(296/545)*a(n-10) -56/545', 'a(n-10)^2 +(8/109)*a(n-7) +(-76/545)*a(n-8) +(-18/545)*a(n-9) +(-1137/545)*a(n-10) +112/545', 'a(n-9)^2 +(-4/109)*a(n-7) +(38/545)*a(n-8) +(-1081/545)*a(n-9) +(296/545)*a(n-10) -56/545', 'n +(-22/109)*a(n-7) +(-9/545)*a(n-8) +(-332/545)*a(n-9) +(-443/545)*a(n-10) -5322/545', 'a(n-4) +(55/109)*a(n-7) +(77/545)*a(n-8) +(-2004/545)*a(n-9) +(399/545)*a(n-10) -6969/545', 'a(n-7)*a(n-10) +(-96/109)*a(n-7) +(912/545)*a(n-8) +(216/545)*a(n-9) +(564/545)*a(n-10) -1344/545', 'a(n-6) +(-127/109)*a(n-7) +(389/545)*a(n-8) +(-123/545)*a(n-9) +(-3137/545)*a(n-10) -143/545', 'a(n-9)*a(n-11)', 'a(n-8) +9*a(n-9) +5*a(n-10) +7*a(n-11) -19', 'a(n-1) +9*a(n-9) +5*a(n-10) +7*a(n-11) -19', 'a(n-10)*a(n-11) +(-4/5)*a(n-9) +(-2/5)*a(n-10) +(-8/5)*a(n-11) +8/5', 'a(n-10)^2 +(2/5)*a(n-9) +(-9/5)*a(n-10) +(4/5)*a(n-11) -4/5', 'a(n-9)*a(n-10) +(2/5)*a(n-9) +(-4/5)*a(n-10) +(4/5)*a(n-11) -4/5', 'a(n-3) +(-41/5)*a(n-9) +(2/5)*a(n-10) +(-7/5)*a(n-11) +7/5', 'a(n-2) +(-17/5)*a(n-9) +(4/5)*a(n-10) +(-4/5)*a(n-11) +4/5', 'n +(9/5)*a(n-9) +(2/5)*a(n-10) +(3/5)*a(n-11) -73/5', 'a(n-11)^2 +(-4/5)*a(n-9) +(-2/5)*a(n-10) +(-13/5)*a(n-11) +8/5', 'a(n-8) -6*a(n-12)', 'a(n-1) -6*a(n-12)', 'a(n-12)^2 -2*a(n-12)', 'a(n-11)*a(n-12) -a(n-12)', 'a(n-7) -6*a(n-11) -7*a(n-12)', 'a(n) -6*a(n-11) -67*a(n-12)']
A054547: 
a(n) = 67*a(n-12) + 6*a(n-11)
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    


orders_used: [2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 2, 4, 4, 4, 4, 4, 4, 4, 5, 4, 3, 2, 5, 5, 6, 6, 5, 4, 3, 2, 7, 7, 6, 5, 4, 3, 8, 7, 6, 5, 9, 8, 7, 10, 10, 9, 10, 10, 10, 10, 10]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:1475/10000, seq_id:A008422, order:20 took:
 32.4 seconds, i.e. 0.54 minutes or 0.009 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 2.
eqs_explicit:
['a(n) = 12800*a(n-10)/1447 - 3600*a(n-9)/1447 + 8760*a(n-8)/1447 + 1280*a(n-7)/1447 - 12800/1447']
non_linears:
['a(n)*a(n-2)', 'a(n-1)*a(n-3)', 'a(n)*a(n-2)', 'a(n-2)*a(n-3)^2 -10*a(n-2)*a(n-3)', 'a(n-2)^2*a(n-3) -32*a(n-2)*a(n-3)', 'n*a(n-2) +(1/152)*a(n-1)*a(n-2) +(-12/95)*a(n-2)^2 +(189/950)*a(n-2)*a(n-3) +(-94/19)*a(n-2)', 'a(n)*a(n-3) +(1560/53)*n*a(n-3) +(-105/53)*a(n-2)*a(n-3) +(-320/53)*a(n-3)^2 +(-4360/53)*a(n-3)', 'a(n-2)^3 +(-525/38)*a(n-1)*a(n-2) +(-1230/19)*a(n-2)^2 +(552/95)*a(n-2)*a(n-3) +(18800/19)*a(n-2)', 'a(n-1)*a(n-2)^2 +(-1240/19)*a(n-1)*a(n-2) +(-1120/19)*a(n-2)^2 +(-896/19)*a(n-2)*a(n-3) +(44800/19)*a(n-2)', 'n*a(n-3)^2 +(-3680/53)*n*a(n-3) +(1215/212)*a(n-2)*a(n-3) +(161/53)*a(n-3)^2 +(10720/53)*a(n-3)', 'a(n-1)^2*a(n-2) +(-2528/19)*a(n-1)*a(n-2) +(-2048/19)*a(n-2)^2 +(-8192/95)*a(n-2)*a(n-3) +(81920/19)*a(n-2)', 'a(n-2)*a(n-4)', 'a(n-1)*a(n-3)', 'a(n)*a(n-2)', 'a(n)*a(n-3) -4*a(n-3)*a(n-4)', 'a(n-3)*a(n-4)^2 -10*a(n-3)*a(n-4)', 'a(n-1)*a(n-4)^2 -32*a(n-1)*a(n-4)', 'a(n-3)^2*a(n-4) -32*a(n-3)*a(n-4)', 'a(n-3)^3 -50*a(n-3)^2 +(88/5)*a(n-3)*a(n-4) +400*a(n-3)', 'n*a(n-3) +(-2/15)*a(n-3)^2 +(29/150)*a(n-3)*a(n-4) +(-17/3)*a(n-3)', 'a(n-2)*a(n-3) +(16/15)*a(n-3)^2 +(64/75)*a(n-3)*a(n-4) +(-128/3)*a(n-3)', 'a(n-3)*a(n-5)', 'a(n-2)*a(n-4)', 'a(n-1)*a(n-3)', 'a(n)*a(n-2)', 'a(n-1)*a(n-4) -4*a(n-4)*a(n-5)', 'a(n-4)*a(n-5)^2 -10*a(n-4)*a(n-5)', 'a(n-4)*a(n-6)', 'a(n)*a(n-6)', 'a(n-3)*a(n-5)', 'a(n-2)*a(n-4)', 'a(n-1)*a(n-3)', 'a(n)*a(n-2)', 'a(n-5)*a(n-7)', 'a(n-1)*a(n-7)', 'a(n-4)*a(n-6)', 'a(n-3)*a(n-5)', 'a(n-2)*a(n-4)', 'a(n-1)*a(n-3)', 'a(n-6)*a(n-8)', 'a(n-5)*a(n-7)', 'a(n-4)*a(n-6)', 'a(n-3)*a(n-5)', 'a(n-7)*a(n-9)', 'a(n-6)*a(n-8)', 'a(n-5)*a(n-7)', 'a(n-8)*a(n-10)', 'a(n-7)*a(n-10)', 'a(n-7)*a(n-9)', 'n +(-421/8682)*a(n-7) +(29/4341)*a(n-8) +(-781/2894)*a(n-9) +(2236/4341)*a(n-10) -45646/4341', 'a(n-1) +(400/1447)*a(n-7) +(-880/1447)*a(n-8) +(-8360/1447)*a(n-9) +(4000/1447)*a(n-10) -4000/1447', 'a(n-10)^2 +(-375/1447)*a(n-7) +(825/1447)*a(n-8) +(-3015/1447)*a(n-9) +(-5197/1447)*a(n-10) +3750/1447', 'a(n-4) +(-5120/4341)*a(n-7) +(-6100/4341)*a(n-8) +(4800/1447)*a(n-9) +(-51200/4341)*a(n-10) +51200/4341', 'a(n) +(-1280/1447)*a(n-7) +(-8760/1447)*a(n-8) +(3600/1447)*a(n-9) +(-12800/1447)*a(n-10) +12800/1447']
A008422: 
a(n) = 12800*a(n-10)/1447 - 3600*a(n-9)/1447 + 8760*a(n-8)/1447 + 1280*a(n-7)/1447 - 12800/1447
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

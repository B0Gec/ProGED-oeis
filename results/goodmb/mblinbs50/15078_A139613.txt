
orders_used: [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
While total time consumed by now, scale:15079/27236, seq_id:A139613, order:20 took:
 50.0 seconds, i.e. 0.83 minutes or 0.014 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
non_linears:
['a(n) -a(n-1) -78', 'a(n-1) -a(n-2) -78', 'a(n) -a(n-2) -156', 'a(n-2) -a(n-3) -78', 'a(n-1) -a(n-3) -156', 'a(n) -a(n-3) -234', 'a(n-3) -a(n-4) -78', 'a(n-2) -a(n-4) -156', 'a(n-1) -a(n-4) -234', 'a(n) -a(n-4) -312', 'a(n-4) -a(n-5) -78', 'a(n-3) -a(n-5) -156', 'a(n-2) -a(n-5) -234', 'a(n-1) -a(n-5) -312', 'a(n) -a(n-5) -390', 'a(n-5) -a(n-6) -78', 'a(n-4) -a(n-6) -156', 'a(n-3) -a(n-6) -234', 'a(n-2) -a(n-6) -312', 'a(n-1) -a(n-6) -390', 'a(n) -a(n-6) -468', 'a(n-6) -a(n-7) -78', 'a(n-5) -a(n-7) -156', 'a(n-4) -a(n-7) -234', 'a(n-3) -a(n-7) -312', 'a(n-2) -a(n-7) -390', 'a(n-1) -a(n-7) -468', 'a(n) -a(n-7) -546', 'a(n-7) -a(n-8) -78', 'a(n-6) -a(n-8) -156', 'a(n-5) -a(n-8) -234', 'a(n-4) -a(n-8) -312', 'a(n-3) -a(n-8) -390', 'a(n-2) -a(n-8) -468', 'a(n-1) -a(n-8) -546', 'a(n) -a(n-8) -624', 'a(n-8) -a(n-9) -78', 'a(n-7) -a(n-9) -156', 'a(n-6) -a(n-9) -234', 'a(n-5) -a(n-9) -312', 'a(n-4) -a(n-9) -390', 'a(n-3) -a(n-9) -468', 'a(n-2) -a(n-9) -546', 'a(n-1) -a(n-9) -624', 'a(n) -a(n-9) -702', 'a(n-9) -a(n-10) -78', 'a(n-8) -a(n-10) -156', 'a(n-7) -a(n-10) -234', 'a(n-6) -a(n-10) -312', 'a(n-5) -a(n-10) -390', 'a(n-4) -a(n-10) -468', 'a(n-3) -a(n-10) -546', 'a(n-2) -a(n-10) -624', 'a(n-1) -a(n-10) -702', 'a(n) -a(n-10) -780', 'a(n-10) -a(n-11) -78', 'a(n-9) -a(n-11) -156', 'a(n-8) -a(n-11) -234', 'a(n-7) -a(n-11) -312', 'a(n-6) -a(n-11) -390', 'a(n-5) -a(n-11) -468', 'a(n-4) -a(n-11) -546', 'a(n-3) -a(n-11) -624', 'a(n-2) -a(n-11) -702', 'a(n-1) -a(n-11) -780', 'a(n-11) -a(n-12) -78', 'a(n-10) -a(n-12) -156', 'a(n-9) -a(n-12) -234', 'a(n-8) -a(n-12) -312', 'a(n-7) -a(n-12) -390', 'a(n-6) -a(n-12) -468', 'a(n-5) -a(n-12) -546', 'a(n-4) -a(n-12) -624', 'a(n-3) -a(n-12) -702', 'a(n-2) -a(n-12) -780', 'a(n-12) -a(n-13) -78', 'a(n-11) -a(n-13) -156', 'a(n-10) -a(n-13) -234', 'a(n-9) -a(n-13) -312', 'a(n-8) -a(n-13) -390', 'a(n-7) -a(n-13) -468', 'a(n-6) -a(n-13) -546', 'a(n-5) -a(n-13) -624', 'a(n-4) -a(n-13) -702', 'a(n-3) -a(n-13) -780', 'a(n-13) -a(n-14) -78', 'a(n-12) -a(n-14) -156', 'a(n-11) -a(n-14) -234', 'a(n-10) -a(n-14) -312', 'a(n-9) -a(n-14) -390', 'a(n-8) -a(n-14) -468', 'a(n-7) -a(n-14) -546', 'a(n-6) -a(n-14) -624', 'a(n-5) -a(n-14) -702', 'a(n-4) -a(n-14) -780', 'a(n-14) -a(n-15) -78', 'a(n-13) -a(n-15) -156', 'a(n-12) -a(n-15) -234', 'a(n-11) -a(n-15) -312', 'a(n-10) -a(n-15) -390', 'a(n-9) -a(n-15) -468', 'a(n-8) -a(n-15) -546', 'a(n-7) -a(n-15) -624', 'a(n-6) -a(n-15) -702', 'a(n-5) -a(n-15) -780', 'a(n-15) -a(n-16) -78', 'a(n-14) -a(n-16) -156', 'a(n-13) -a(n-16) -234', 'a(n-12) -a(n-16) -312', 'a(n-11) -a(n-16) -390', 'a(n-10) -a(n-16) -468', 'a(n-9) -a(n-16) -546', 'a(n-8) -a(n-16) -624', 'a(n-7) -a(n-16) -702', 'a(n-6) -a(n-16) -780', 'a(n-16) -a(n-17) -78', 'a(n-15) -a(n-17) -156', 'a(n-14) -a(n-17) -234', 'a(n-13) -a(n-17) -312', 'a(n-12) -a(n-17) -390', 'a(n-11) -a(n-17) -468', 'a(n-10) -a(n-17) -546', 'a(n-9) -a(n-17) -624', 'a(n-8) -a(n-17) -702', 'a(n-7) -a(n-17) -780', 'a(n-17) -a(n-18) -78', 'a(n-16) -a(n-18) -156', 'a(n-15) -a(n-18) -234', 'a(n-14) -a(n-18) -312', 'a(n-13) -a(n-18) -390', 'a(n-12) -a(n-18) -468', 'a(n-11) -a(n-18) -546', 'a(n-10) -a(n-18) -624', 'a(n-9) -a(n-18) -702', 'a(n-8) -a(n-18) -780', 'a(n-18) -a(n-19) -78', 'a(n-17) -a(n-19) -156', 'a(n-16) -a(n-19) -234', 'a(n-15) -a(n-19) -312', 'a(n-14) -a(n-19) -390', 'a(n-13) -a(n-19) -468', 'a(n-12) -a(n-19) -546', 'a(n-11) -a(n-19) -624', 'a(n-10) -a(n-19) -702', 'a(n-9) -a(n-19) -780', 'a(n-19) -a(n-20) -78', 'a(n-18) -a(n-20) -156', 'a(n-17) -a(n-20) -234', 'a(n-16) -a(n-20) -312', 'a(n-15) -a(n-20) -390', 'a(n-14) -a(n-20) -468', 'a(n-13) -a(n-20) -546', 'a(n-12) -a(n-20) -624', 'a(n-11) -a(n-20) -702', 'a(n-10) -a(n-20) -780']
A139613: 
MB not reconst
truth: 
a(n) = 2*a(n - 1) + -1*a(n - 2),  
a(0) = 13, a(1) = 91

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

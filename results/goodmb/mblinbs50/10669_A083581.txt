
orders_used: [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
While total time consumed by now, scale:10670/27236, seq_id:A083581, order:20 took:
 55.3 seconds, i.e. 0.92 minutes or 0.015 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
non_linears:
['a(n) +2*a(n-1) -8', 'a(n-1) +2*a(n-2) -8', 'a(n) -4*a(n-2) +8', 'a(n-2) +2*a(n-3) -8', 'a(n-1) -4*a(n-3) +8', 'a(n) +8*a(n-3) -24', 'a(n-3) +2*a(n-4) -8', 'a(n-2) -4*a(n-4) +8', 'a(n-1) +8*a(n-4) -24', 'a(n) -16*a(n-4) +40', 'a(n-4) +2*a(n-5) -8', 'a(n-3) -4*a(n-5) +8', 'a(n-2) +8*a(n-5) -24', 'a(n-1) -16*a(n-5) +40', 'a(n) +32*a(n-5) -88', 'a(n-5) +2*a(n-6) -8', 'a(n-4) -4*a(n-6) +8', 'a(n-3) +8*a(n-6) -24', 'a(n-2) -16*a(n-6) +40', 'a(n-1) +32*a(n-6) -88', 'a(n) -64*a(n-6) +168', 'a(n-6) +2*a(n-7) -8', 'a(n-5) -4*a(n-7) +8', 'a(n-4) +8*a(n-7) -24', 'a(n-3) -16*a(n-7) +40', 'a(n-2) +32*a(n-7) -88', 'a(n-1) -64*a(n-7) +168', 'a(n) +128*a(n-7) -344', 'a(n-7) +2*a(n-8) -8', 'a(n-6) -4*a(n-8) +8', 'a(n-5) +8*a(n-8) -24', 'a(n-4) -16*a(n-8) +40', 'a(n-3) +32*a(n-8) -88', 'a(n-2) -64*a(n-8) +168', 'a(n-1) +128*a(n-8) -344', 'a(n) -256*a(n-8) +680', 'a(n-8) +2*a(n-9) -8', 'a(n-7) -4*a(n-9) +8', 'a(n-6) +8*a(n-9) -24', 'a(n-5) -16*a(n-9) +40', 'a(n-4) +32*a(n-9) -88', 'a(n-3) -64*a(n-9) +168', 'a(n-2) +128*a(n-9) -344', 'a(n-1) -256*a(n-9) +680', 'a(n) +512*a(n-9) -1368', 'a(n-9) +2*a(n-10) -8', 'a(n-8) -4*a(n-10) +8', 'a(n-7) +8*a(n-10) -24', 'a(n-6) -16*a(n-10) +40', 'a(n-5) +32*a(n-10) -88', 'a(n-4) -64*a(n-10) +168', 'a(n-3) +128*a(n-10) -344', 'a(n-2) -256*a(n-10) +680', 'a(n-1) +512*a(n-10) -1368', 'a(n) -1024*a(n-10) +2728', 'a(n-10) +2*a(n-11) -8', 'a(n-9) -4*a(n-11) +8', 'a(n-8) +8*a(n-11) -24', 'a(n-7) -16*a(n-11) +40', 'a(n-6) +32*a(n-11) -88', 'a(n-5) -64*a(n-11) +168', 'a(n-4) +128*a(n-11) -344', 'a(n-3) -256*a(n-11) +680', 'a(n-2) +512*a(n-11) -1368', 'a(n-1) -1024*a(n-11) +2728', 'a(n-11) +2*a(n-12) -8', 'a(n-10) -4*a(n-12) +8', 'a(n-9) +8*a(n-12) -24', 'a(n-8) -16*a(n-12) +40', 'a(n-7) +32*a(n-12) -88', 'a(n-6) -64*a(n-12) +168', 'a(n-5) +128*a(n-12) -344', 'a(n-4) -256*a(n-12) +680', 'a(n-3) +512*a(n-12) -1368', 'a(n-2) -1024*a(n-12) +2728', 'a(n-12) +2*a(n-13) -8', 'a(n-11) -4*a(n-13) +8', 'a(n-10) +8*a(n-13) -24', 'a(n-9) -16*a(n-13) +40', 'a(n-8) +32*a(n-13) -88', 'a(n-7) -64*a(n-13) +168', 'a(n-6) +128*a(n-13) -344', 'a(n-5) -256*a(n-13) +680', 'a(n-4) +512*a(n-13) -1368', 'a(n-3) -1024*a(n-13) +2728', 'a(n-13) +2*a(n-14) -8', 'a(n-12) -4*a(n-14) +8', 'a(n-11) +8*a(n-14) -24', 'a(n-10) -16*a(n-14) +40', 'a(n-9) +32*a(n-14) -88', 'a(n-8) -64*a(n-14) +168', 'a(n-7) +128*a(n-14) -344', 'a(n-6) -256*a(n-14) +680', 'a(n-5) +512*a(n-14) -1368', 'a(n-4) -1024*a(n-14) +2728', 'a(n-14) +2*a(n-15) -8', 'a(n-13) -4*a(n-15) +8', 'a(n-12) +8*a(n-15) -24', 'a(n-11) -16*a(n-15) +40', 'a(n-10) +32*a(n-15) -88', 'a(n-9) -64*a(n-15) +168', 'a(n-8) +128*a(n-15) -344', 'a(n-7) -256*a(n-15) +680', 'a(n-6) +512*a(n-15) -1368', 'a(n-5) -1024*a(n-15) +2728', 'a(n-15) +2*a(n-16) -8', 'a(n-14) -4*a(n-16) +8', 'a(n-13) +8*a(n-16) -24', 'a(n-12) -16*a(n-16) +40', 'a(n-11) +32*a(n-16) -88', 'a(n-10) -64*a(n-16) +168', 'a(n-9) +128*a(n-16) -344', 'a(n-8) -256*a(n-16) +680', 'a(n-7) +512*a(n-16) -1368', 'a(n-6) -1024*a(n-16) +2728', 'a(n-16) +2*a(n-17) -8', 'a(n-15) -4*a(n-17) +8', 'a(n-14) +8*a(n-17) -24', 'a(n-13) -16*a(n-17) +40', 'a(n-12) +32*a(n-17) -88', 'a(n-11) -64*a(n-17) +168', 'a(n-10) +128*a(n-17) -344', 'a(n-9) -256*a(n-17) +680', 'a(n-8) +512*a(n-17) -1368', 'a(n-7) -1024*a(n-17) +2728', 'a(n-17) +2*a(n-18) -8', 'a(n-16) -4*a(n-18) +8', 'a(n-15) +8*a(n-18) -24', 'a(n-14) -16*a(n-18) +40', 'a(n-13) +32*a(n-18) -88', 'a(n-12) -64*a(n-18) +168', 'a(n-11) +128*a(n-18) -344', 'a(n-10) -256*a(n-18) +680', 'a(n-9) +512*a(n-18) -1368', 'a(n-8) -1024*a(n-18) +2728', 'a(n-18) +2*a(n-19) -8', 'a(n-17) -4*a(n-19) +8', 'a(n-16) +8*a(n-19) -24', 'a(n-15) -16*a(n-19) +40', 'a(n-14) +32*a(n-19) -88', 'a(n-13) -64*a(n-19) +168', 'a(n-12) +128*a(n-19) -344', 'a(n-11) -256*a(n-19) +680', 'a(n-10) +512*a(n-19) -1368', 'a(n-9) -1024*a(n-19) +2728', 'a(n-19) +2*a(n-20) -8', 'a(n-18) -4*a(n-20) +8', 'a(n-17) +8*a(n-20) -24', 'a(n-16) -16*a(n-20) +40', 'a(n-15) +32*a(n-20) -88', 'a(n-14) -64*a(n-20) +168', 'a(n-13) +128*a(n-20) -344', 'a(n-12) -256*a(n-20) +680', 'a(n-11) +512*a(n-20) -1368', 'a(n-10) -1024*a(n-20) +2728']
A083581: 
MB not reconst
truth: 
a(n) = -1*a(n - 1) + 2*a(n - 2),  
a(0) = 1, a(1) = 6

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

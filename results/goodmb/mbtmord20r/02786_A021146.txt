
orders_used: [4, 5, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:2787/10000, seq_id:A021146, order:20 took:
 24.1 seconds, i.e. 0.4 minutes or 0.007 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 4.
eqs_explicit:
['a(n) = -2*a(n-11) - 5*a(n-10) - 5*a(n-9) + 36']
non_linears:
['a(n)*a(n-4) +a(n-3)*a(n-4) +a(n-4)^2 -9*a(n-4)', 'a(n-1)*a(n-5) +a(n-4)*a(n-5) +a(n-5)^2 -9*a(n-5)', 'a(n-2)*a(n-6) +a(n-5)*a(n-6) +a(n-6)^2 -9*a(n-6)', 'n*a(n-5) +2*a(n-5)*a(n-6) -a(n-6)^2 +(-37/3)*n +(4912/423)*a(n-2) +(-935/423)*a(n-3) +(1507/423)*a(n-4) +(1229/423)*a(n-5) +16*a(n-6) +1105/423', 'n*a(n-3) +(1/4)*a(n-7)^2 +(-1395/94)*a(n-3) +(-66/47)*a(n-4) +(-239/94)*a(n-5) +(-401/94)*a(n-6) +(-21/4)*a(n-7) +4621/94', 'a(n-6)*a(n-7) +(7/12)*a(n-7)^2 -2*n +(289/90)*a(n-3) +(13/9)*a(n-4) +(29/18)*a(n-5) +(179/90)*a(n-6) +(-139/60)*a(n-7) -911/90', 'a(n-3)*a(n-7) +(5/12)*a(n-7)^2 +2*n +(-289/90)*a(n-3) +(-13/9)*a(n-4) +(-29/18)*a(n-5) +(-179/90)*a(n-6) +(-401/60)*a(n-7) +911/90', 'a(n-7)^3 +(-27/2)*a(n-7)^2 +(-351/47)*a(n-3) +(-690/47)*a(n-4) +(-555/47)*a(n-5) +(-261/47)*a(n-6) +(85/2)*a(n-7) +5289/47', 'a(n-3)*a(n-4) +(1/2)*a(n-7)^2 +n +(-931/235)*a(n-3) +(-76/47)*a(n-4) +(-8/47)*a(n-5) +(-391/235)*a(n-6) +(-51/10)*a(n-7) +2359/235', 'a(n-6)^2 +4*n +(-532/705)*a(n-3) +(-218/141)*a(n-4) +(-488/141)*a(n-5) +(-7307/705)*a(n-6) +(-12/5)*a(n-7) -532/705', 'n^2 +(1/2)*a(n-7)^2 +(-61/3)*n +(1237/423)*a(n-3) +(808/423)*a(n-4) +(-521/423)*a(n-5) +(-307/423)*a(n-6) +(-5/2)*a(n-7) +38179/423', 'a(n-7)*a(n-8) -2*n +(116/47)*a(n-4) +(-62/47)*a(n-5) +(38/47)*a(n-6) +(120/47)*a(n-7) +2*a(n-8) +22/47', 'a(n-4)^2 +(-1773/235)*a(n-4) +(26/47)*a(n-5) +(-22/47)*a(n-6) +(-288/235)*a(n-7) +(-4/5)*a(n-8) +4102/235', 'a(n-4)*a(n-6) +3*n +(-1421/235)*a(n-4) +(-163/47)*a(n-5) +(-314/47)*a(n-6) +(-671/235)*a(n-7) +(-8/5)*a(n-8) +4454/235', 'a(n-8)^2 +(898/705)*a(n-4) +(668/141)*a(n-5) +(194/141)*a(n-6) +(-682/705)*a(n-7) +(-37/5)*a(n-8) -10382/705', 'a(n-4)*a(n-7) -2*n +(-1208/705)*a(n-4) +(404/141)*a(n-5) +(374/141)*a(n-6) +(-838/705)*a(n-7) +(2/5)*a(n-8) +3022/705', 'a(n-5)*a(n-8) +(-1048/235)*a(n-5) +(66/47)*a(n-6) +(96/47)*a(n-7) +(-478/235)*a(n-8) +(-4/5)*a(n-9) +832/235', 'a(n-6)*a(n-9) +(62/141)*a(n-5) +(-508/141)*a(n-6) +(278/141)*a(n-7) +(586/141)*a(n-8) -2194/141', 'a(n-5)*a(n-9) +(-234/235)*a(n-5) +(-92/47)*a(n-6) +(-74/47)*a(n-7) +(-174/235)*a(n-8) +(-12/5)*a(n-9) +3526/235', 'a(n-5)*a(n-7) +(-453/235)*a(n-5) +(-60/47)*a(n-6) +(-271/47)*a(n-7) +(-373/235)*a(n-8) +(1/5)*a(n-9) +4717/235', 'a(n-5)*a(n-6) +(-758/235)*a(n-5) +(-153/47)*a(n-6) +(-26/47)*a(n-7) +(-178/235)*a(n-8) +(-4/5)*a(n-9) +3942/235', 'a(n-7)*a(n-8) +(-14/151)*a(n-7) +(608/151)*a(n-8) +(616/151)*a(n-9) +(92/151)*a(n-10) -4256/151', 'a(n-3) +(51/151)*a(n-7) +(-295/151)*a(n-8) +(-281/151)*a(n-9) +(-141/151)*a(n-10) +1310/151', 'n +(27/151)*a(n-7) +(359/151)*a(n-8) +(322/151)*a(n-9) +(103/151)*a(n-10) -4023/151', 'a(n-9)*a(n-10) +(-392/151)*a(n-7) +(112/151)*a(n-8) +(336/151)*a(n-9) +(160/151)*a(n-10) -784/151', 'a(n-8)*a(n-10) +(392/151)*a(n-7) +(-112/151)*a(n-8) +(-336/151)*a(n-9) +(-764/151)*a(n-10) +784/151', 'a(n-7)*a(n-10) +(-588/151)*a(n-7) +(168/151)*a(n-8) +(504/151)*a(n-9) +(-62/151)*a(n-10) -1176/151', 'a(n-7)^2 +(-1213/151)*a(n-7) +(-430/151)*a(n-8) +(-82/151)*a(n-9) +(76/151)*a(n-10) +3010/151', 'a(n-10)*a(n-11)', 'a(n-11)^2 -7*a(n-11)', 'a(n-9)*a(n-11) -4*a(n-11)', 'a(n) +5*a(n-9) +5*a(n-10) +2*a(n-11) -36']
A021146: 
a(n) = -2*a(n-11) - 5*a(n-10) - 5*a(n-9) + 36
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

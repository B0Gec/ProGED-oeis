
orders_used: [4, 4, 4, 4, 5, 5, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 9, 9, 8, 8, 9, 9, 9, 9, 10, 10, 9, 9, 8, 10, 10, 11, 11, 10, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13]
dasco's acc_1, acc_10: True, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:6229/10000, seq_id:A040532, order:20 took:
 43.9 seconds, i.e. 0.73 minutes or 0.012 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 4.
eqs_explicit:
['a(n) = 7*a(n-13)/11 + 4/11']
non_linears:
['a(n)*a(n-3) -2*a(n-3)*a(n-4) -a(n) +a(n-3) +2*a(n-4) -1', 'a(n-3)*a(n-4)^2 -4*a(n-3)*a(n-4) -a(n-4)^2 +3*a(n-3) +4*a(n-4) -3', 'a(n-4)^3 +(105/47)*a(n-1)*a(n-4) +(-105/47)*a(n-2)*a(n-4) +(525/47)*a(n-3)*a(n-4) +(-1227/47)*a(n-4)^2 +(-105/47)*a(n-1) +(105/47)*a(n-2) +(-525/47)*a(n-3) +(2827/47)*a(n-4) -1647/47', 'a(n-2)*a(n-4)^2 +(21/188)*a(n-1)*a(n-4) +(-585/188)*a(n-2)*a(n-4) +(-83/188)*a(n-3)*a(n-4) +(-189/188)*a(n-4)^2 +(-21/188)*a(n-1) +(397/188)*a(n-2) +(83/188)*a(n-3) +(325/94)*a(n-4) -461/188', 'a(n-1)*a(n-4) -2*a(n-4)*a(n-5) -a(n-1) +a(n-4) +2*a(n-5) -1', 'a(n-4)*a(n-5)^2 -4*a(n-4)*a(n-5) -a(n-5)^2 +3*a(n-4) +4*a(n-5) -3', 'a(n-4)*a(n-5) +(-32/17)*a(n-1) +(-83/17)*a(n-2) +(81/17)*a(n-3) +(-74/17)*a(n-4) +(12/17)*a(n-5) +(195/17)*a(n-6) +(1/17)*a(n-7) -82/17', 'a(n-1)*a(n-5) +(-61/31)*a(n-1) +(-24/31)*a(n-2) +(4/31)*a(n-3) +(-28/31)*a(n-4) +(-105/31)*a(n-5) +(36/31)*a(n-6) +(-2/31)*a(n-7) +221/31', 'a(n-4)*a(n-6) +(16/31)*a(n-1) +(19/31)*a(n-2) +(-29/31)*a(n-3) +(-14/31)*a(n-4) +(-37/31)*a(n-5) +(-106/31)*a(n-6) +(-1/31)*a(n-7) +126/31', 'a(n-1)*a(n-4) +(-81/17)*a(n-1) +(-166/17)*a(n-2) +(162/17)*a(n-3) +(-131/17)*a(n-4) +(58/17)*a(n-5) +(390/17)*a(n-6) +(2/17)*a(n-7) -181/17', 'a(n-3)*a(n-5) +(-562/527)*a(n-1) +(-834/527)*a(n-2) +(325/527)*a(n-3) +(-694/527)*a(n-4) +(79/527)*a(n-5) +(2274/527)*a(n-6) +(8/527)*a(n-7) -605/527', 'a(n-4)*a(n-7) +(88/527)*a(n-1) +(275/527)*a(n-2) +(11/527)*a(n-3) +(-604/527)*a(n-4) +(-33/527)*a(n-5) +(-583/527)*a(n-6) +(-1044/527)*a(n-7) +1220/527', 'a(n-5)*a(n-7) +(35/527)*a(n-1) +(307/527)*a(n-2) +(-325/527)*a(n-3) +(167/527)*a(n-4) +(-606/527)*a(n-5) +(-693/527)*a(n-6) +(-535/527)*a(n-7) +1132/527', 'a(n-3)*a(n-7) +(-106/527)*a(n-1) +(64/527)*a(n-2) +(-1199/527)*a(n-3) +(488/527)*a(n-4) +(-92/527)*a(n-5) +(-220/527)*a(n-6) +(-563/527)*a(n-7) +1405/527', 'a(n-2)*a(n-7) +(-106/527)*a(n-1) +(-463/527)*a(n-2) +(-672/527)*a(n-3) +(488/527)*a(n-4) +(-92/527)*a(n-5) +(-220/527)*a(n-6) +(-563/527)*a(n-7) +1405/527', 'a(n-4)^2 +(-140/527)*a(n-1) +(-174/527)*a(n-2) +(246/527)*a(n-3) +(-2249/527)*a(n-4) +(316/527)*a(n-5) +(664/527)*a(n-6) +(32/527)*a(n-7) +742/527', 'a(n-7)*a(n-8) -a(n-7) -a(n-8) +1', 'a(n-6)*a(n-8) -a(n-6) -a(n-8) +1', 'a(n-6)^2 +(27/7)*a(n-3) +(-31/7)*a(n-4) +(13/7)*a(n-5) +(-30/7)*a(n-6) -9*a(n-7) +(-1/7)*a(n-8) +87/7', 'a(n-3)*a(n-5) +(-73/5)*a(n-3) +14*a(n-4) +(-43/5)*a(n-5) +(6/5)*a(n-6) +(142/5)*a(n-7) +(2/5)*a(n-8) -23', 'a(n-8)^2 +(-99/5)*a(n-3) +33*a(n-4) +(-99/5)*a(n-5) +(33/5)*a(n-6) +(231/5)*a(n-7) +(-114/5)*a(n-8) -31', 'a(n-1) +(-191/7)*a(n-3) +(197/7)*a(n-4) +(-107/7)*a(n-5) +(3/7)*a(n-6) +56*a(n-7) +(5/7)*a(n-8) -323/7', 'a(n-5)*a(n-8) +(-33/35)*a(n-3) +(11/7)*a(n-4) +(-68/35)*a(n-5) +(11/35)*a(n-6) +(11/5)*a(n-7) +(-68/35)*a(n-8) -4/7', 'a(n-8)*a(n-9) -a(n-8) -a(n-9) +1', 'a(n-7)*a(n-9) -a(n-7) -a(n-9) +1', 'a(n-7)*a(n-8) -a(n-7) -a(n-8) +1', 'a(n-6)*a(n-8) -a(n-6) -a(n-8) +1', 'a(n-6)^2 +(-4/137)*a(n-5) +(-545/137)*a(n-6) +(-2/137)*a(n-7) +(-2/137)*a(n-8) +(6/137)*a(n-9) +412/137', 'a(n-5)^2 +(-505/137)*a(n-5) +(2/137)*a(n-6) +(90/137)*a(n-7) +(90/137)*a(n-8) +(4/137)*a(n-9) +92/137', 'a(n-4) +(-135/137)*a(n-5) +(67/137)*a(n-6) +(1/137)*a(n-7) +(-273/137)*a(n-8) +(-3/137)*a(n-9) +205/137', 'a(n-7)^2 +(-86/137)*a(n-5) +(-4/137)*a(n-6) +(-591/137)*a(n-7) +(-180/137)*a(n-8) +(-8/137)*a(n-9) +912/137', 'a(n-9)*a(n-10) -a(n-9) -a(n-10) +1', 'a(n-8)*a(n-10) -a(n-8) -a(n-10) +1', 'a(n-8)*a(n-9) -a(n-8) -a(n-9) +1', 'a(n-7)*a(n-9) -a(n-7) -a(n-9) +1', 'a(n-7)*a(n-8) -a(n-7) -a(n-8) +1', 'a(n-6) +(2/43)*a(n-7) +(90/43)*a(n-8) +(90/43)*a(n-9) +(4/43)*a(n-10) -319/43', 'a(n-5) +(23/43)*a(n-7) +(89/43)*a(n-8) +(3/43)*a(n-9) +(3/43)*a(n-10) -250/43', 'a(n-10)*a(n-11) -a(n-10) -a(n-11) +1', 'a(n-9)*a(n-11) -a(n-9) -a(n-11) +1', 'a(n-9)*a(n-10) -a(n-9) -a(n-10) +1', 'a(n-11)^2 -22*a(n-9) -22*a(n-10) -25*a(n-11) +90', 'a(n-2) +(29/7)*a(n-9) +(1/7)*a(n-10) +(1/7)*a(n-11) -67/7', 'n +(15/7)*a(n-9) +(8/7)*a(n-10) +(1/7)*a(n-11) -123/7', 'a(n-1) +(32/3)*a(n-9) +(32/3)*a(n-10) +(2/3)*a(n-11) -113/3', 'a(n-8) +(-1/21)*a(n-9) +(-1/21)*a(n-10) +(-1/21)*a(n-11) -17/21', 'a(n-12)^2 -24*a(n-12) +23', 'a(n-9) +(-1/22)*a(n-12) -21/22', 'a(n-6) +(1/11)*a(n-12) -34/11', 'a(n-2) +(2/11)*a(n-12) -57/11', 'a(n-11)*a(n-12) -a(n-11) -a(n-12) +1', 'a(n-13)^2 -24*a(n-13) +23', 'a(n) +(-7/11)*a(n-13) -4/11']
A040532: 
a(n) = 7*a(n-13)/11 + 4/11
truth: 
None

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

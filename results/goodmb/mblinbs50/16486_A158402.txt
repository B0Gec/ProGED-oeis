
orders_used: [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
While total time consumed by now, scale:16487/27236, seq_id:A158402, order:20 took:
 47.7 seconds, i.e. 0.79 minutes or 0.013 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
non_linears:
['a(n) -a(n-1) -841', 'a(n-1) -a(n-2) -841', 'a(n) -a(n-2) -1682', 'a(n-2) -a(n-3) -841', 'a(n-1) -a(n-3) -1682', 'a(n) -a(n-3) -2523', 'a(n-3) -a(n-4) -841', 'a(n-2) -a(n-4) -1682', 'a(n-1) -a(n-4) -2523', 'a(n) -a(n-4) -3364', 'a(n-4) -a(n-5) -841', 'a(n-3) -a(n-5) -1682', 'a(n-2) -a(n-5) -2523', 'a(n-1) -a(n-5) -3364', 'a(n) -a(n-5) -4205', 'a(n-5) -a(n-6) -841', 'a(n-4) -a(n-6) -1682', 'a(n-3) -a(n-6) -2523', 'a(n-2) -a(n-6) -3364', 'a(n-1) -a(n-6) -4205', 'a(n) -a(n-6) -5046', 'a(n-6) -a(n-7) -841', 'a(n-5) -a(n-7) -1682', 'a(n-4) -a(n-7) -2523', 'a(n-3) -a(n-7) -3364', 'a(n-2) -a(n-7) -4205', 'a(n-1) -a(n-7) -5046', 'a(n) -a(n-7) -5887', 'a(n-7) -a(n-8) -841', 'a(n-6) -a(n-8) -1682', 'a(n-5) -a(n-8) -2523', 'a(n-4) -a(n-8) -3364', 'a(n-3) -a(n-8) -4205', 'a(n-2) -a(n-8) -5046', 'a(n-1) -a(n-8) -5887', 'a(n) -a(n-8) -6728', 'a(n-8) -a(n-9) -841', 'a(n-7) -a(n-9) -1682', 'a(n-6) -a(n-9) -2523', 'a(n-5) -a(n-9) -3364', 'a(n-4) -a(n-9) -4205', 'a(n-3) -a(n-9) -5046', 'a(n-2) -a(n-9) -5887', 'a(n-1) -a(n-9) -6728', 'a(n) -a(n-9) -7569', 'a(n-9) -a(n-10) -841', 'a(n-8) -a(n-10) -1682', 'a(n-7) -a(n-10) -2523', 'a(n-6) -a(n-10) -3364', 'a(n-5) -a(n-10) -4205', 'a(n-4) -a(n-10) -5046', 'a(n-3) -a(n-10) -5887', 'a(n-2) -a(n-10) -6728', 'a(n-1) -a(n-10) -7569', 'a(n) -a(n-10) -8410', 'a(n-10) -a(n-11) -841', 'a(n-9) -a(n-11) -1682', 'a(n-8) -a(n-11) -2523', 'a(n-7) -a(n-11) -3364', 'a(n-6) -a(n-11) -4205', 'a(n-5) -a(n-11) -5046', 'a(n-4) -a(n-11) -5887', 'a(n-3) -a(n-11) -6728', 'a(n-2) -a(n-11) -7569', 'a(n-1) -a(n-11) -8410', 'a(n-11) -a(n-12) -841', 'a(n-10) -a(n-12) -1682', 'a(n-9) -a(n-12) -2523', 'a(n-8) -a(n-12) -3364', 'a(n-7) -a(n-12) -4205', 'a(n-6) -a(n-12) -5046', 'a(n-5) -a(n-12) -5887', 'a(n-4) -a(n-12) -6728', 'a(n-3) -a(n-12) -7569', 'a(n-2) -a(n-12) -8410', 'a(n-12) -a(n-13) -841', 'a(n-11) -a(n-13) -1682', 'a(n-10) -a(n-13) -2523', 'a(n-9) -a(n-13) -3364', 'a(n-8) -a(n-13) -4205', 'a(n-7) -a(n-13) -5046', 'a(n-6) -a(n-13) -5887', 'a(n-5) -a(n-13) -6728', 'a(n-4) -a(n-13) -7569', 'a(n-3) -a(n-13) -8410', 'a(n-13) -a(n-14) -841', 'a(n-12) -a(n-14) -1682', 'a(n-11) -a(n-14) -2523', 'a(n-10) -a(n-14) -3364', 'a(n-9) -a(n-14) -4205', 'a(n-8) -a(n-14) -5046', 'a(n-7) -a(n-14) -5887', 'a(n-6) -a(n-14) -6728', 'a(n-5) -a(n-14) -7569', 'a(n-4) -a(n-14) -8410', 'a(n-14) -a(n-15) -841', 'a(n-13) -a(n-15) -1682', 'a(n-12) -a(n-15) -2523', 'a(n-11) -a(n-15) -3364', 'a(n-10) -a(n-15) -4205', 'a(n-9) -a(n-15) -5046', 'a(n-8) -a(n-15) -5887', 'a(n-7) -a(n-15) -6728', 'a(n-6) -a(n-15) -7569', 'a(n-5) -a(n-15) -8410', 'a(n-15) -a(n-16) -841', 'a(n-14) -a(n-16) -1682', 'a(n-13) -a(n-16) -2523', 'a(n-12) -a(n-16) -3364', 'a(n-11) -a(n-16) -4205', 'a(n-10) -a(n-16) -5046', 'a(n-9) -a(n-16) -5887', 'a(n-8) -a(n-16) -6728', 'a(n-7) -a(n-16) -7569', 'a(n-6) -a(n-16) -8410', 'a(n-16) -a(n-17) -841', 'a(n-15) -a(n-17) -1682', 'a(n-14) -a(n-17) -2523', 'a(n-13) -a(n-17) -3364', 'a(n-12) -a(n-17) -4205', 'a(n-11) -a(n-17) -5046', 'a(n-10) -a(n-17) -5887', 'a(n-9) -a(n-17) -6728', 'a(n-8) -a(n-17) -7569', 'a(n-7) -a(n-17) -8410', 'a(n-17) -a(n-18) -841', 'a(n-16) -a(n-18) -1682', 'a(n-15) -a(n-18) -2523', 'a(n-14) -a(n-18) -3364', 'a(n-13) -a(n-18) -4205', 'a(n-12) -a(n-18) -5046', 'a(n-11) -a(n-18) -5887', 'a(n-10) -a(n-18) -6728', 'a(n-9) -a(n-18) -7569', 'a(n-8) -a(n-18) -8410', 'a(n-18) -a(n-19) -841', 'a(n-17) -a(n-19) -1682', 'a(n-16) -a(n-19) -2523', 'a(n-15) -a(n-19) -3364', 'a(n-14) -a(n-19) -4205', 'a(n-13) -a(n-19) -5046', 'a(n-12) -a(n-19) -5887', 'a(n-11) -a(n-19) -6728', 'a(n-10) -a(n-19) -7569', 'a(n-9) -a(n-19) -8410', 'a(n-19) -a(n-20) -841', 'a(n-18) -a(n-20) -1682', 'a(n-17) -a(n-20) -2523', 'a(n-16) -a(n-20) -3364', 'a(n-15) -a(n-20) -4205', 'a(n-14) -a(n-20) -5046', 'a(n-13) -a(n-20) -5887', 'a(n-12) -a(n-20) -6728', 'a(n-11) -a(n-20) -7569', 'a(n-10) -a(n-20) -8410']
A158402: 
MB not reconst
truth: 
a(n) = 2*a(n - 1) + -1*a(n - 2),  
a(0) = 840, a(1) = 1681

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

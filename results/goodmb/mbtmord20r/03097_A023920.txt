
orders_used: [1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 5, 6, 7, 6, 8, 8, 7, 6, 9, 9, 8, 8, 7, 6, 9, 9, 10, 10, 9, 9, 8, 10]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:3098/10000, seq_id:A023920, order:20 took:
 31.1 seconds, i.e. 0.52 minutes or 0.009 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
eqs_explicit:
['a(n) = 36*a(n-10) + 16*a(n-9) - 12*a(n-8) - 12*a(n-7) + 216']
non_linears:
['a(n)*n*a(n-1) -10*a(n)*a(n-1)', 'a(n)*a(n-1)^2 -240*a(n)*a(n-1)', 'a(n)^2*a(n-1) -252*a(n)*a(n-1)', 'a(n)*a(n-2)^2 -72*a(n)*a(n-2)', 'n*a(n-1)*a(n-2) -11*a(n-1)*a(n-2)', 'a(n-1)*a(n-2)^2 -240*a(n-1)*a(n-2)', 'a(n-1)^2*a(n-2) -252*a(n-1)*a(n-2)', 'n*a(n-2)^2 +(246/695)*a(n)*a(n-2) +(4128/139)*n*a(n-2) +(422/417)*a(n-1)*a(n-2) +(-1838/139)*a(n-2)^2 +(-6696/139)*a(n-2)', 'n^2*a(n-2) +(-423/11120)*a(n)*a(n-2) +(-942/139)*n*a(n-2) +(1775/35028)*a(n-1)*a(n-2) +(-40/139)*a(n-2)^2 +(1368/139)*a(n-2)', 'a(n-1)*a(n-2)*a(n-3)', 'a(n)*a(n-1) +(-7/2)*a(n-1)*a(n-3)', 'a(n-1)*a(n-3)^2 -72*a(n-1)*a(n-3)', 'a(n-2)*a(n-3)^2 -240*a(n-2)*a(n-3)', 'a(n-2)^2*a(n-3) -252*a(n-2)*a(n-3)', 'a(n-1)*a(n-2)^2 -240*a(n-1)*a(n-2)', 'n*a(n-2) +(11/378)*a(n-1)*a(n-2) +(-1/18)*a(n-2)^2 +(7/240)*a(n-2)*a(n-3) -5*a(n-2)', 'a(n-2)^3 -148*a(n-1)*a(n-2) -90*a(n-2)^2 +(-351/2)*a(n-2)*a(n-3) +1296*a(n-2)', 'a(n)*a(n-2) +(740/189)*a(n-1)*a(n-2) +(-40/9)*a(n-2)^2 +(13/3)*a(n-2)*a(n-3) +80*a(n-2)', 'a(n)*a(n-3) +(-1584/139)*n*a(n-3) +(-717/2780)*a(n-1)*a(n-3) +(1830/973)*a(n-2)*a(n-3) +(-216/139)*a(n-3)^2 +(4968/139)*a(n-3)', 'a(n-1)*a(n-2) +(-7/2)*a(n-2)*a(n-4)', 'a(n-2)*a(n-4)^2 -72*a(n-2)*a(n-4)', 'a(n-3)*a(n-4)^2 -240*a(n-3)*a(n-4)', 'a(n)*a(n-4) +(39/88)*a(n-1)*a(n-4) +(-261/1760)*a(n-2)*a(n-4) +(-355/308)*a(n-3)*a(n-4) +(-9/11)*a(n-4)^2 +(-189/11)*a(n-4)', 'n*a(n-4) +(-139/1584)*a(n-1)*a(n-4) +(239/10560)*a(n-2)*a(n-4) +(-305/1848)*a(n-3)*a(n-4) +(3/22)*a(n-4)^2 +(-91/22)*a(n-4)', 'a(n-1)*a(n-4)^2 +(4245/22)*a(n-1)*a(n-4) +(-6111/440)*a(n-2)*a(n-4) +(9321/11)*a(n-3)*a(n-4) +(-9828/11)*a(n-4)^2 +(9828/11)*a(n-4)', 'a(n-4)^3 +(55471/528)*a(n-1)*a(n-4) +(18817/3520)*a(n-2)*a(n-4) +(130255/616)*a(n-3)*a(n-4) +(-10207/22)*a(n-4)^2 +(10185/22)*a(n-4)', 'a(n-4)*a(n-5)^2 -240*a(n-4)*a(n-5)', 'a(n-5)*a(n-6)', 'a(n-6)*a(n-7)', 'a(n-5)*a(n-6)', 'a(n-7)*a(n-8)', 'a(n-6)*a(n-8)', 'a(n-6)*a(n-7)', 'a(n-5)*a(n-6)', 'a(n-8)*a(n-9)', 'a(n-7)*a(n-9)', 'a(n-7)*a(n-8)', 'a(n-6)*a(n-8)', 'a(n-6)*a(n-7)', 'a(n-5)*a(n-6)', 'n +(7/668)*a(n-5) +(-70/1503)*a(n-6) +(-307/3006)*a(n-7) +(-100/501)*a(n-8) +(-9/334)*a(n-9) -1530/167', 'a(n-3) +(-3/167)*a(n-5) +(-1964/501)*a(n-6) +(40/501)*a(n-7) +(-6604/501)*a(n-8) +(294/167)*a(n-9) -240/167', 'a(n-9)*a(n-10)', 'a(n-8)*a(n-10)', 'a(n-8)*a(n-9)', 'a(n-7)*a(n-9)', 'a(n-7)*a(n-8)', 'a(n) +12*a(n-7) +12*a(n-8) -16*a(n-9) -36*a(n-10) -216']
A023920: 
a(n) = 36*a(n-10) + 16*a(n-9) - 12*a(n-8) - 12*a(n-7) + 216
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

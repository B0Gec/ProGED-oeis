
orders_used: [3, 3, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 8, 9, 8, 9, 9, 9, 9, 9, 10, 9, 8, 10, 9, 10, 10, 10, 10, 11, 10, 9, 11, 11, 11]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:4438/10000, seq_id:A034871, order:20 took:
 29.3 seconds, i.e. 0.49 minutes or 0.008 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 3.
eqs_explicit:
['a(n) = 7*a(n-11) + 3*a(n-10) - 9']
non_linears:
['a(n-2)^3 -9*a(n-2)^2 +(-35/4)*a(n-1)*a(n-3) +(35/4)*a(n-1) +23*a(n-2) +(35/4)*a(n-3) -95/4', 'a(n-1)*a(n-2) +(-7/2)*a(n-2)^2 +(27/8)*a(n-1)*a(n-3) +a(n-2)*a(n-3) +(-35/8)*a(n-1) +10*a(n-2) +(-35/8)*a(n-3) -25/8', 'a(n-7)^2 +(-48/49)*a(n-1) +(80/49)*a(n-2) +(-64/49)*a(n-3) +(32/49)*a(n-5) +(-40/49)*a(n-6) +(-236/49)*a(n-7) +355/49', 'a(n-5)*a(n-7) +(-216/49)*a(n-1) +(360/49)*a(n-2) +(-288/49)*a(n-3) +(95/49)*a(n-5) +(-180/49)*a(n-6) +(-229/49)*a(n-7) +985/49', 'a(n-5)*a(n-6) +(54/49)*a(n-1) +(351/49)*a(n-2) +(-712/49)*a(n-3) +20*a(n-4) +(-869/49)*a(n-5) +(-4/49)*a(n-6) +(-351/98)*a(n-7) -419/98', 'n +(-10/49)*a(n-1) +(19/392)*a(n-2) +(-43/98)*a(n-3) +(-26/49)*a(n-5) +(-17/196)*a(n-6) +(-215/784)*a(n-7) -3635/784', 'a(n-2)*a(n-7) +(216/49)*a(n-1) +(-409/49)*a(n-2) +(288/49)*a(n-3) +(-144/49)*a(n-5) +(180/49)*a(n-6) +(-310/49)*a(n-7) -446/49', 'a(n-1)*a(n-3) +(383/49)*a(n-1) +(-720/49)*a(n-2) +(527/49)*a(n-3) +(-288/49)*a(n-5) +(360/49)*a(n-6) +(-522/49)*a(n-7) -941/49', 'a(n-3)*a(n-7) +(176/49)*a(n-1) +(66/49)*a(n-2) +(-631/49)*a(n-3) +22*a(n-4) +(-934/49)*a(n-5) +(506/49)*a(n-6) +(-180/49)*a(n-7) -1122/49', 'a(n-1)*a(n-7) +(-57/49)*a(n-1) +(-346/49)*a(n-2) +(806/49)*a(n-3) -22*a(n-4) +(822/49)*a(n-5) +(-366/49)*a(n-6) +(-415/49)*a(n-7) +1129/49', 'a(n-1)*a(n-5) +(-535/49)*a(n-1) +(1006/49)*a(n-2) +(-1334/49)*a(n-3) +22*a(n-4) +(-607/49)*a(n-5) +(36/49)*a(n-6) +(36/49)*a(n-7) +783/49', 'a(n-8)^2 -4*a(n-8) +3', 'a(n-6)*a(n-8) -a(n-6) -a(n-8) +1', 'a(n-3)*a(n-8) -a(n-3) -10*a(n-8) +10', 'a(n-3)^2 -6*a(n-3) +(-45/2)*a(n-8) +55/2', 'a(n-2) +(-5/3)*a(n-3) +(4/3)*a(n-4) +(-2/3)*a(n-6) +(5/6)*a(n-7) +(5/6)*a(n-8) -13/3', 'n +(-7/24)*a(n-3) +(-1/6)*a(n-4) +(-2/3)*a(n-6) +(1/12)*a(n-7) +(-5/48)*a(n-8) -313/48', 'a(n-6)*a(n-7) +9*a(n-3) -16*a(n-4) +20*a(n-5) -17*a(n-6) -a(n-7) +(-9/2)*a(n-8) +1/2', 'a(n-4)*a(n-6) -12*a(n-3) +23*a(n-4) -36*a(n-5) +23*a(n-6) -12*a(n-7) +6*a(n-8) +31', 'a(n-4)*a(n-7) +(-12/5)*a(n-3) +7*a(n-4) +(-56/5)*a(n-5) +8*a(n-6) +(-37/5)*a(n-7) -6*a(n-8) +87/5', 'a(n-9)^2 -4*a(n-9) +3', 'a(n-8)^2 -4*a(n-8) +3', 'a(n-7)*a(n-9) -a(n-7) -a(n-9) +1', 'a(n-6)*a(n-8) -a(n-6) -a(n-8) +1', 'n +(-8/13)*a(n-5) +(7/13)*a(n-6) +(-29/26)*a(n-7) +(1/26)*a(n-8) +(-5/13)*a(n-9) -95/13', 'a(n-4) +(-20/13)*a(n-5) +(24/13)*a(n-6) +(-20/13)*a(n-7) +(-2/13)*a(n-8) +(-25/26)*a(n-9) +19/26', 'a(n-7)*a(n-8) +(-28/13)*a(n-5) +(44/13)*a(n-6) +(-41/13)*a(n-7) +(5/13)*a(n-8) +(54/13)*a(n-9) -79/13', 'a(n-3) +(-16/13)*a(n-5) +(40/13)*a(n-6) +(-42/13)*a(n-7) +(15/26)*a(n-8) +(-10/13)*a(n-9) -81/26', 'a(n-1) +(29/13)*a(n-5) +(-40/13)*a(n-6) +(29/13)*a(n-7) +(-15/26)*a(n-8) +(-3/13)*a(n-9) -231/26', 'a(n-10)^2 -4*a(n-10) +3', 'a(n-9)^2 -4*a(n-9) +3', 'a(n-8)^2 -4*a(n-8) +3', 'a(n-8)*a(n-10) -a(n-8) -a(n-10) +1', 'a(n-7)*a(n-9) -a(n-7) -a(n-9) +1', 'a(n-9)*a(n-10) +2*a(n-7) +a(n-9) -3*a(n-10) -5', 'a(n-7)*a(n-10) -5*a(n-7) -4*a(n-9) -a(n-10) +17', 'a(n-5) -2*a(n-7) -4*a(n-9) +(-5/2)*a(n-10) +23/2', 'a(n-4) -2*a(n-8) +(-5/2)*a(n-9) -2*a(n-10) +11/2', 'a(n-11)^2 -4*a(n-11) +3', 'a(n-10)^2 -4*a(n-10) +3', 'a(n-9)^2 -4*a(n-9) +3', 'a(n-7) +a(n-9) -a(n-11) -3', 'a(n-1) +2*a(n-9) -a(n-11) -6', 'a(n) -3*a(n-10) -7*a(n-11) +9']
A034871: 
a(n) = 7*a(n-11) + 3*a(n-10) - 9
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

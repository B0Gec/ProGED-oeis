
orders_used: [1, 3, 3, 3, 3, 3, 3, 4, 3, 4, 4, 4, 4, 4, 4, 4, 5, 4, 3, 6, 5, 4, 3, 7, 6, 5, 4, 3, 7, 7, 7, 7, 7, 8, 7, 6, 5, 4, 8, 8, 8, 8, 9, 9, 9, 9, 8, 7, 6, 9, 10, 10, 10, 9, 9, 11, 11, 10, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 14]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:416/10000, seq_id:A002233, order:20 took:
 68.9 seconds, i.e. 1.15 minutes or 0.019 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
eqs_explicit:
[]
non_linears:
['n*a(n-1)^2 -2*a(n-1)^3 -5*n*a(n-1) +11*a(n-1)^2 +6*n -17*a(n-1) +6', 'a(n-2)*a(n-3) -2*a(n-2) -2*a(n-3) +4', 'a(n-1)*a(n-3)^2 +(4/3)*a(n)*a(n-3) +(-10/9)*n*a(n-3) +(-31/9)*a(n-1)*a(n-3) +(-1/3)*a(n-3)^2 +(-8/3)*a(n) +(20/9)*n +(26/9)*a(n-1) +(11/9)*a(n-3) -10/9', 'a(n-1)^2 +(-14/3)*a(n)*a(n-3) +(-10/9)*n*a(n-3) +(-22/9)*a(n-1)*a(n-3) +(5/3)*a(n-3)^2 +(28/3)*a(n) +(20/9)*n +(-1/9)*a(n-1) +(155/9)*a(n-3) -316/9', 'a(n-3)^3 +(16/3)*a(n)*a(n-3) +(-40/9)*n*a(n-3) +(56/9)*a(n-1)*a(n-3) +(2/3)*a(n-3)^2 +(-32/3)*a(n) +(80/9)*n +(-112/9)*a(n-1) +(-217/9)*a(n-3) +338/9', 'a(n)*a(n-3)^2 +(-19/3)*a(n)*a(n-3) +(10/9)*n*a(n-3) +(-14/9)*a(n-1)*a(n-3) +(-14/3)*a(n-3)^2 +(26/3)*a(n) +(-20/9)*n +(28/9)*a(n-1) +(214/9)*a(n-3) -260/9', 'n*a(n-3)^2 +(32/3)*a(n)*a(n-3) +(-125/9)*n*a(n-3) +(112/9)*a(n-1)*a(n-3) +(31/3)*a(n-3)^2 +(-64/3)*a(n) +(214/9)*n +(-224/9)*a(n-1) +(-497/9)*a(n-3) +622/9', 'a(n-3)*a(n-4) -2*a(n-3) -2*a(n-4) +4', 'a(n-2)*a(n-3) -2*a(n-2) -2*a(n-3) +4', 'a(n-1)*a(n-3) +a(n-1)*a(n-4) +a(n-2)*a(n-4) -5*a(n-1) -3*a(n-2) -3*a(n-3) -5*a(n-4) +21', 'a(n-1)*a(n-2) +(-10/9)*n*a(n-4) +(-5/3)*a(n-1)*a(n-4) +(5/9)*a(n-2)*a(n-4) +(5/3)*a(n-4)^2 +(20/9)*n +(4/3)*a(n-1) +(-28/9)*a(n-2) +(10/3)*a(n-4) -28/3', 'a(n-2)*a(n-4)^2 +(-10/9)*n*a(n-4) +(4/3)*a(n-1)*a(n-4) +(-31/9)*a(n-2)*a(n-4) +(-1/3)*a(n-4)^2 +(20/9)*n +(-8/3)*a(n-1) +(26/9)*a(n-2) +(7/3)*a(n-4) -10/3', 'a(n-2)^2 +(-10/9)*n*a(n-4) +(-14/3)*a(n-1)*a(n-4) +(-22/9)*a(n-2)*a(n-4) +(5/3)*a(n-4)^2 +(20/9)*n +(28/3)*a(n-1) +(-1/9)*a(n-2) +(55/3)*a(n-4) -112/3', 'a(n-4)^3 +(-40/9)*n*a(n-4) +(16/3)*a(n-1)*a(n-4) +(56/9)*a(n-2)*a(n-4) +(2/3)*a(n-4)^2 +(80/9)*n +(-32/3)*a(n-1) +(-112/9)*a(n-2) +(-59/3)*a(n-4) +86/3', 'a(n-1)*a(n-4)^2 +(10/9)*n*a(n-4) +(-19/3)*a(n-1)*a(n-4) +(-14/9)*a(n-2)*a(n-4) +(-14/3)*a(n-4)^2 +(-20/9)*n +(26/3)*a(n-1) +(28/9)*a(n-2) +(68/3)*a(n-4) -80/3', 'n*a(n-4)^2 +(-125/9)*n*a(n-4) +(32/3)*a(n-1)*a(n-4) +(112/9)*a(n-2)*a(n-4) +(28/3)*a(n-4)^2 +(214/9)*n +(-64/3)*a(n-1) +(-224/9)*a(n-2) +(-124/3)*a(n-4) +136/3', 'a(n-4)*a(n-5) -2*a(n-4) -2*a(n-5) +4', 'a(n-3)*a(n-4) -2*a(n-3) -2*a(n-4) +4', 'a(n-2)*a(n-3) -2*a(n-2) -2*a(n-3) +4', 'a(n-5)*a(n-6) -2*a(n-5) -2*a(n-6) +4', 'a(n-4)*a(n-5) -2*a(n-4) -2*a(n-5) +4', 'a(n-3)*a(n-4) -2*a(n-3) -2*a(n-4) +4', 'a(n-2)*a(n-3) -2*a(n-2) -2*a(n-3) +4', 'a(n-6)*a(n-7) -2*a(n-6) -2*a(n-7) +4', 'a(n-5)*a(n-6) -2*a(n-5) -2*a(n-6) +4', 'a(n-4)*a(n-5) -2*a(n-4) -2*a(n-5) +4', 'a(n-3)*a(n-4) -2*a(n-3) -2*a(n-4) +4', 'a(n-2)*a(n-3) -2*a(n-2) -2*a(n-3) +4', 'a(n-4)*a(n-7) +(114/809)*a(n-1) +(60/809)*a(n-2) +(-18/809)*a(n-3) +(-1530/809)*a(n-4) +(175/809)*a(n-5) +(-89/809)*a(n-6) +(-2460/809)*a(n-7) +4025/809', 'a(n-3)*a(n-7) +(-114/809)*a(n-1) +(-60/809)*a(n-2) +(-1600/809)*a(n-3) +(-88/809)*a(n-4) +(-175/809)*a(n-5) +(89/809)*a(n-6) +(-1585/809)*a(n-7) +4065/809', 'a(n-1)*a(n-7) +(-1988/809)*a(n-1) +(-67/809)*a(n-2) +(101/809)*a(n-3) +(-314/809)*a(n-4) +(-937/809)*a(n-5) +(5/809)*a(n-6) +(-2107/809)*a(n-7) +8382/809', 'a(n-7)^2 +(-400/809)*a(n-1) +(-466/809)*a(n-2) +(-22/809)*a(n-3) +(-252/809)*a(n-4) +(124/809)*a(n-5) +(880/809)*a(n-6) +(-2737/809)*a(n-7) +2852/809', 'a(n-4)*a(n-6) +(228/809)*a(n-1) +(120/809)*a(n-2) +(-36/809)*a(n-3) +(-2251/809)*a(n-4) +(-459/809)*a(n-5) +(-2605/809)*a(n-6) +(-66/809)*a(n-7) +7241/809', 'a(n-7)*a(n-8) -2*a(n-7) -2*a(n-8) +4', 'a(n-6)*a(n-7) -2*a(n-6) -2*a(n-7) +4', 'a(n-5)*a(n-6) -2*a(n-5) -2*a(n-6) +4', 'a(n-4)*a(n-5) -2*a(n-4) -2*a(n-5) +4', 'a(n-3)*a(n-4) -2*a(n-3) -2*a(n-4) +4', 'a(n-4)*a(n-8) +(18/29)*a(n-3) +(-52/29)*a(n-4) +(-4/29)*a(n-5) +(5/29)*a(n-6) +(17/29)*a(n-7) +(-85/29)*a(n-8) +63/29', 'a(n-5)*a(n-8) +(-18/29)*a(n-3) +(-6/29)*a(n-4) +(-54/29)*a(n-5) +(-5/29)*a(n-6) +(-17/29)*a(n-7) +(-60/29)*a(n-8) +227/29', 'a(n-3)*a(n-8) +(-31/29)*a(n-3) +(9/29)*a(n-4) +(-6/29)*a(n-5) +(51/29)*a(n-6) +(69/29)*a(n-7) +(-142/29)*a(n-8) -94/29', 'a(n-4)*a(n-7) +(12/29)*a(n-3) +(-54/29)*a(n-4) +(7/29)*a(n-5) +(13/29)*a(n-6) +(-66/29)*a(n-7) +(-18/29)*a(n-8) +71/29', 'a(n-8)*a(n-9) -2*a(n-8) -2*a(n-9) +4', 'a(n-7)*a(n-9) -2*a(n-7) -2*a(n-9) +4', 'a(n-6)*a(n-9) -2*a(n-6) -3*a(n-9) +6', 'a(n-5)*a(n-9) -2*a(n-5) -2*a(n-9) +4', 'a(n-7)*a(n-8) -2*a(n-7) -2*a(n-8) +4', 'a(n-6)*a(n-7) -2*a(n-6) -2*a(n-7) +4', 'a(n-5)*a(n-6) -2*a(n-5) -2*a(n-6) +4', 'a(n-9)^2 +a(n-7) +a(n-8) -4*a(n-9) -1', 'a(n-9)*a(n-10) -2*a(n-9) -2*a(n-10) +4', 'a(n-8)*a(n-10) -2*a(n-8) -2*a(n-10) +4', 'a(n-6)*a(n-10) -2*a(n-6) -2*a(n-10) +4', 'a(n-8)*a(n-9) -2*a(n-8) -2*a(n-9) +4', 'a(n-6)*a(n-9) -2*a(n-6) -3*a(n-9) +6', 'a(n-10)*a(n-11) -2*a(n-10) -2*a(n-11) +4', 'a(n-9)*a(n-11) -2*a(n-9) -2*a(n-11) +4', 'a(n-9)*a(n-10) -2*a(n-9) -2*a(n-10) +4', 'a(n-11)^2 +a(n-9) +a(n-10) -4*a(n-11) -1', 'a(n-6) +(1/2)*a(n-9) +(3/2)*a(n-10) +(-3/2)*a(n-11) -9/2', 'a(n-9) +a(n-12) -4', 'a(n-12)^2 -3*a(n-12) +2', 'a(n-10) +a(n-11) -a(n-12) -3', 'a(n-7) +a(n-11) -a(n-12) -3', 'a(n-6) -3*a(n-11) +a(n-12) +2', 'a(n-5) +3*a(n-11) -3*a(n-12) -5', 'a(n-4) -a(n-11) +3*a(n-12) -6', 'a(n-3) +a(n-11) -a(n-12) -3', 'a(n-11) -a(n-13) -1', 'a(n-10) +a(n-13) -4', 'a(n-8) -a(n-13) -1', 'a(n-7) +a(n-13) -4', 'a(n-6) -3*a(n-13) +1', 'a(n-5) +3*a(n-13) -8', 'a(n-4) -a(n-13) -1', 'a(n-3) +a(n-13) -4', 'a(n-14) -1']
A002233: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

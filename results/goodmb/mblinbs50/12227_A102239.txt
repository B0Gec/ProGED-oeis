
orders_used: [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
While total time consumed by now, scale:12228/27236, seq_id:A102239, order:20 took:
 31.4 seconds, i.e. 0.52 minutes or 0.009 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
non_linears:
['a(n)^2 -10*a(n)*a(n-1) +25*a(n-1)^2 +2*a(n) -10*a(n-1) -8', 'a(n) -4*a(n-1) -5*a(n-2) +2', 'a(n-1)^2 -10*a(n-1)*a(n-2) +25*a(n-2)^2 +2*a(n-1) -10*a(n-2) -8', 'a(n-1) -4*a(n-2) -5*a(n-3) +2', 'a(n) -21*a(n-2) -20*a(n-3) +10', 'a(n-2)^2 -10*a(n-2)*a(n-3) +25*a(n-3)^2 +2*a(n-2) -10*a(n-3) -8', 'a(n-2) -4*a(n-3) -5*a(n-4) +2', 'a(n-1) -21*a(n-3) -20*a(n-4) +10', 'a(n) -104*a(n-3) -105*a(n-4) +52', 'a(n-3)^2 -10*a(n-3)*a(n-4) +25*a(n-4)^2 +2*a(n-3) -10*a(n-4) -8', 'a(n-3) -4*a(n-4) -5*a(n-5) +2', 'a(n-2) -21*a(n-4) -20*a(n-5) +10', 'a(n-1) -104*a(n-4) -105*a(n-5) +52', 'a(n) -521*a(n-4) -520*a(n-5) +260', 'a(n-4)^2 -10*a(n-4)*a(n-5) +25*a(n-5)^2 +2*a(n-4) -10*a(n-5) -8', 'a(n-4) -4*a(n-5) -5*a(n-6) +2', 'a(n-3) -21*a(n-5) -20*a(n-6) +10', 'a(n-2) -104*a(n-5) -105*a(n-6) +52', 'a(n-1) -521*a(n-5) -520*a(n-6) +260', 'a(n) -2604*a(n-5) -2605*a(n-6) +1302', 'a(n-5)^2 -10*a(n-5)*a(n-6) +25*a(n-6)^2 +2*a(n-5) -10*a(n-6) -8', 'a(n-5) -4*a(n-6) -5*a(n-7) +2', 'a(n-4) -21*a(n-6) -20*a(n-7) +10', 'a(n-3) -104*a(n-6) -105*a(n-7) +52', 'a(n-2) -521*a(n-6) -520*a(n-7) +260', 'a(n-1) -2604*a(n-6) -2605*a(n-7) +1302', 'a(n) -13021*a(n-6) -13020*a(n-7) +6510', 'a(n-6)^2 -10*a(n-6)*a(n-7) +25*a(n-7)^2 +2*a(n-6) -10*a(n-7) -8', 'a(n-6) -4*a(n-7) -5*a(n-8) +2', 'a(n-5) -21*a(n-7) -20*a(n-8) +10', 'a(n-4) -104*a(n-7) -105*a(n-8) +52', 'a(n-3) -521*a(n-7) -520*a(n-8) +260', 'a(n-2) -2604*a(n-7) -2605*a(n-8) +1302', 'a(n-1) -13021*a(n-7) -13020*a(n-8) +6510', 'a(n) -65104*a(n-7) -65105*a(n-8) +32552', 'a(n-7)^2 -10*a(n-7)*a(n-8) +25*a(n-8)^2 +2*a(n-7) -10*a(n-8) -8', 'a(n-7) -4*a(n-8) -5*a(n-9) +2', 'a(n-6) -21*a(n-8) -20*a(n-9) +10', 'a(n-5) -104*a(n-8) -105*a(n-9) +52', 'a(n-4) -521*a(n-8) -520*a(n-9) +260', 'a(n-3) -2604*a(n-8) -2605*a(n-9) +1302', 'a(n-2) -13021*a(n-8) -13020*a(n-9) +6510', 'a(n-1) -65104*a(n-8) -65105*a(n-9) +32552', 'a(n) -325521*a(n-8) -325520*a(n-9) +162760', 'a(n-8)^2 -10*a(n-8)*a(n-9) +25*a(n-9)^2 +2*a(n-8) -10*a(n-9) -8', 'a(n-8) -4*a(n-9) -5*a(n-10) +2', 'a(n-7) -21*a(n-9) -20*a(n-10) +10', 'a(n-6) -104*a(n-9) -105*a(n-10) +52', 'a(n-5) -521*a(n-9) -520*a(n-10) +260', 'a(n-4) -2604*a(n-9) -2605*a(n-10) +1302', 'a(n-3) -13021*a(n-9) -13020*a(n-10) +6510', 'a(n-2) -65104*a(n-9) -65105*a(n-10) +32552', 'a(n-1) -325521*a(n-9) -325520*a(n-10) +162760', 'a(n-9)^2 -10*a(n-9)*a(n-10) +25*a(n-10)^2 +2*a(n-9) -10*a(n-10) -8', 'a(n) -1627604*a(n-9) -1627605*a(n-10) +813802', 'a(n-9) -4*a(n-10) -5*a(n-11) +2', 'a(n-8) -21*a(n-10) -20*a(n-11) +10', 'a(n-7) -104*a(n-10) -105*a(n-11) +52', 'a(n-6) -521*a(n-10) -520*a(n-11) +260', 'a(n-5) -2604*a(n-10) -2605*a(n-11) +1302', 'a(n-4) -13021*a(n-10) -13020*a(n-11) +6510', 'a(n-3) -65104*a(n-10) -65105*a(n-11) +32552', 'a(n-2) -325521*a(n-10) -325520*a(n-11) +162760', 'a(n-10)^2 -10*a(n-10)*a(n-11) +25*a(n-11)^2 +2*a(n-10) -10*a(n-11) -8', 'a(n-1) -1627604*a(n-10) -1627605*a(n-11) +813802', 'a(n-10) -4*a(n-11) -5*a(n-12) +2', 'a(n-9) -21*a(n-11) -20*a(n-12) +10', 'a(n-8) -104*a(n-11) -105*a(n-12) +52', 'a(n-7) -521*a(n-11) -520*a(n-12) +260', 'a(n-6) -2604*a(n-11) -2605*a(n-12) +1302', 'a(n-5) -13021*a(n-11) -13020*a(n-12) +6510', 'a(n-4) -65104*a(n-11) -65105*a(n-12) +32552', 'a(n-3) -325521*a(n-11) -325520*a(n-12) +162760', 'a(n-11)^2 -10*a(n-11)*a(n-12) +25*a(n-12)^2 +2*a(n-11) -10*a(n-12) -8', 'a(n-2) -1627604*a(n-11) -1627605*a(n-12) +813802', 'a(n-11) -4*a(n-12) -5*a(n-13) +2', 'a(n-10) -21*a(n-12) -20*a(n-13) +10', 'a(n-9) -104*a(n-12) -105*a(n-13) +52', 'a(n-8) -521*a(n-12) -520*a(n-13) +260', 'a(n-7) -2604*a(n-12) -2605*a(n-13) +1302', 'a(n-6) -13021*a(n-12) -13020*a(n-13) +6510', 'a(n-5) -65104*a(n-12) -65105*a(n-13) +32552', 'a(n-4) -325521*a(n-12) -325520*a(n-13) +162760', 'a(n-12)^2 -10*a(n-12)*a(n-13) +25*a(n-13)^2 +2*a(n-12) -10*a(n-13) -8', 'a(n-3) -1627604*a(n-12) -1627605*a(n-13) +813802', 'a(n-12) -4*a(n-13) -5*a(n-14) +2', 'a(n-11) -21*a(n-13) -20*a(n-14) +10', 'a(n-10) -104*a(n-13) -105*a(n-14) +52', 'a(n-9) -521*a(n-13) -520*a(n-14) +260', 'a(n-8) -2604*a(n-13) -2605*a(n-14) +1302', 'a(n-7) -13021*a(n-13) -13020*a(n-14) +6510', 'a(n-6) -65104*a(n-13) -65105*a(n-14) +32552', 'a(n-5) -325521*a(n-13) -325520*a(n-14) +162760', 'a(n-13)^2 -10*a(n-13)*a(n-14) +25*a(n-14)^2 +2*a(n-13) -10*a(n-14) -8', 'a(n-4) -1627604*a(n-13) -1627605*a(n-14) +813802', 'a(n-13) -4*a(n-14) -5*a(n-15) +2', 'a(n-12) -21*a(n-14) -20*a(n-15) +10', 'a(n-11) -104*a(n-14) -105*a(n-15) +52', 'a(n-10) -521*a(n-14) -520*a(n-15) +260', 'a(n-9) -2604*a(n-14) -2605*a(n-15) +1302', 'a(n-8) -13021*a(n-14) -13020*a(n-15) +6510', 'a(n-7) -65104*a(n-14) -65105*a(n-15) +32552', 'a(n-6) -325521*a(n-14) -325520*a(n-15) +162760', 'a(n-14)^2 -10*a(n-14)*a(n-15) +25*a(n-15)^2 +2*a(n-14) -10*a(n-15) -8', 'a(n-5) -1627604*a(n-14) -1627605*a(n-15) +813802', 'a(n-14) -4*a(n-15) -5*a(n-16) +2', 'a(n-13) -21*a(n-15) -20*a(n-16) +10', 'a(n-12) -104*a(n-15) -105*a(n-16) +52', 'a(n-11) -521*a(n-15) -520*a(n-16) +260', 'a(n-10) -2604*a(n-15) -2605*a(n-16) +1302', 'a(n-9) -13021*a(n-15) -13020*a(n-16) +6510', 'a(n-8) -65104*a(n-15) -65105*a(n-16) +32552', 'a(n-7) -325521*a(n-15) -325520*a(n-16) +162760', 'a(n-15)^2 -10*a(n-15)*a(n-16) +25*a(n-16)^2 +2*a(n-15) -10*a(n-16) -8', 'a(n-6) -1627604*a(n-15) -1627605*a(n-16) +813802', 'a(n-15) -4*a(n-16) -5*a(n-17) +2', 'a(n-14) -21*a(n-16) -20*a(n-17) +10', 'a(n-13) -104*a(n-16) -105*a(n-17) +52', 'a(n-12) -521*a(n-16) -520*a(n-17) +260', 'a(n-11) -2604*a(n-16) -2605*a(n-17) +1302', 'a(n-10) -13021*a(n-16) -13020*a(n-17) +6510', 'a(n-9) -65104*a(n-16) -65105*a(n-17) +32552', 'a(n-8) -325521*a(n-16) -325520*a(n-17) +162760', 'a(n-16)^2 -10*a(n-16)*a(n-17) +25*a(n-17)^2 +2*a(n-16) -10*a(n-17) -8', 'a(n-7) -1627604*a(n-16) -1627605*a(n-17) +813802', 'a(n-16) -4*a(n-17) -5*a(n-18) +2', 'a(n-15) -21*a(n-17) -20*a(n-18) +10', 'a(n-14) -104*a(n-17) -105*a(n-18) +52', 'a(n-13) -521*a(n-17) -520*a(n-18) +260', 'a(n-12) -2604*a(n-17) -2605*a(n-18) +1302', 'a(n-11) -13021*a(n-17) -13020*a(n-18) +6510', 'a(n-10) -65104*a(n-17) -65105*a(n-18) +32552', 'a(n-9) -325521*a(n-17) -325520*a(n-18) +162760', 'a(n-17)*a(n-18) +(-109/22)*a(n-18)^2 +(-89/11)*a(n-17) +37*a(n-18) +387/22', 'a(n-17)^2 +(-270/11)*a(n-18)^2 +(-868/11)*a(n-17) +360*a(n-18) +1847/11', 'a(n-17) -4*a(n-18) -5*a(n-19) +2', 'a(n-16) -21*a(n-18) -20*a(n-19) +10', 'a(n-19)^2 -24*a(n-18) +88*a(n-19) +79', 'a(n-15) -104*a(n-18) -105*a(n-19) +52', 'a(n-14) -521*a(n-18) -520*a(n-19) +260', 'a(n-18)*a(n-19) -127*a(n-18) +473*a(n-19) +409', 'a(n-18)^2 -668*a(n-18) +2520*a(n-19) +2107', 'a(n-13) -2604*a(n-18) -2605*a(n-19) +1302', 'a(n-12) -13021*a(n-18) -13020*a(n-19) +6510', 'a(n-11) -65104*a(n-18) -65105*a(n-19) +32552', 'a(n-19) -4*a(n-20) -3', 'a(n-20)^2 -8*a(n-20) +7', 'a(n-18) -21*a(n-20) -10', 'a(n-17) -104*a(n-20) -53', 'a(n-16) -521*a(n-20) -260', 'a(n-15) -2604*a(n-20) -1303', 'a(n-14) -13021*a(n-20) -6510', 'a(n-13) -65104*a(n-20) -32553', 'a(n-12) -325521*a(n-20) -162760', 'a(n-11) -1627604*a(n-20) -813803']
A102239: 
MB not reconst
truth: 
a(n) = 5*a(n - 1) + 1*a(n - 2) + -5*a(n - 3),  
a(0) = 1, a(1) = 7, a(2) = 31

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    


orders_used: [2, 3, 2, 4, 3, 2, 5, 4, 3, 2, 6, 5, 4, 3, 2, 7, 6, 5, 4, 3, 2, 7, 7, 7, 8, 7, 6, 5, 4, 3, 2, 8, 9, 8, 7, 6, 5, 4, 3, 10, 9, 8, 7, 6, 5, 11, 10, 9, 8, 7, 12, 11, 10, 9, 8, 13, 12, 11, 10, 9, 8, 14, 13, 12, 11, 10, 9, 8, 15, 15, 14, 13, 12, 11, 10, 9, 16, 16, 15, 15, 14, 13, 12, 11, 16, 17, 17, 16, 16, 15, 14, 13, 17, 18, 18, 17, 16, 15, 18, 18, 18, 18, 18, 19, 19, 18, 17, 19, 19, 19, 19]
dasco's acc_1, acc_10: True, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:3191/10000, seq_id:A025474, order:20 took:
 71.5 seconds, i.e. 1.19 minutes or 0.02 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 2.
eqs_explicit:
['a(n) = -a(n-19)/3 + 2*a(n-17)/3 + a(n-16)/3 + a(n-15)/3 - 2/3']
non_linears:
['a(n)*a(n-2) -a(n) -a(n-2) +1', 'a(n-1)*a(n-3) -a(n-1) -a(n-3) +1', 'a(n)*a(n-2) -a(n) -a(n-2) +1', 'a(n-2)*a(n-4) -a(n-2) -a(n-4) +1', 'a(n-1)*a(n-3) -a(n-1) -a(n-3) +1', 'a(n)*a(n-2) -a(n) -a(n-2) +1', 'a(n-3)*a(n-5) -a(n-3) -a(n-5) +1', 'a(n-2)*a(n-4) -a(n-2) -a(n-4) +1', 'a(n-1)*a(n-3) -a(n-1) -a(n-3) +1', 'a(n)*a(n-2) -a(n) -a(n-2) +1', 'a(n-4)*a(n-6) -a(n-4) -a(n-6) +1', 'a(n-3)*a(n-5) -a(n-3) -a(n-5) +1', 'a(n-2)*a(n-4) -a(n-2) -a(n-4) +1', 'a(n-1)*a(n-3) -a(n-1) -a(n-3) +1', 'a(n)*a(n-2) -a(n) -a(n-2) +1', 'a(n-5)*a(n-7) -a(n-5) -a(n-7) +1', 'a(n-4)*a(n-6) -a(n-4) -a(n-6) +1', 'a(n-3)*a(n-5) -a(n-3) -a(n-5) +1', 'a(n-2)*a(n-4) -a(n-2) -a(n-4) +1', 'a(n-1)*a(n-3) -a(n-1) -a(n-3) +1', 'a(n)*a(n-2) -a(n) -a(n-2) +1', 'a(n-1)*a(n-7)^2 -a(n-1)*a(n-7) -a(n-7)^2 +a(n-7)', 'a(n-2)*a(n-7)^2 -5*a(n-2)*a(n-7) -a(n-7)^2 +4*a(n-2) +5*a(n-7) -4', 'a(n-7)^3 -3*a(n-1)*a(n-7) -a(n-2)*a(n-7) -6*a(n-7)^2 +3*a(n-1) +a(n-2) +15*a(n-7) -10', 'a(n-6)*a(n-8) -a(n-6) -a(n-8) +1', 'a(n-5)*a(n-7) -a(n-5) -a(n-7) +1', 'a(n-4)*a(n-6) -a(n-4) -a(n-6) +1', 'a(n-3)*a(n-5) -a(n-3) -a(n-5) +1', 'a(n-2)*a(n-4) -a(n-2) -a(n-4) +1', 'a(n-1)*a(n-3) -a(n-1) -a(n-3) +1', 'a(n)*a(n-2) -a(n) -a(n-2) +1', 'a(n-2)*a(n-8)^2 -a(n-2)*a(n-8) -a(n-8)^2 +a(n-8)', 'a(n-7)*a(n-9) -a(n-7) -a(n-9) +1', 'a(n-6)*a(n-8) -a(n-6) -a(n-8) +1', 'a(n-5)*a(n-7) -a(n-5) -a(n-7) +1', 'a(n-4)*a(n-6) -a(n-4) -a(n-6) +1', 'a(n-3)*a(n-5) -a(n-3) -a(n-5) +1', 'a(n-2)*a(n-4) -a(n-2) -a(n-4) +1', 'a(n-1)*a(n-3) -a(n-1) -a(n-3) +1', 'a(n-8)*a(n-10) -a(n-8) -a(n-10) +1', 'a(n-7)*a(n-9) -a(n-7) -a(n-9) +1', 'a(n-6)*a(n-8) -a(n-6) -a(n-8) +1', 'a(n-5)*a(n-7) -a(n-5) -a(n-7) +1', 'a(n-4)*a(n-6) -a(n-4) -a(n-6) +1', 'a(n-3)*a(n-5) -a(n-3) -a(n-5) +1', 'a(n-9)*a(n-11) -a(n-9) -a(n-11) +1', 'a(n-8)*a(n-10) -a(n-8) -a(n-10) +1', 'a(n-7)*a(n-9) -a(n-7) -a(n-9) +1', 'a(n-6)*a(n-8) -a(n-6) -a(n-8) +1', 'a(n-5)*a(n-7) -a(n-5) -a(n-7) +1', 'a(n-10)*a(n-12) -a(n-10) -a(n-12) +1', 'a(n-9)*a(n-11) -a(n-9) -a(n-11) +1', 'a(n-8)*a(n-10) -a(n-8) -a(n-10) +1', 'a(n-7)*a(n-9) -a(n-7) -a(n-9) +1', 'a(n-6)*a(n-8) -a(n-6) -a(n-8) +1', 'a(n-11)*a(n-13) -a(n-11) -a(n-13) +1', 'a(n-10)*a(n-12) -a(n-10) -a(n-12) +1', 'a(n-9)*a(n-11) -a(n-9) -a(n-11) +1', 'a(n-8)*a(n-10) -a(n-8) -a(n-10) +1', 'a(n-7)*a(n-9) -a(n-7) -a(n-9) +1', 'a(n-6)*a(n-8) -a(n-6) -a(n-8) +1', 'a(n-12)*a(n-14) -a(n-12) -a(n-14) +1', 'a(n-11)*a(n-13) -a(n-11) -a(n-13) +1', 'a(n-10)*a(n-12) -a(n-10) -a(n-12) +1', 'a(n-9)*a(n-11) -a(n-9) -a(n-11) +1', 'a(n-8)*a(n-10) -a(n-8) -a(n-10) +1', 'a(n-7)*a(n-9) -a(n-7) -a(n-9) +1', 'a(n-6)*a(n-8) -a(n-6) -a(n-8) +1', 'a(n-13)*a(n-15) -a(n-13) -a(n-15) +1', 'a(n-10)*a(n-15) -a(n-10) -a(n-15) +1', 'a(n-12)*a(n-14) -a(n-12) -a(n-14) +1', 'a(n-11)*a(n-13) -a(n-11) -a(n-13) +1', 'a(n-10)*a(n-12) -a(n-10) -a(n-12) +1', 'a(n-9)*a(n-11) -a(n-9) -a(n-11) +1', 'a(n-8)*a(n-10) -a(n-8) -a(n-10) +1', 'a(n-7)*a(n-9) -a(n-7) -a(n-9) +1', 'a(n-14)*a(n-16) -a(n-14) -a(n-16) +1', 'a(n-11)*a(n-16) -a(n-11) -a(n-16) +1', 'a(n-13)*a(n-15) -a(n-13) -a(n-15) +1', 'a(n-10)*a(n-15) -a(n-10) -a(n-15) +1', 'a(n-12)*a(n-14) -a(n-12) -a(n-14) +1', 'a(n-11)*a(n-13) -a(n-11) -a(n-13) +1', 'a(n-10)*a(n-12) -a(n-10) -a(n-12) +1', 'a(n-9)*a(n-11) -a(n-9) -a(n-11) +1', 'a(n-4) +(-67/127)*a(n-9) +(-72/127)*a(n-10) +(20/127)*a(n-11) +(-23/127)*a(n-12) +(97/127)*a(n-13) +(87/127)*a(n-14) +(-46/127)*a(n-15) +(-169/127)*a(n-16) -9/127', 'a(n-15)*a(n-17) -a(n-15) -a(n-17) +1', 'a(n-12)*a(n-17) -a(n-12) -a(n-17) +1', 'a(n-14)*a(n-16) -a(n-14) -a(n-16) +1', 'a(n-11)*a(n-16) -a(n-11) -a(n-16) +1', 'a(n-13)*a(n-15) -a(n-13) -a(n-15) +1', 'a(n-12)*a(n-14) -a(n-12) -a(n-14) +1', 'a(n-11)*a(n-13) -a(n-11) -a(n-13) +1', 'a(n-4) +a(n-11) -a(n-15) -a(n-16) +a(n-17) -2', 'a(n-16)*a(n-18) -a(n-16) -a(n-18) +1', 'a(n-13)*a(n-18) -a(n-13) -a(n-18) +1', 'a(n-15)*a(n-17) -a(n-15) -a(n-17) +1', 'a(n-14)*a(n-16) -a(n-14) -a(n-16) +1', 'a(n-13)*a(n-15) -a(n-13) -a(n-15) +1', 'a(n-11) +(-20/43)*a(n-13) +(-2/43)*a(n-14) +(-66/43)*a(n-15) +(26/43)*a(n-16) +(10/43)*a(n-17) +(-9/43)*a(n-18) +32/43', 'a(n-16)*a(n-17) +(2/43)*a(n-13) +(26/43)*a(n-14) +(-2/43)*a(n-15) +(-37/43)*a(n-16) +(-87/43)*a(n-17) +(-12/43)*a(n-18) +57/43', 'a(n-14)*a(n-17) +(14/43)*a(n-13) +(-76/43)*a(n-14) +(29/43)*a(n-15) +(-1/43)*a(n-16) +(-50/43)*a(n-17) +(2/43)*a(n-18) +12/43', 'a(n-12) +(49/43)*a(n-13) +(35/43)*a(n-14) +(37/43)*a(n-15) +(-25/43)*a(n-16) +(-3/43)*a(n-17) +(7/43)*a(n-18) -259/43', 'a(n-7) +(-2/43)*a(n-13) +(-26/43)*a(n-14) +(-41/43)*a(n-15) +(-49/43)*a(n-16) +(1/43)*a(n-17) +(12/43)*a(n-18) +115/43', 'a(n-18)*a(n-19) -a(n-18) -a(n-19) +1', 'a(n-17)*a(n-19) -a(n-17) -a(n-19) +1', 'a(n-16)*a(n-18) -a(n-16) -a(n-18) +1', 'a(n-15)*a(n-17) -a(n-15) -a(n-17) +1', 'a(n-11) +(-5/3)*a(n-15) +(1/3)*a(n-16) +(-1/3)*a(n-17) +(2/3)*a(n-19) +1/3', 'a(n-7) +(-1/3)*a(n-15) +(-1/3)*a(n-16) +(1/3)*a(n-17) +(-2/3)*a(n-19) -1/3', 'a(n-4) +(2/3)*a(n-15) +(-4/3)*a(n-16) +(4/3)*a(n-17) +(-2/3)*a(n-19) -7/3', 'a(n) +(-1/3)*a(n-15) +(-1/3)*a(n-16) +(-2/3)*a(n-17) +(1/3)*a(n-19) +2/3']
A025474: 
a(n) = -a(n-19)/3 + 2*a(n-17)/3 + a(n-16)/3 + a(n-15)/3 - 2/3
truth: 
None

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

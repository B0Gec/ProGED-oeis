
orders_used: [2, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:4722/10000, seq_id:A036311, order:20 took:
 21.9 seconds, i.e. 0.37 minutes or 0.006 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 2.
eqs_explicit:
['a(n) = -308*a(n-10)/47 + 72*a(n-9)/47 + 336*a(n-8)/47 + 3*a(n-7)/47 + 1008/47']
non_linears:
['a(n)*a(n-1) +(-5/4)*a(n-1)^2 +(-5/4)*a(n)*a(n-2) +(25/16)*a(n-1)*a(n-2)', 'a(n-1)*a(n-2) +(-5/4)*a(n-2)^2 +(-5/4)*a(n-1)*a(n-3) +(25/16)*a(n-2)*a(n-3)', 'a(n-2) +(-91/125)*a(n-3) +(-11/25)*a(n-4) +(-1/5)*a(n-5) +(57/125)*a(n-6) +(-3/25)*a(n-7) +(-3/5)*a(n-8) -3', 'n +(-46/375)*a(n-3) +(3/25)*a(n-4) +(4/15)*a(n-5) +(-11/125)*a(n-6) +(-6/25)*a(n-7) +(-1/5)*a(n-8) -8', 'a(n-5)*a(n-6) +(512/5)*a(n-3) -48*a(n-4) -260*a(n-5) +(-224/5)*a(n-6) +96*a(n-7) +120*a(n-8) +1600', 'a(n-3)*a(n-5) +(944/5)*a(n-3) -96*a(n-4) -520*a(n-5) +(-288/5)*a(n-6) +192*a(n-7) +240*a(n-8) +3200', 'a(n-7)*a(n-8) +(1024/25)*a(n-3) +(-136/5)*a(n-4) -96*a(n-5) +(-48/25)*a(n-6) +(172/5)*a(n-7) +32*a(n-8) +640', 'a(n-6)*a(n-8) +(1112/25)*a(n-3) +(-128/5)*a(n-4) -120*a(n-5) +(-224/25)*a(n-6) +(256/5)*a(n-7) +40*a(n-8) +800', 'a(n-4)*a(n-8) +(2128/25)*a(n-3) +(-312/5)*a(n-4) -192*a(n-5) +(-256/25)*a(n-6) +(424/5)*a(n-7) +64*a(n-8) +1280', 'a(n-3)*a(n-8) +(2124/25)*a(n-3) +(-256/5)*a(n-4) -240*a(n-5) +(-248/25)*a(n-6) +(512/5)*a(n-7) +80*a(n-8) +1600', 'a(n-6)*a(n-7) +(1504/25)*a(n-3) +(-216/5)*a(n-4) -136*a(n-5) +(-508/25)*a(n-6) +(232/5)*a(n-7) +72*a(n-8) +1000', 'a(n-5)*a(n-7) +(2272/25)*a(n-3) +(-248/5)*a(n-4) -208*a(n-5) +(-544/25)*a(n-6) +(296/5)*a(n-7) +96*a(n-8) +1280', 'a(n-2) +(6/91)*a(n-5) +(-190/91)*a(n-6) +(-36/91)*a(n-7) +(-48/91)*a(n-8) +(33/91)*a(n-9) -108/91', 'a(n-4) +(55/91)*a(n-5) +(-225/91)*a(n-6) +(-57/91)*a(n-7) +(15/91)*a(n-8) +(75/91)*a(n-9) +375/91', 'n +(53/273)*a(n-5) +(-10/273)*a(n-6) +(-15/91)*a(n-7) +(-20/91)*a(n-8) +(-9/91)*a(n-9) -773/91', 'a(n-5)*a(n-9) +(-1480/13)*a(n-5) +(240/13)*a(n-6) +(560/13)*a(n-7) +(920/13)*a(n-8) +(-80/13)*a(n-9) +12080/13', 'a(n-1) +(5212/273)*a(n-5) +(-5918/273)*a(n-6) +(-414/91)*a(n-7) +(-461/91)*a(n-8) +(334/91)*a(n-9) -1242/91', 'a(n-9)^2 +(-3060/91)*a(n-5) +(-834/91)*a(n-6) +(1980/91)*a(n-7) +(2640/91)*a(n-8) +(-723/91)*a(n-9) +35060/91', 'a(n-8)*a(n-9) +(-4728/91)*a(n-5) +(480/91)*a(n-6) +(2160/91)*a(n-7) +(2516/91)*a(n-8) +(-160/91)*a(n-9) +42880/91', 'a(n-7)*a(n-9) +(-4776/91)*a(n-5) +(-912/91)*a(n-6) +(1720/91)*a(n-7) +(3992/91)*a(n-8) +(304/91)*a(n-9) +56120/91', 'a(n-6)*a(n-9) +(-6432/91)*a(n-5) +(-706/91)*a(n-6) +(2920/91)*a(n-7) +(4864/91)*a(n-8) +(-250/91)*a(n-9) +67000/91', 'a(n-6) +(-95/94)*a(n-7) +(-9/47)*a(n-8) +(-12/47)*a(n-9) +(33/188)*a(n-10) -27/47', 'a(n-3) +(-95/47)*a(n-7) +(-18/47)*a(n-8) +(-24/47)*a(n-9) +(33/94)*a(n-10) -54/47', 'n +(15/94)*a(n-7) +(-6/47)*a(n-8) +(-8/47)*a(n-9) +(-25/188)*a(n-10) -441/47', 'a(n-2) +(-112/47)*a(n-7) +(-42/47)*a(n-8) +(-9/47)*a(n-9) +(15/47)*a(n-10) -126/47', 'a(n) +(-3/47)*a(n-7) +(-336/47)*a(n-8) +(-72/47)*a(n-9) +(308/47)*a(n-10) -1008/47']
A036311: 
a(n) = -308*a(n-10)/47 + 72*a(n-9)/47 + 336*a(n-8)/47 + 3*a(n-7)/47 + 1008/47
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

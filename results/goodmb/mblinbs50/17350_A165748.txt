
orders_used: [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
While total time consumed by now, scale:17351/27236, seq_id:A165748, order:20 took:
 45.2 seconds, i.e. 0.75 minutes or 0.013 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
non_linears:
['a(n) +8*a(n-1) -16', 'a(n-1) +8*a(n-2) -16', 'a(n) -64*a(n-2) +112', 'a(n-2) +8*a(n-3) -16', 'a(n-1) -64*a(n-3) +112', 'a(n) +512*a(n-3) -912', 'a(n-3) +8*a(n-4) -16', 'a(n-2) -64*a(n-4) +112', 'a(n-1) +512*a(n-4) -912', 'a(n) -4096*a(n-4) +7280', 'a(n-4) +8*a(n-5) -16', 'a(n-3) -64*a(n-5) +112', 'a(n-2) +512*a(n-5) -912', 'a(n-1) -4096*a(n-5) +7280', 'a(n) +32768*a(n-5) -58256', 'a(n-5) +8*a(n-6) -16', 'a(n-4) -64*a(n-6) +112', 'a(n-3) +512*a(n-6) -912', 'a(n-2) -4096*a(n-6) +7280', 'a(n-1) +32768*a(n-6) -58256', 'a(n) -262144*a(n-6) +466032', 'a(n-6) +8*a(n-7) -16', 'a(n-5) -64*a(n-7) +112', 'a(n-4) +512*a(n-7) -912', 'a(n-3) -4096*a(n-7) +7280', 'a(n-2) +32768*a(n-7) -58256', 'a(n-1) -262144*a(n-7) +466032', 'a(n) +2097152*a(n-7) -3728272', 'a(n-7) +8*a(n-8) -16', 'a(n-6) -64*a(n-8) +112', 'a(n-5) +512*a(n-8) -912', 'a(n-4) -4096*a(n-8) +7280', 'a(n-3) +32768*a(n-8) -58256', 'a(n-2) -262144*a(n-8) +466032', 'a(n-1) +2097152*a(n-8) -3728272', 'a(n) -16777216*a(n-8) +29826160', 'a(n-8) +8*a(n-9) -16', 'a(n-7) -64*a(n-9) +112', 'a(n-6) +512*a(n-9) -912', 'a(n-5) -4096*a(n-9) +7280', 'a(n-4) +32768*a(n-9) -58256', 'a(n-3) -262144*a(n-9) +466032', 'a(n-2) +2097152*a(n-9) -3728272', 'a(n-1) -16777216*a(n-9) +29826160', 'a(n) +134217728*a(n-9) -238609296', 'a(n-9) +8*a(n-10) -16', 'a(n-8) -64*a(n-10) +112', 'a(n-7) +512*a(n-10) -912', 'a(n-6) -4096*a(n-10) +7280', 'a(n-5) +32768*a(n-10) -58256', 'a(n-4) -262144*a(n-10) +466032', 'a(n-3) +2097152*a(n-10) -3728272', 'a(n-2) -16777216*a(n-10) +29826160', 'a(n-1) +134217728*a(n-10) -238609296', 'a(n) -1073741824*a(n-10) +1908874352', 'a(n-10) +8*a(n-11) -16', 'a(n-9) -64*a(n-11) +112', 'a(n-8) +512*a(n-11) -912', 'a(n-7) -4096*a(n-11) +7280', 'a(n-6) +32768*a(n-11) -58256', 'a(n-5) -262144*a(n-11) +466032', 'a(n-4) +2097152*a(n-11) -3728272', 'a(n-3) -16777216*a(n-11) +29826160', 'a(n-2) +134217728*a(n-11) -238609296', 'a(n-1) -1073741824*a(n-11) +1908874352', 'a(n-11) +8*a(n-12) -16', 'a(n-10) -64*a(n-12) +112', 'a(n-9) +512*a(n-12) -912', 'a(n-8) -4096*a(n-12) +7280', 'a(n-7) +32768*a(n-12) -58256', 'a(n-6) -262144*a(n-12) +466032', 'a(n-5) +2097152*a(n-12) -3728272', 'a(n-4) -16777216*a(n-12) +29826160', 'a(n-3) +134217728*a(n-12) -238609296', 'a(n-2) -1073741824*a(n-12) +1908874352', 'a(n-12) +8*a(n-13) -16', 'a(n-11) -64*a(n-13) +112', 'a(n-10) +512*a(n-13) -912', 'a(n-9) -4096*a(n-13) +7280', 'a(n-8) +32768*a(n-13) -58256', 'a(n-7) -262144*a(n-13) +466032', 'a(n-6) +2097152*a(n-13) -3728272', 'a(n-5) -16777216*a(n-13) +29826160', 'a(n-4) +134217728*a(n-13) -238609296', 'a(n-3) -1073741824*a(n-13) +1908874352', 'a(n-13) +8*a(n-14) -16', 'a(n-12) -64*a(n-14) +112', 'a(n-11) +512*a(n-14) -912', 'a(n-10) -4096*a(n-14) +7280', 'a(n-9) +32768*a(n-14) -58256', 'a(n-8) -262144*a(n-14) +466032', 'a(n-7) +2097152*a(n-14) -3728272', 'a(n-6) -16777216*a(n-14) +29826160', 'a(n-5) +134217728*a(n-14) -238609296', 'a(n-4) -1073741824*a(n-14) +1908874352', 'a(n-14) +8*a(n-15) -16', 'a(n-13) -64*a(n-15) +112', 'a(n-12) +512*a(n-15) -912', 'a(n-11) -4096*a(n-15) +7280', 'a(n-10) +32768*a(n-15) -58256', 'a(n-9) -262144*a(n-15) +466032', 'a(n-8) +2097152*a(n-15) -3728272', 'a(n-7) -16777216*a(n-15) +29826160', 'a(n-6) +134217728*a(n-15) -238609296', 'a(n-5) -1073741824*a(n-15) +1908874352', 'a(n-15) +8*a(n-16) -16', 'a(n-14) -64*a(n-16) +112', 'a(n-13) +512*a(n-16) -912', 'a(n-12) -4096*a(n-16) +7280', 'a(n-11) +32768*a(n-16) -58256', 'a(n-10) -262144*a(n-16) +466032', 'a(n-9) +2097152*a(n-16) -3728272', 'a(n-8) -16777216*a(n-16) +29826160', 'a(n-7) +134217728*a(n-16) -238609296', 'a(n-6) -1073741824*a(n-16) +1908874352', 'a(n-16) +8*a(n-17) -16', 'a(n-15) -64*a(n-17) +112', 'a(n-14) +512*a(n-17) -912', 'a(n-13) -4096*a(n-17) +7280', 'a(n-12) +32768*a(n-17) -58256', 'a(n-11) -262144*a(n-17) +466032', 'a(n-10) +2097152*a(n-17) -3728272', 'a(n-9) -16777216*a(n-17) +29826160', 'a(n-8) +134217728*a(n-17) -238609296', 'a(n-7) -1073741824*a(n-17) +1908874352', 'a(n-17) +8*a(n-18) -16', 'a(n-16) -64*a(n-18) +112', 'a(n-15) +512*a(n-18) -912', 'a(n-14) -4096*a(n-18) +7280', 'a(n-13) +32768*a(n-18) -58256', 'a(n-12) -262144*a(n-18) +466032', 'a(n-11) +2097152*a(n-18) -3728272', 'a(n-10) -16777216*a(n-18) +29826160', 'a(n-9) +134217728*a(n-18) -238609296', 'a(n-8) -1073741824*a(n-18) +1908874352', 'a(n-18) +8*a(n-19) -16', 'a(n-17) -64*a(n-19) +112', 'a(n-16) +512*a(n-19) -912', 'a(n-15) -4096*a(n-19) +7280', 'a(n-14) +32768*a(n-19) -58256', 'a(n-13) -262144*a(n-19) +466032', 'a(n-12) +2097152*a(n-19) -3728272', 'a(n-11) -16777216*a(n-19) +29826160', 'a(n-10) +134217728*a(n-19) -238609296', 'a(n-9) -1073741824*a(n-19) +1908874352', 'a(n-19) +8*a(n-20) -16', 'a(n-18) -64*a(n-20) +112', 'a(n-17) +512*a(n-20) -912', 'a(n-16) -4096*a(n-20) +7280', 'a(n-15) +32768*a(n-20) -58256', 'a(n-14) -262144*a(n-20) +466032', 'a(n-13) +2097152*a(n-20) -3728272', 'a(n-12) -16777216*a(n-20) +29826160', 'a(n-11) +134217728*a(n-20) -238609296', 'a(n-10) -1073741824*a(n-20) +1908874352']
A165748: 
MB not reconst
truth: 
a(n) = -7*a(n - 1) + 8*a(n - 2),  
a(0) = 1, a(1) = 8

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

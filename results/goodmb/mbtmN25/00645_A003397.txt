
orders_used: [9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:646/10000, seq_id:A003397, order:20 took:
 63.8 seconds, i.e. 1.06 minutes or 0.018 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 9.
eqs_explicit:
[]
non_linears:
['a(n-8)*a(n-9) -a(n-9)^2 -4096*a(n-8) +3585*a(n-9) +2093056', 'a(n-8)^2 -a(n-9)^2 -24297*a(n-8) +23275*a(n-9) +12154646', 'a(n-6)*a(n-8) -a(n-6)*a(n-9) -511*a(n-6) -20712*a(n-8) +20712*a(n-9) +10583832', 'a(n-5)*a(n-8) -a(n-5)*a(n-9) -511*a(n-5) -21223*a(n-8) +21223*a(n-9) +10844953', 'a(n-4)*a(n-8) -a(n-4)*a(n-9) -511*a(n-4) -21734*a(n-8) +21734*a(n-9) +11106074', 'a(n-9)*a(n-10) -a(n-10)^2 -4096*a(n-9) +3585*a(n-10) +2093056', 'a(n-9)^2 -a(n-10)^2 -24297*a(n-9) +23275*a(n-10) +12154646', 'a(n-8)*a(n-10) -a(n-10)^2 -3585*a(n-8) -511*a(n-9) +3074*a(n-10) +3924991', 'a(n-6)*a(n-9) -a(n-6)*a(n-10) -511*a(n-6) -21223*a(n-9) +21223*a(n-10) +10844953', 'a(n-5)*a(n-9) -a(n-5)*a(n-10) -511*a(n-5) -21734*a(n-9) +21734*a(n-10) +11106074', 'a(n-8)*a(n-9) -a(n-10)^2 -4096*a(n-8) -20712*a(n-9) +23275*a(n-10) +14247702', 'a(n-8)^2 -a(n-10)^2 -24297*a(n-8) -1022*a(n-9) +23275*a(n-10) +24309292', 'a(n-6)*a(n-8) -a(n-6)*a(n-10) -1022*a(n-6) -20712*a(n-8) -511*a(n-9) +21223*a(n-10) +21428785', 'a(n-5)*a(n-8) -a(n-5)*a(n-10) -1022*a(n-5) -21223*a(n-8) -511*a(n-9) +21734*a(n-10) +21951027', 'a(n-10)*a(n-11) -a(n-11)^2 -4096*a(n-10) +3585*a(n-11) +2093056', 'a(n-10)^2 -a(n-11)^2 -24297*a(n-10) +23275*a(n-11) +12154646', 'a(n-9)*a(n-11) -a(n-11)^2 -3585*a(n-9) -511*a(n-10) +3074*a(n-11) +3924991', 'a(n-6)*a(n-10) -a(n-6)*a(n-11) -511*a(n-6) -21734*a(n-10) +21734*a(n-11) +11106074', 'a(n-8)*a(n-11) -a(n-11)^2 -3074*a(n-8) -511*a(n-9) -511*a(n-10) +2563*a(n-11) +5495805', 'a(n-9)*a(n-10) -a(n-11)^2 -4096*a(n-9) -20712*a(n-10) +23275*a(n-11) +14247702', 'a(n-9)^2 -a(n-11)^2 -24297*a(n-9) -1022*a(n-10) +23275*a(n-11) +24309292', 'a(n-8)*a(n-10) -a(n-11)^2 -3585*a(n-8) -511*a(n-9) -21223*a(n-10) +23275*a(n-11) +16079637', 'a(n-6)*a(n-9) -a(n-6)*a(n-11) -1022*a(n-6) -21223*a(n-9) -511*a(n-10) +21734*a(n-11) +21951027', 'a(n-8)*a(n-9) -a(n-11)^2 -4096*a(n-8) -20712*a(n-9) -1022*a(n-10) +23275*a(n-11) +26402348', 'a(n-11)*a(n-12) -a(n-12)^2 -4096*a(n-11) +3585*a(n-12) +2093056', 'a(n-11)^2 -a(n-12)^2 -24297*a(n-11) +23275*a(n-12) +12154646', 'a(n-10)*a(n-12) -a(n-12)^2 -3585*a(n-10) -511*a(n-11) +3074*a(n-12) +3924991', 'a(n-9)*a(n-12) -a(n-12)^2 -3074*a(n-9) -511*a(n-10) -511*a(n-11) +2563*a(n-12) +5495805', 'a(n-10)*a(n-11) -a(n-12)^2 -4096*a(n-10) -20712*a(n-11) +23275*a(n-12) +14247702', 'a(n-10)^2 -a(n-12)^2 -24297*a(n-10) -1022*a(n-11) +23275*a(n-12) +24309292', 'a(n-8)*a(n-12) -a(n-12)^2 -2563*a(n-8) -511*a(n-9) -511*a(n-10) -511*a(n-11) +2052*a(n-12) +6805498', 'a(n-9)*a(n-11) -a(n-12)^2 -3585*a(n-9) -511*a(n-10) -21223*a(n-11) +23275*a(n-12) +16079637', 'a(n-9)*a(n-10) -a(n-12)^2 -4096*a(n-9) -20712*a(n-10) -1022*a(n-11) +23275*a(n-12) +26402348', 'a(n-9)^2 -a(n-12)^2 -24297*a(n-9) -1022*a(n-10) -1022*a(n-11) +23275*a(n-12) +36463938', 'n +(-1/511)*a(n-16) -8168/511', 'a(n-8) +a(n-9) +a(n-10) +a(n-11) +a(n-12) +a(n-13) +a(n-14) +a(n-15) +(-19171/511)*a(n-16) -9279692/511', 'a(n-7) +(-15594/15083)*a(n-15) +(511/15083)*a(n-16) -288895072/15083', 'a(n-6) +(-15594/15083)*a(n-14) +(511/15083)*a(n-16) -288633951/15083', 'a(n-5) +(-15594/15083)*a(n-13) +(511/15083)*a(n-16) -288372830/15083', 'a(n-4) +(-15594/15083)*a(n-12) +(511/15083)*a(n-16) -288111709/15083', 'a(n-3) +(-15594/15083)*a(n-11) +(511/15083)*a(n-16) -287850588/15083', 'a(n-2) +(-15594/15083)*a(n-10) +(511/15083)*a(n-16) -287589467/15083', 'a(n-1) +(-15594/15083)*a(n-9) +(511/15083)*a(n-16) -287328346/15083', 'a(n-16) -a(n-17) -511', 'a(n-8) -a(n-17) -19682', 'n +(-1/511)*a(n-17) -8679/511', 'a(n-9) +a(n-10) +a(n-11) +a(n-12) +a(n-13) +a(n-14) +a(n-15) +(-18660/511)*a(n-17) -9018571/511', 'a(n-7) +(-15594/15083)*a(n-15) +(511/15083)*a(n-17) -288633951/15083', 'a(n-6) +(-15594/15083)*a(n-14) +(511/15083)*a(n-17) -288372830/15083', 'a(n-5) +(-15594/15083)*a(n-13) +(511/15083)*a(n-17) -288111709/15083', 'a(n-4) +(-15594/15083)*a(n-12) +(511/15083)*a(n-17) -287850588/15083', 'a(n-3) +(-15594/15083)*a(n-11) +(511/15083)*a(n-17) -287589467/15083', 'a(n-2) +(-15594/15083)*a(n-10) +(511/15083)*a(n-17) -287328346/15083', 'a(n-17) -a(n-18) -511', 'a(n-16) -a(n-18) -1022', 'a(n-9) -a(n-18) -19682', 'a(n-8) -a(n-18) -20193', 'a(n-1) -a(n-18) -39364', 'n +(-1/511)*a(n-18) -9190/511', 'a(n-10) +a(n-11) +a(n-12) +a(n-13) +a(n-14) +a(n-15) +(-18149/511)*a(n-18) -8496329/511', 'a(n-7) +(-15594/15083)*a(n-15) +(511/15083)*a(n-18) -288372830/15083', 'a(n-6) +(-15594/15083)*a(n-14) +(511/15083)*a(n-18) -288111709/15083', 'a(n-5) +(-15594/15083)*a(n-13) +(511/15083)*a(n-18) -287850588/15083', 'a(n-18) -a(n-19) -511', 'a(n-17) -a(n-19) -1022', 'a(n-16) -a(n-19) -1533', 'a(n-10) -a(n-19) -19682', 'a(n-9) -a(n-19) -20193', 'a(n-8) -a(n-19) -20704', 'a(n-2) -a(n-19) -39364', 'a(n-1) -a(n-19) -39875', 'n +(-1/511)*a(n-19) -9701/511', 'a(n-11) +a(n-12) +a(n-13) +a(n-14) +a(n-15) +(-17638/511)*a(n-19) -7712966/511', 'a(n-19) -a(n-20) -511', 'a(n-18) -a(n-20) -1022', 'a(n-17) -a(n-20) -1533', 'a(n-16) -a(n-20) -2044', 'a(n-11) -a(n-20) -19682', 'a(n-10) -a(n-20) -20193', 'a(n-9) -a(n-20) -20704', 'a(n-8) -a(n-20) -21215', 'a(n-3) -a(n-20) -39364', 'a(n-2) -a(n-20) -39875']
A003397: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

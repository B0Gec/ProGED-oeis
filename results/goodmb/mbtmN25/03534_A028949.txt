
orders_used: [2, 3, 3, 4, 5, 6, 7, 8, 9, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 19, 18, 19, 19, 19, 19, 20, 19, 20, 20, 20, 20, 20]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:3535/10000, seq_id:A028949, order:20 took:
 32.2 seconds, i.e. 0.54 minutes or 0.009 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 2.
eqs_explicit:
[]
non_linears:
['a(n)*a(n-1)*a(n-2) -4*a(n)*a(n-1) -4*a(n)*a(n-2) -4*a(n-1)*a(n-2) +16*a(n) +16*a(n-1) +16*a(n-2) -64', 'a(n-1)*a(n-3)^2 -10*a(n-1)*a(n-3) -4*a(n-3)^2 +24*a(n-1) +40*a(n-3) -96', 'a(n-1)*a(n-2)*a(n-3) -4*a(n-1)*a(n-2) -4*a(n-1)*a(n-3) -4*a(n-2)*a(n-3) +16*a(n-1) +16*a(n-2) +16*a(n-3) -64', 'a(n-2)*a(n-4)^2 -10*a(n-2)*a(n-4) -4*a(n-4)^2 +24*a(n-2) +40*a(n-4) -96', 'a(n-3)*a(n-5)^2 -10*a(n-3)*a(n-5) -4*a(n-5)^2 +24*a(n-3) +40*a(n-5) -96', 'a(n-4)*a(n-6)^2 -10*a(n-4)*a(n-6) -4*a(n-6)^2 +24*a(n-4) +40*a(n-6) -96', 'a(n-5)*a(n-7)^2 -10*a(n-5)*a(n-7) -4*a(n-7)^2 +24*a(n-5) +40*a(n-7) -96', 'a(n-6)*a(n-8)^2 -10*a(n-6)*a(n-8) -4*a(n-8)^2 +24*a(n-6) +40*a(n-8) -96', 'a(n-7)*a(n-9)^2 -10*a(n-7)*a(n-9) -4*a(n-9)^2 +24*a(n-7) +40*a(n-9) -96', 'a(n-9) +(-7/5)*a(n-11) -a(n-12) +(-2/5)*a(n-13) +(8/5)*a(n-15) +(6/5)*a(n-16) +(-2/5)*a(n-17) -2', 'a(n-4) +(-7/5)*a(n-11) -a(n-12) +(-2/5)*a(n-13) +(8/5)*a(n-15) +(6/5)*a(n-16) +(-2/5)*a(n-17) -2', 'a(n-6) +(-11/5)*a(n-11) -2*a(n-12) +(-6/5)*a(n-13) +(4/5)*a(n-15) +(8/5)*a(n-16) +(4/5)*a(n-17) +8', 'a(n-16)*a(n-17) +(-9/5)*a(n-11) -3*a(n-12) +(-9/5)*a(n-13) +(6/5)*a(n-15) +(-8/5)*a(n-16) +(-14/5)*a(n-17) +28', 'a(n-13)^2 +(3/5)*a(n-11) +a(n-12) +(-47/5)*a(n-13) +(-2/5)*a(n-15) +(-4/5)*a(n-16) +(-2/5)*a(n-17) +20', 'a(n-16)*a(n-18) -4*a(n-16) -4*a(n-18) +16', 'a(n-10) +(5/7)*a(n-13) +(2/7)*a(n-14) +(-2/7)*a(n-15) +(6/7)*a(n-16) +(-2/7)*a(n-17) +(-4/7)*a(n-18) -64/7', 'a(n-5) +(5/7)*a(n-13) +(2/7)*a(n-14) +(-2/7)*a(n-15) +(6/7)*a(n-16) +(-2/7)*a(n-17) +(-4/7)*a(n-18) -64/7', 'a(n-9) +(-31/49)*a(n-13) +(-32/49)*a(n-14) +(46/49)*a(n-15) +(2/49)*a(n-16) +(4/49)*a(n-17) +(8/49)*a(n-18) -222/49', 'a(n-8) +(13/49)*a(n-13) +(64/49)*a(n-14) +(6/49)*a(n-15) +(-4/49)*a(n-16) +(-8/49)*a(n-17) +(-16/49)*a(n-18) -536/49', 'a(n-17)*a(n-19) -4*a(n-17) -4*a(n-19) +16', 'a(n-16)*a(n-18) -4*a(n-16) -4*a(n-18) +16', 'a(n-11) +(-4/3)*a(n-16) -2*a(n-18) +(2/3)*a(n-19) +20/3', 'a(n-6) +(-4/3)*a(n-16) -2*a(n-18) +(2/3)*a(n-19) +20/3', 'a(n-13) -2*a(n-16) -2*a(n-17) -4*a(n-18) +2*a(n-19) +22', 'a(n-18)*a(n-19) +(-3/5)*a(n-15) +(4/5)*a(n-16) +(6/5)*a(n-17) +(-8/5)*a(n-18) +(-22/5)*a(n-19) +6/5', 'a(n-18)*a(n-20) -4*a(n-18) -4*a(n-20) +16', 'a(n-17)*a(n-19) -4*a(n-17) -4*a(n-19) +16', 'a(n-9) +(-2/3)*a(n-17) -2*a(n-19) +(4/3)*a(n-20) +4/3', 'a(n-4) +(-2/3)*a(n-17) -2*a(n-19) +(4/3)*a(n-20) +4/3', 'a(n-2) +(-4/3)*a(n-17) +a(n-18) +(-1/3)*a(n-20) -7/3', 'a(n-15) +(2/3)*a(n-17) +2*a(n-19) +(-4/3)*a(n-20) -34/3', 'a(n-12) +(-4/3)*a(n-17) -2*a(n-19) +(2/3)*a(n-20) +20/3']
A028949: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

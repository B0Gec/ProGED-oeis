
orders_used: [1, 2, 1, 2, 3, 3, 2, 1, 3, 3, 4, 4, 4, 3, 3, 2, 1, 4, 4, 5, 5, 5, 5, 4, 4, 3, 3, 2, 1, 6, 6, 6, 6, 6, 5, 5, 5, 4, 4, 7, 7, 7, 7, 7, 7, 6, 6, 6, 5, 8, 8, 8, 8, 8, 8, 8, 7, 7, 7, 9, 9, 9, 9, 9, 9, 9, 9, 8, 8, 10, 10, 10, 10, 10, 9, 9, 9, 9, 9, 11, 11, 11, 11, 11, 11, 10, 10, 10, 10, 12, 12, 12, 12, 12, 12, 11, 11, 11, 11, 13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 15, 15, 15, 15, 15, 14, 14, 14, 14, 13, 16]
dasco's acc_1, acc_10: True, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:9372/10000, seq_id:A059139, order:20 took:
 61.6 seconds, i.e. 1.03 minutes or 0.017 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
eqs_explicit:
['a(n) = a(n-16)']
non_linears:
['a(n)*a(n-1) -4*a(n) -4*a(n-1) +16', 'a(n-1)*a(n-2) -4*a(n-1) -4*a(n-2) +16', 'a(n)*a(n-1) -4*a(n) -4*a(n-1) +16', 'a(n)*a(n-2)^2 -11*a(n)*a(n-2) -7*a(n-2)^2 +28*a(n) +77*a(n-2) -196', 'a(n-2)*a(n-3) -4*a(n-2) -4*a(n-3) +16', 'a(n)*a(n-3) -4*a(n) -4*a(n-3) +16', 'a(n-1)*a(n-2) -4*a(n-1) -4*a(n-2) +16', 'a(n)*a(n-1) -4*a(n) -4*a(n-1) +16', 'a(n-1)*a(n-3)^2 -11*a(n-1)*a(n-3) -7*a(n-3)^2 +28*a(n-1) +77*a(n-3) -196', 'a(n)*a(n-2) +a(n-1)*a(n-3) -7*a(n) -7*a(n-1) -7*a(n-2) -7*a(n-3) +89', 'a(n)*a(n-2) -a(n-2)*a(n-4) -7*a(n) +7*a(n-4)', 'a(n-3)*a(n-4) -4*a(n-3) -4*a(n-4) +16', 'a(n-1)*a(n-4) -4*a(n-1) -4*a(n-4) +16', 'a(n-2)*a(n-3) -4*a(n-2) -4*a(n-3) +16', 'a(n)*a(n-3) -4*a(n) -4*a(n-3) +16', 'a(n-1)*a(n-2) -4*a(n-1) -4*a(n-2) +16', 'a(n)*a(n-1) -4*a(n) -4*a(n-1) +16', 'a(n-2)*a(n-4)^2 -11*a(n-2)*a(n-4) -7*a(n-4)^2 +28*a(n-2) +77*a(n-4) -196', 'a(n-2)^2*a(n-4) -7*a(n-2)^2 -11*a(n-2)*a(n-4) +77*a(n-2) +28*a(n-4) -196', 'a(n-1)*a(n-3) -a(n-3)*a(n-5) -7*a(n-1) +7*a(n-5)', 'a(n-4)*a(n-5) -4*a(n-4) -4*a(n-5) +16', 'a(n-2)*a(n-5) -4*a(n-2) -4*a(n-5) +16', 'a(n)*a(n-5) -4*a(n) -4*a(n-5) +16', 'a(n-3)*a(n-4) -4*a(n-3) -4*a(n-4) +16', 'a(n-1)*a(n-4) -4*a(n-1) -4*a(n-4) +16', 'a(n-2)*a(n-3) -4*a(n-2) -4*a(n-3) +16', 'a(n)*a(n-3) -4*a(n) -4*a(n-3) +16', 'a(n-1)*a(n-2) -4*a(n-1) -4*a(n-2) +16', 'a(n)*a(n-1) -4*a(n) -4*a(n-1) +16', 'a(n)*a(n-6) -a(n-4)*a(n-6) -7*a(n) +7*a(n-4)', 'a(n-2)*a(n-4) -a(n-4)*a(n-6) -7*a(n-2) +7*a(n-6)', 'a(n-5)*a(n-6) -4*a(n-5) -4*a(n-6) +16', 'a(n-3)*a(n-6) -4*a(n-3) -4*a(n-6) +16', 'a(n-1)*a(n-6) -4*a(n-1) -4*a(n-6) +16', 'a(n-4)*a(n-5) -4*a(n-4) -4*a(n-5) +16', 'a(n-2)*a(n-5) -4*a(n-2) -4*a(n-5) +16', 'a(n)*a(n-5) -4*a(n) -4*a(n-5) +16', 'a(n-3)*a(n-4) -4*a(n-3) -4*a(n-4) +16', 'a(n-1)*a(n-4) -4*a(n-1) -4*a(n-4) +16', 'a(n-1)*a(n-7) -a(n-5)*a(n-7) -7*a(n-1) +7*a(n-5)', 'a(n-3)*a(n-5) -a(n-5)*a(n-7) -7*a(n-3) +7*a(n-7)', 'a(n-6)*a(n-7) -4*a(n-6) -4*a(n-7) +16', 'a(n-4)*a(n-7) -4*a(n-4) -4*a(n-7) +16', 'a(n-2)*a(n-7) -4*a(n-2) -4*a(n-7) +16', 'a(n)*a(n-7) -4*a(n) -4*a(n-7) +16', 'a(n-5)*a(n-6) -4*a(n-5) -4*a(n-6) +16', 'a(n-3)*a(n-6) -4*a(n-3) -4*a(n-6) +16', 'a(n-1)*a(n-6) -4*a(n-1) -4*a(n-6) +16', 'a(n-4)*a(n-5) -4*a(n-4) -4*a(n-5) +16', 'a(n-2)*a(n-8) -a(n-6)*a(n-8) -7*a(n-2) +7*a(n-6)', 'a(n-4)*a(n-6) -a(n-6)*a(n-8) -7*a(n-4) +7*a(n-8)', 'a(n)*a(n-6) -a(n-6)*a(n-8) -7*a(n) +7*a(n-8)', 'a(n-7)*a(n-8) -4*a(n-7) -4*a(n-8) +16', 'a(n-5)*a(n-8) -4*a(n-5) -4*a(n-8) +16', 'a(n-3)*a(n-8) -4*a(n-3) -4*a(n-8) +16', 'a(n-1)*a(n-8) -4*a(n-1) -4*a(n-8) +16', 'a(n-6)*a(n-7) -4*a(n-6) -4*a(n-7) +16', 'a(n-4)*a(n-7) -4*a(n-4) -4*a(n-7) +16', 'a(n-2)*a(n-7) -4*a(n-2) -4*a(n-7) +16', 'a(n-3)*a(n-9) -a(n-7)*a(n-9) -7*a(n-3) +7*a(n-7)', 'a(n-5)*a(n-7) -a(n-7)*a(n-9) -7*a(n-5) +7*a(n-9)', 'a(n-1)*a(n-7) -a(n-7)*a(n-9) -7*a(n-1) +7*a(n-9)', 'a(n-8)*a(n-9) -4*a(n-8) -4*a(n-9) +16', 'a(n-6)*a(n-9) -4*a(n-6) -4*a(n-9) +16', 'a(n-4)*a(n-9) -4*a(n-4) -4*a(n-9) +16', 'a(n-2)*a(n-9) -4*a(n-2) -4*a(n-9) +16', 'a(n)*a(n-9) -4*a(n) -4*a(n-9) +16', 'a(n-7)*a(n-8) -4*a(n-7) -4*a(n-8) +16', 'a(n-5)*a(n-8) -4*a(n-5) -4*a(n-8) +16', 'a(n-9)*a(n-10) -4*a(n-9) -4*a(n-10) +16', 'a(n-7)*a(n-10) -4*a(n-7) -4*a(n-10) +16', 'a(n-5)*a(n-10) -4*a(n-5) -4*a(n-10) +16', 'a(n-3)*a(n-10) -4*a(n-3) -4*a(n-10) +16', 'a(n-1)*a(n-10) -4*a(n-1) -4*a(n-10) +16', 'a(n-8)*a(n-9) -4*a(n-8) -4*a(n-9) +16', 'a(n-6)*a(n-9) -4*a(n-6) -4*a(n-9) +16', 'a(n-4)*a(n-9) -4*a(n-4) -4*a(n-9) +16', 'a(n-2)*a(n-9) -4*a(n-2) -4*a(n-9) +16', 'a(n)*a(n-9) -4*a(n) -4*a(n-9) +16', 'a(n-10)*a(n-11) -4*a(n-10) -4*a(n-11) +16', 'a(n-8)*a(n-11) -4*a(n-8) -4*a(n-11) +16', 'a(n-6)*a(n-11) -4*a(n-6) -4*a(n-11) +16', 'a(n-4)*a(n-11) -4*a(n-4) -4*a(n-11) +16', 'a(n-2)*a(n-11) -4*a(n-2) -4*a(n-11) +16', 'a(n)*a(n-11) -4*a(n) -4*a(n-11) +16', 'a(n-9)*a(n-10) -4*a(n-9) -4*a(n-10) +16', 'a(n-7)*a(n-10) -4*a(n-7) -4*a(n-10) +16', 'a(n-5)*a(n-10) -4*a(n-5) -4*a(n-10) +16', 'a(n-3)*a(n-10) -4*a(n-3) -4*a(n-10) +16', 'a(n-11)*a(n-12) -4*a(n-11) -4*a(n-12) +16', 'a(n-9)*a(n-12) -4*a(n-9) -4*a(n-12) +16', 'a(n-7)*a(n-12) -4*a(n-7) -4*a(n-12) +16', 'a(n-5)*a(n-12) -4*a(n-5) -4*a(n-12) +16', 'a(n-3)*a(n-12) -4*a(n-3) -4*a(n-12) +16', 'a(n-1)*a(n-12) -4*a(n-1) -4*a(n-12) +16', 'a(n-10)*a(n-11) -4*a(n-10) -4*a(n-11) +16', 'a(n-8)*a(n-11) -4*a(n-8) -4*a(n-11) +16', 'a(n-6)*a(n-11) -4*a(n-6) -4*a(n-11) +16', 'a(n-4)*a(n-11) -4*a(n-4) -4*a(n-11) +16', 'a(n-12)*a(n-13) -4*a(n-12) -4*a(n-13) +16', 'a(n-10)*a(n-13) -4*a(n-10) -4*a(n-13) +16', 'a(n-8)*a(n-13) -4*a(n-8) -4*a(n-13) +16', 'a(n-6)*a(n-13) -4*a(n-6) -4*a(n-13) +16', 'a(n-4)*a(n-13) -4*a(n-4) -4*a(n-13) +16', 'a(n-11)*a(n-12) -4*a(n-11) -4*a(n-12) +16', 'a(n-9)*a(n-12) -4*a(n-9) -4*a(n-12) +16', 'a(n-7)*a(n-12) -4*a(n-7) -4*a(n-12) +16', 'a(n-5)*a(n-12) -4*a(n-5) -4*a(n-12) +16', 'a(n-3)*a(n-12) -4*a(n-3) -4*a(n-12) +16', 'a(n-2) -a(n-6) -2*a(n-10) +2*a(n-14)', 'a(n-13)*a(n-14) -4*a(n-13) -4*a(n-14) +16', 'a(n-11)*a(n-14) -4*a(n-11) -4*a(n-14) +16', 'a(n-9)*a(n-14) -4*a(n-9) -4*a(n-14) +16', 'a(n-7)*a(n-14) -4*a(n-7) -4*a(n-14) +16', 'a(n-5)*a(n-14) -4*a(n-5) -4*a(n-14) +16', 'a(n-12)*a(n-13) -4*a(n-12) -4*a(n-13) +16', 'a(n-10)*a(n-13) -4*a(n-10) -4*a(n-13) +16', 'a(n-8)*a(n-13) -4*a(n-8) -4*a(n-13) +16', 'a(n-6)*a(n-13) -4*a(n-6) -4*a(n-13) +16', 'a(n-3) -a(n-7) -2*a(n-11) +2*a(n-15)', 'a(n-14)*a(n-15) -4*a(n-14) -4*a(n-15) +16', 'a(n-12)*a(n-15) -4*a(n-12) -4*a(n-15) +16', 'a(n-10)*a(n-15) -4*a(n-10) -4*a(n-15) +16', 'a(n-8)*a(n-15) -4*a(n-8) -4*a(n-15) +16', 'a(n-13)*a(n-14) -4*a(n-13) -4*a(n-14) +16', 'a(n-11)*a(n-14) -4*a(n-11) -4*a(n-14) +16', 'a(n-9)*a(n-14) -4*a(n-9) -4*a(n-14) +16', 'a(n-7)*a(n-14) -4*a(n-7) -4*a(n-14) +16', 'a(n-12)*a(n-13) -4*a(n-12) -4*a(n-13) +16', 'a(n) -a(n-16)']
A059139: 
a(n) = a(n-16)
truth: 
None

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

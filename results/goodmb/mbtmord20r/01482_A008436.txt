
orders_used: [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 2, 4, 4, 4, 4, 5, 5, 5, 5, 4, 4, 4, 3, 3, 2, 6, 6, 6, 6, 6, 5, 5, 5, 5, 4, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 8, 8, 8, 8, 8, 6, 6, 6, 5, 9, 9, 9, 9, 6, 6, 5, 9, 10, 10, 10, 6, 10, 10]
dasco's acc_1, acc_10: True, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:1483/10000, seq_id:A008436, order:20 took:
 42.4 seconds, i.e. 0.71 minutes or 0.012 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
eqs_explicit:
['a(n) = 256*a(n-9)']
non_linears:
['n^2*a(n-1) +(-2081/251)*n*a(n-1) +(-24/251)*a(n-1)^2 +(1854/251)*a(n-1)', 'a(n)*a(n-1) +(-21760/251)*n*a(n-1) +(768/251)*a(n-1)^2 +(20992/251)*a(n-1)', 'n*a(n-1)^2 +(11904/251)*n*a(n-1) +(-2939/251)*a(n-1)^2 +(-9216/251)*a(n-1)', 'a(n)*n +(-1360/2259)*n*a(n-1) +(16/753)*a(n-1)^2 -8*a(n) +(1312/2259)*a(n-1)', 'a(n-1)^3 +(1361360/251)*n*a(n-1) +(-112555/251)*a(n-1)^2 +(-1249056/251)*a(n-1)', 'a(n)^2 +(-152320/2259)*n*a(n-1) +(1792/753)*a(n-1)^2 -144*a(n) +(146944/2259)*a(n-1)', 'a(n)*a(n-2)', 'a(n-1)*a(n-2)^2 -144*a(n-1)*a(n-2)', 'a(n-1)^2 +(-7/9)*a(n-1)*a(n-2) -144*a(n-1)', 'n*a(n-1) +(-1/144)*a(n-1)*a(n-2) -9*a(n-1)', 'a(n)*a(n-1) +(16/9)*a(n-1)*a(n-2) -256*a(n-1)', 'a(n)*n +(1/81)*a(n-1)*a(n-2) -8*a(n) +(-16/9)*a(n-1)', 'a(n-2)^3 +(1001/16)*a(n-1)*a(n-2) -257*a(n-2)^2 +256*a(n-2)', 'a(n)^2 +(112/81)*a(n-1)*a(n-2) -144*a(n) +(-1792/9)*a(n-1)', 'n*a(n-2) +(-251/21760)*a(n-1)*a(n-2) +(-3/85)*a(n-2)^2 +(-167/85)*a(n-2)', 'a(n-1)*a(n-3)', 'a(n)*a(n-3)', 'a(n)*a(n-2)', 'a(n-2)*a(n-3)^2 -144*a(n-2)*a(n-3)', 'a(n-2)^2 +(-7/9)*a(n-2)*a(n-3) -144*a(n-2)', 'a(n-1)*a(n-2) +(16/9)*a(n-2)*a(n-3) -256*a(n-2)', 'n*a(n-2) +(-1/144)*a(n-2)*a(n-3) -10*a(n-2)', 'n*a(n-1) +(1/81)*a(n-2)*a(n-3) -9*a(n-1) +(-16/9)*a(n-2)', 'a(n-3)^3 +(1001/16)*a(n-2)*a(n-3) -257*a(n-3)^2 +256*a(n-3)', 'a(n-1)^2 +(112/81)*a(n-2)*a(n-3) -144*a(n-1) +(-1792/9)*a(n-2)', 'a(n-2)*a(n-4)', 'a(n-1)*a(n-4)', 'a(n)*a(n-4)', 'a(n-1)*a(n-3)', 'a(n)*a(n-3)', 'a(n)*a(n-2)', 'a(n-3)*a(n-4)^2 -144*a(n-3)*a(n-4)', 'a(n-3)^2 +(-7/9)*a(n-3)*a(n-4) -144*a(n-3)', 'a(n-2)*a(n-3) +(16/9)*a(n-3)*a(n-4) -256*a(n-3)', 'n*a(n-3) +(-1/144)*a(n-3)*a(n-4) -11*a(n-3)', 'a(n-3)*a(n-5)', 'a(n-2)*a(n-5)', 'a(n-1)*a(n-5)', 'a(n)*a(n-5)', 'a(n-2)*a(n-4)', 'a(n-1)*a(n-4)', 'a(n)*a(n-4)', 'a(n-1)*a(n-3)', 'a(n)*a(n-3)', 'a(n)*a(n-2)', 'a(n-4)*a(n-6)', 'a(n-3)*a(n-6)', 'a(n-2)*a(n-6)', 'a(n-1)*a(n-6)', 'a(n)*a(n-6)', 'a(n-3)*a(n-5)', 'a(n-2)*a(n-5)', 'a(n-1)*a(n-5)', 'a(n)*a(n-5)', 'a(n-2)*a(n-4)', 'a(n-6)*a(n-7)', 'a(n-5)*a(n-7)', 'a(n-4)*a(n-7)', 'a(n-3)*a(n-7)', 'a(n-2)*a(n-7)', 'a(n-1)*a(n-7)', 'a(n-4)*a(n-6)', 'a(n-3)*a(n-6)', 'a(n-2)*a(n-6)', 'a(n-1)*a(n-6)', 'a(n-6)*a(n-8)', 'a(n-5)*a(n-8)', 'a(n-4)*a(n-8)', 'a(n-3)*a(n-8)', 'a(n-2)*a(n-8)', 'a(n-4)*a(n-6)', 'a(n-3)*a(n-6)', 'a(n-2)*a(n-6)', 'a(n-3)*a(n-5)', 'a(n-6)*a(n-9)', 'a(n-5)*a(n-9)', 'a(n-4)*a(n-9)', 'a(n-3)*a(n-9)', 'a(n-4)*a(n-6)', 'a(n-3)*a(n-6)', 'a(n-3)*a(n-5)', 'a(n-9)^2 -a(n-9)', 'a(n-6)*a(n-10)', 'a(n-5)*a(n-10)', 'a(n-4)*a(n-10)', 'a(n-4)*a(n-6)', 'a(n-10)^2 -a(n-10)', 'a(n-1) -256*a(n-10)']
A008436: 
a(n) = 256*a(n-9)
truth: 
None

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

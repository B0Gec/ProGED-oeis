
orders_used: [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
While total time consumed by now, scale:25978/27236, seq_id:A304157, order:20 took:
 45.6 seconds, i.e. 0.76 minutes or 0.013 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
non_linears:
['a(n) -a(n-1) -44', 'a(n-1) -a(n-2) -44', 'a(n) -a(n-2) -88', 'a(n-2) -a(n-3) -44', 'a(n-1) -a(n-3) -88', 'a(n) -a(n-3) -132', 'a(n-3) -a(n-4) -44', 'a(n-2) -a(n-4) -88', 'a(n-1) -a(n-4) -132', 'a(n) -a(n-4) -176', 'a(n-4) -a(n-5) -44', 'a(n-3) -a(n-5) -88', 'a(n-2) -a(n-5) -132', 'a(n-1) -a(n-5) -176', 'a(n) -a(n-5) -220', 'a(n-5) -a(n-6) -44', 'a(n-4) -a(n-6) -88', 'a(n-3) -a(n-6) -132', 'a(n-2) -a(n-6) -176', 'a(n-1) -a(n-6) -220', 'a(n) -a(n-6) -264', 'a(n-6) -a(n-7) -44', 'a(n-5) -a(n-7) -88', 'a(n-4) -a(n-7) -132', 'a(n-3) -a(n-7) -176', 'a(n-2) -a(n-7) -220', 'a(n-1) -a(n-7) -264', 'a(n) -a(n-7) -308', 'a(n-7) -a(n-8) -44', 'a(n-6) -a(n-8) -88', 'a(n-5) -a(n-8) -132', 'a(n-4) -a(n-8) -176', 'a(n-3) -a(n-8) -220', 'a(n-2) -a(n-8) -264', 'a(n-1) -a(n-8) -308', 'a(n) -a(n-8) -352', 'a(n-8) -a(n-9) -44', 'a(n-7) -a(n-9) -88', 'a(n-6) -a(n-9) -132', 'a(n-5) -a(n-9) -176', 'a(n-4) -a(n-9) -220', 'a(n-3) -a(n-9) -264', 'a(n-2) -a(n-9) -308', 'a(n-1) -a(n-9) -352', 'a(n) -a(n-9) -396', 'a(n-9) -a(n-10) -44', 'a(n-8) -a(n-10) -88', 'a(n-7) -a(n-10) -132', 'a(n-6) -a(n-10) -176', 'a(n-5) -a(n-10) -220', 'a(n-4) -a(n-10) -264', 'a(n-3) -a(n-10) -308', 'a(n-2) -a(n-10) -352', 'a(n-1) -a(n-10) -396', 'a(n) -a(n-10) -440', 'a(n-10) -a(n-11) -44', 'a(n-9) -a(n-11) -88', 'a(n-8) -a(n-11) -132', 'a(n-7) -a(n-11) -176', 'a(n-6) -a(n-11) -220', 'a(n-5) -a(n-11) -264', 'a(n-4) -a(n-11) -308', 'a(n-3) -a(n-11) -352', 'a(n-2) -a(n-11) -396', 'a(n-1) -a(n-11) -440', 'a(n-11) -a(n-12) -44', 'a(n-10) -a(n-12) -88', 'a(n-9) -a(n-12) -132', 'a(n-8) -a(n-12) -176', 'a(n-7) -a(n-12) -220', 'a(n-6) -a(n-12) -264', 'a(n-5) -a(n-12) -308', 'a(n-4) -a(n-12) -352', 'a(n-3) -a(n-12) -396', 'a(n-2) -a(n-12) -440', 'a(n-12) -a(n-13) -44', 'a(n-11) -a(n-13) -88', 'a(n-10) -a(n-13) -132', 'a(n-9) -a(n-13) -176', 'a(n-8) -a(n-13) -220', 'a(n-7) -a(n-13) -264', 'a(n-6) -a(n-13) -308', 'a(n-5) -a(n-13) -352', 'a(n-4) -a(n-13) -396', 'a(n-3) -a(n-13) -440', 'a(n-13) -a(n-14) -44', 'a(n-12) -a(n-14) -88', 'a(n-11) -a(n-14) -132', 'a(n-10) -a(n-14) -176', 'a(n-9) -a(n-14) -220', 'a(n-8) -a(n-14) -264', 'a(n-7) -a(n-14) -308', 'a(n-6) -a(n-14) -352', 'a(n-5) -a(n-14) -396', 'a(n-4) -a(n-14) -440', 'a(n-14) -a(n-15) -44', 'a(n-13) -a(n-15) -88', 'a(n-12) -a(n-15) -132', 'a(n-11) -a(n-15) -176', 'a(n-10) -a(n-15) -220', 'a(n-9) -a(n-15) -264', 'a(n-8) -a(n-15) -308', 'a(n-7) -a(n-15) -352', 'a(n-6) -a(n-15) -396', 'a(n-5) -a(n-15) -440', 'a(n-15) -a(n-16) -44', 'a(n-14) -a(n-16) -88', 'a(n-13) -a(n-16) -132', 'a(n-12) -a(n-16) -176', 'a(n-11) -a(n-16) -220', 'a(n-10) -a(n-16) -264', 'a(n-9) -a(n-16) -308', 'a(n-8) -a(n-16) -352', 'a(n-7) -a(n-16) -396', 'a(n-6) -a(n-16) -440', 'a(n-16) -a(n-17) -44', 'a(n-15) -a(n-17) -88', 'a(n-14) -a(n-17) -132', 'a(n-13) -a(n-17) -176', 'a(n-12) -a(n-17) -220', 'a(n-11) -a(n-17) -264', 'a(n-10) -a(n-17) -308', 'a(n-9) -a(n-17) -352', 'a(n-8) -a(n-17) -396', 'a(n-7) -a(n-17) -440', 'a(n-17) -a(n-18) -44', 'a(n-16) -a(n-18) -88', 'a(n-15) -a(n-18) -132', 'a(n-14) -a(n-18) -176', 'a(n-13) -a(n-18) -220', 'a(n-12) -a(n-18) -264', 'a(n-11) -a(n-18) -308', 'a(n-10) -a(n-18) -352', 'a(n-9) -a(n-18) -396', 'a(n-8) -a(n-18) -440', 'a(n-18) -a(n-19) -44', 'a(n-17) -a(n-19) -88', 'a(n-16) -a(n-19) -132', 'a(n-15) -a(n-19) -176', 'a(n-14) -a(n-19) -220', 'a(n-13) -a(n-19) -264', 'a(n-12) -a(n-19) -308', 'a(n-11) -a(n-19) -352', 'a(n-10) -a(n-19) -396', 'a(n-9) -a(n-19) -440', 'a(n-19) -a(n-20) -44', 'a(n-18) -a(n-20) -88', 'a(n-17) -a(n-20) -132', 'a(n-16) -a(n-20) -176', 'a(n-15) -a(n-20) -220', 'a(n-14) -a(n-20) -264', 'a(n-13) -a(n-20) -308', 'a(n-12) -a(n-20) -352', 'a(n-11) -a(n-20) -396', 'a(n-10) -a(n-20) -440']
A304157: 
MB not reconst
truth: 
a(n) = 2*a(n - 1) + -1*a(n - 2),  
a(0) = 24, a(1) = 68

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

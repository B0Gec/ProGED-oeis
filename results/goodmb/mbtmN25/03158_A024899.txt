
orders_used: [16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:3159/10000, seq_id:A024899, order:20 took:
 28.3 seconds, i.e. 0.47 minutes or 0.008 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 16.
eqs_explicit:
['a(n) = -a(n-19)/2 + a(n-18)/2 + 3*a(n-16)/4 + a(n-15)/4 + 105/4']
non_linears:
['a(n-15)*a(n-16) +(-94/5)*a(n-9) +(-64/5)*a(n-10) -3*a(n-11) +(17/5)*a(n-12) +16*a(n-13) +(58/5)*a(n-14) +(-31/5)*a(n-15) +(1/5)*a(n-16) +1154/5', 'a(n-11)*a(n-13) +(-202/5)*a(n-9) +(-82/5)*a(n-10) -11*a(n-11) +(11/5)*a(n-12) +11*a(n-13) +(64/5)*a(n-14) +(-28/5)*a(n-15) +(158/5)*a(n-16) +2617/5', 'a(n-8) +(-2/23)*a(n-9) +(-10/23)*a(n-10) +(-4/23)*a(n-11) +(-25/46)*a(n-12) +(3/46)*a(n-13) +(12/23)*a(n-14) +(-17/23)*a(n-15) +(5/23)*a(n-16) -131/46', 'n +(18/115)*a(n-9) +(-2/115)*a(n-10) +(-2/23)*a(n-11) +(-14/115)*a(n-12) +(-5/23)*a(n-13) +(-16/115)*a(n-14) +(-8/115)*a(n-15) +(-22/115)*a(n-16) -1653/115', 'a(n-12)*a(n-14) +(-814/23)*a(n-9) +(-298/23)*a(n-10) +(-18/23)*a(n-11) +(-85/23)*a(n-12) +(530/23)*a(n-13) +(-38/23)*a(n-14) +(-88/23)*a(n-15) +(494/23)*a(n-16) +9302/23', 'a(n-3) +(-7/115)*a(n-9) +(-12/115)*a(n-10) +(-12/23)*a(n-11) +(-53/230)*a(n-12) +(9/46)*a(n-13) +(19/115)*a(n-14) +(-48/115)*a(n-15) +(-17/115)*a(n-16) -3391/230', 'a(n-13)*a(n-16) +(-438/23)*a(n-9) +(-396/23)*a(n-10) +(-117/23)*a(n-11) +(11/23)*a(n-12) +(225/23)*a(n-13) +(351/23)*a(n-14) +(49/23)*a(n-15) +(37/23)*a(n-16) +7103/23', 'a(n-9)*a(n-13) +(-854/23)*a(n-9) +(-498/23)*a(n-10) +(-167/23)*a(n-11) +(-13/23)*a(n-12) +(77/23)*a(n-13) +(432/23)*a(n-14) +(78/23)*a(n-15) +(456/23)*a(n-16) +12063/23', 'a(n-5) +(-61/115)*a(n-9) +(-6/115)*a(n-10) +(11/46)*a(n-11) +(-199/230)*a(n-12) +(-15/23)*a(n-13) +(-48/115)*a(n-14) +(-24/115)*a(n-15) +(164/115)*a(n-16) -833/230', 'a(n-2) +(98/115)*a(n-9) +(-62/115)*a(n-10) +(-9/46)*a(n-11) +(26/115)*a(n-12) +(-11/46)*a(n-13) +(-36/115)*a(n-14) +(-18/115)*a(n-15) +(-107/115)*a(n-16) -2713/115', 'n +(-1/53)*a(n-11) +(-5/53)*a(n-12) +(-7/53)*a(n-13) +(-8/53)*a(n-14) +(-8/53)*a(n-15) +(-4/53)*a(n-16) +(-2/53)*a(n-17) -740/53', 'a(n-10) +(1/106)*a(n-11) +(5/106)*a(n-12) +(7/106)*a(n-13) +(-45/106)*a(n-14) +(4/53)*a(n-15) +(2/53)*a(n-16) +(-52/53)*a(n-17) -478/53', 'a(n-9) +(-23/53)*a(n-11) +(-9/53)*a(n-12) +(-57/106)*a(n-13) +(3/106)*a(n-14) +(28/53)*a(n-15) +(-39/53)*a(n-16) +(7/53)*a(n-17) -385/106', 'a(n-3) +(-29/53)*a(n-11) +(-25/106)*a(n-12) +(9/53)*a(n-13) +(13/106)*a(n-14) +(-20/53)*a(n-15) +(-10/53)*a(n-16) +(-5/53)*a(n-17) -843/53', 'a(n-8) +(-11/53)*a(n-11) +(-57/106)*a(n-12) +(5/106)*a(n-13) +(18/53)*a(n-14) +(-35/53)*a(n-15) +(9/53)*a(n-16) +(-22/53)*a(n-17) -751/106', 'a(n-6) +(-5/106)*a(n-11) +(14/53)*a(n-12) +(-44/53)*a(n-13) +(-93/106)*a(n-14) +(-20/53)*a(n-15) +(-10/53)*a(n-16) +(48/53)*a(n-17) -891/106', 'a(n-5) +(1/106)*a(n-11) +(-101/106)*a(n-12) +(-99/106)*a(n-13) +(-45/106)*a(n-14) +(4/53)*a(n-15) +(55/53)*a(n-16) +(1/53)*a(n-17) -319/53', 'a(n-4) +(-11/106)*a(n-11) +(-55/106)*a(n-12) +(-12/53)*a(n-13) +(9/53)*a(n-14) +(9/53)*a(n-15) +(-22/53)*a(n-16) +(-11/53)*a(n-17) -1621/106', 'a(n-2) +(19/106)*a(n-11) +(21/53)*a(n-12) +(27/106)*a(n-13) +(-30/53)*a(n-14) +(-30/53)*a(n-15) +(-15/53)*a(n-16) +(-34/53)*a(n-17) -1344/53', 'a(n-1) +(30/53)*a(n-11) +(35/106)*a(n-12) +(-57/106)*a(n-13) +(-25/53)*a(n-14) +(-25/53)*a(n-15) +(-39/53)*a(n-16) +(7/53)*a(n-17) -2717/106', 'a(n-13)*a(n-14) -2*a(n-13) -2*a(n-14) +10*a(n-15) -12*a(n-17) -18*a(n-18) -24', 'n +(-4/47)*a(n-13) +(-6/47)*a(n-14) +(-7/47)*a(n-15) +(-8/47)*a(n-16) +(-4/47)*a(n-17) +(-2/47)*a(n-18) -713/47', 'a(n-11) +(2/47)*a(n-13) +(3/47)*a(n-14) +(-20/47)*a(n-15) +(4/47)*a(n-16) +(2/47)*a(n-17) +(-46/47)*a(n-18) -419/47', 'a(n-10) +(2/47)*a(n-13) +(-41/94)*a(n-14) +(7/94)*a(n-15) +(4/47)*a(n-16) +(-45/47)*a(n-17) +(1/47)*a(n-18) -791/94', 'a(n-9) +(-41/94)*a(n-13) +(9/94)*a(n-14) +(17/47)*a(n-15) +(-41/47)*a(n-16) +(3/47)*a(n-17) +(-22/47)*a(n-18) -881/94', 'a(n-6) +(-45/47)*a(n-13) +(-44/47)*a(n-14) +(-20/47)*a(n-15) +(4/47)*a(n-16) +(49/47)*a(n-17) +(1/47)*a(n-18) -278/47', 'a(n-12) +(23/47)*a(n-13) +(11/47)*a(n-14) +(5/47)*a(n-15) +(-48/47)*a(n-16) +(-24/47)*a(n-17) +(-12/47)*a(n-18) -518/47', 'a(n-2) +(5/94)*a(n-13) +(-63/94)*a(n-14) +(-25/47)*a(n-15) +(5/47)*a(n-16) +(-21/47)*a(n-17) +(13/47)*a(n-18) -1823/94', 'a(n-7) +(27/94)*a(n-13) +(-77/94)*a(n-14) +(-41/47)*a(n-15) +(-20/47)*a(n-16) +(-10/47)*a(n-17) +(42/47)*a(n-18) -839/94', 'a(n-5) +(-22/47)*a(n-13) +(-19/94)*a(n-14) +(17/94)*a(n-15) +(3/47)*a(n-16) +(-22/47)*a(n-17) +(-11/47)*a(n-18) -1545/94', 'n +a(n-16) -2*a(n-19) -22', 'a(n-9) -5*a(n-16) -a(n-17) -a(n-18) +7*a(n-19) +7', 'a(n-11) +(-1/2)*a(n-15) +(-1/2)*a(n-16) -a(n-18) +a(n-19) -11/2', 'a(n-6) +(1/2)*a(n-15) +(13/2)*a(n-16) +a(n-17) -11*a(n-19) -97/2', 'a(n-3) +(-3/4)*a(n-15) +(-5/4)*a(n-16) +(-1/2)*a(n-18) +(3/2)*a(n-19) -63/4', 'a(n) +(-1/4)*a(n-15) +(-3/4)*a(n-16) +(-1/2)*a(n-18) +(1/2)*a(n-19) -105/4']
A024899: 
a(n) = -a(n-19)/2 + a(n-18)/2 + 3*a(n-16)/4 + a(n-15)/4 + 105/4
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    


orders_used: [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
While total time consumed by now, scale:19449/27236, seq_id:A174312, order:20 took:
 51.2 seconds, i.e. 0.85 minutes or 0.014 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
non_linears:
['a(n) -a(n-1) -32', 'a(n-1) -a(n-2) -32', 'a(n) -a(n-2) -64', 'a(n-2) -a(n-3) -32', 'a(n-1) -a(n-3) -64', 'a(n) -a(n-3) -96', 'a(n-3) -a(n-4) -32', 'a(n-2) -a(n-4) -64', 'a(n-1) -a(n-4) -96', 'a(n) -a(n-4) -128', 'a(n-4) -a(n-5) -32', 'a(n-3) -a(n-5) -64', 'a(n-2) -a(n-5) -96', 'a(n-1) -a(n-5) -128', 'a(n) -a(n-5) -160', 'a(n-5) -a(n-6) -32', 'a(n-4) -a(n-6) -64', 'a(n-3) -a(n-6) -96', 'a(n-2) -a(n-6) -128', 'a(n-1) -a(n-6) -160', 'a(n) -a(n-6) -192', 'a(n-6) -a(n-7) -32', 'a(n-5) -a(n-7) -64', 'a(n-4) -a(n-7) -96', 'a(n-3) -a(n-7) -128', 'a(n-2) -a(n-7) -160', 'a(n-1) -a(n-7) -192', 'a(n) -a(n-7) -224', 'a(n-7) -a(n-8) -32', 'a(n-6) -a(n-8) -64', 'a(n-5) -a(n-8) -96', 'a(n-4) -a(n-8) -128', 'a(n-3) -a(n-8) -160', 'a(n-2) -a(n-8) -192', 'a(n-1) -a(n-8) -224', 'a(n) -a(n-8) -256', 'a(n-8) -a(n-9) -32', 'a(n-7) -a(n-9) -64', 'a(n-6) -a(n-9) -96', 'a(n-5) -a(n-9) -128', 'a(n-4) -a(n-9) -160', 'a(n-3) -a(n-9) -192', 'a(n-2) -a(n-9) -224', 'a(n-1) -a(n-9) -256', 'a(n) -a(n-9) -288', 'a(n-9) -a(n-10) -32', 'a(n-8) -a(n-10) -64', 'a(n-7) -a(n-10) -96', 'a(n-6) -a(n-10) -128', 'a(n-5) -a(n-10) -160', 'a(n-4) -a(n-10) -192', 'a(n-3) -a(n-10) -224', 'a(n-2) -a(n-10) -256', 'a(n-1) -a(n-10) -288', 'a(n) -a(n-10) -320', 'a(n-10) -a(n-11) -32', 'a(n-9) -a(n-11) -64', 'a(n-8) -a(n-11) -96', 'a(n-7) -a(n-11) -128', 'a(n-6) -a(n-11) -160', 'a(n-5) -a(n-11) -192', 'a(n-4) -a(n-11) -224', 'a(n-3) -a(n-11) -256', 'a(n-2) -a(n-11) -288', 'a(n-1) -a(n-11) -320', 'a(n-11) -a(n-12) -32', 'a(n-10) -a(n-12) -64', 'a(n-9) -a(n-12) -96', 'a(n-8) -a(n-12) -128', 'a(n-7) -a(n-12) -160', 'a(n-6) -a(n-12) -192', 'a(n-5) -a(n-12) -224', 'a(n-4) -a(n-12) -256', 'a(n-3) -a(n-12) -288', 'a(n-2) -a(n-12) -320', 'a(n-12) -a(n-13) -32', 'a(n-11) -a(n-13) -64', 'a(n-10) -a(n-13) -96', 'a(n-9) -a(n-13) -128', 'a(n-8) -a(n-13) -160', 'a(n-7) -a(n-13) -192', 'a(n-6) -a(n-13) -224', 'a(n-5) -a(n-13) -256', 'a(n-4) -a(n-13) -288', 'a(n-3) -a(n-13) -320', 'a(n-13) -a(n-14) -32', 'a(n-12) -a(n-14) -64', 'a(n-11) -a(n-14) -96', 'a(n-10) -a(n-14) -128', 'a(n-9) -a(n-14) -160', 'a(n-8) -a(n-14) -192', 'a(n-7) -a(n-14) -224', 'a(n-6) -a(n-14) -256', 'a(n-5) -a(n-14) -288', 'a(n-4) -a(n-14) -320', 'a(n-14) -a(n-15) -32', 'a(n-13) -a(n-15) -64', 'a(n-12) -a(n-15) -96', 'a(n-11) -a(n-15) -128', 'a(n-10) -a(n-15) -160', 'a(n-9) -a(n-15) -192', 'a(n-8) -a(n-15) -224', 'a(n-7) -a(n-15) -256', 'a(n-6) -a(n-15) -288', 'a(n-5) -a(n-15) -320', 'a(n-15) -a(n-16) -32', 'a(n-14) -a(n-16) -64', 'a(n-13) -a(n-16) -96', 'a(n-12) -a(n-16) -128', 'a(n-11) -a(n-16) -160', 'a(n-10) -a(n-16) -192', 'a(n-9) -a(n-16) -224', 'a(n-8) -a(n-16) -256', 'a(n-7) -a(n-16) -288', 'a(n-6) -a(n-16) -320', 'a(n-16) -a(n-17) -32', 'a(n-15) -a(n-17) -64', 'a(n-14) -a(n-17) -96', 'a(n-13) -a(n-17) -128', 'a(n-12) -a(n-17) -160', 'a(n-11) -a(n-17) -192', 'a(n-10) -a(n-17) -224', 'a(n-9) -a(n-17) -256', 'a(n-8) -a(n-17) -288', 'a(n-7) -a(n-17) -320', 'a(n-17) -a(n-18) -32', 'a(n-16) -a(n-18) -64', 'a(n-15) -a(n-18) -96', 'a(n-14) -a(n-18) -128', 'a(n-13) -a(n-18) -160', 'a(n-12) -a(n-18) -192', 'a(n-11) -a(n-18) -224', 'a(n-10) -a(n-18) -256', 'a(n-9) -a(n-18) -288', 'a(n-8) -a(n-18) -320', 'a(n-18) -a(n-19) -32', 'a(n-17) -a(n-19) -64', 'a(n-16) -a(n-19) -96', 'a(n-15) -a(n-19) -128', 'a(n-14) -a(n-19) -160', 'a(n-13) -a(n-19) -192', 'a(n-12) -a(n-19) -224', 'a(n-11) -a(n-19) -256', 'a(n-10) -a(n-19) -288', 'a(n-9) -a(n-19) -320', 'a(n-19) -a(n-20) -32', 'a(n-18) -a(n-20) -64', 'a(n-17) -a(n-20) -96', 'a(n-16) -a(n-20) -128', 'a(n-15) -a(n-20) -160', 'a(n-14) -a(n-20) -192', 'a(n-13) -a(n-20) -224', 'a(n-12) -a(n-20) -256', 'a(n-11) -a(n-20) -288', 'a(n-10) -a(n-20) -320']
A174312: 
MB not reconst
truth: 
a(n) = 2*a(n - 1) + -1*a(n - 2),  
a(0) = 0, a(1) = 32

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

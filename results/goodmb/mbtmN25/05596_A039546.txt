
orders_used: [14, 15, 15, 15, 16, 15, 16, 16, 16, 17, 16, 17, 17, 17, 17, 17, 18, 17, 18, 17, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 19, 19, 19, 19, 19, 19, 20, 19, 20, 19, 20, 19, 20, 20, 20, 20]
dasco's acc_1, acc_10: True, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:5597/10000, seq_id:A039546, order:20 took:
 43.6 seconds, i.e. 0.73 minutes or 0.012 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 14.
eqs_explicit:
['a(n) = a(n-20)/144 + a(n-19)/144 + 46591/48']
non_linears:
['n +(-1/144)*a(n-13) +(-1/144)*a(n-14) -607/48', 'a(n-13) -a(n-15) -144', 'n +(-1/144)*a(n-14) +(-1/144)*a(n-15) -655/48', 'a(n-3) +(1/6)*a(n-9) +(-7/144)*a(n-10) +(-1175/3456)*a(n-11) +(-2935/82944)*a(n-12) +(55/82944)*a(n-14) +(311/3456)*a(n-15) -467561/576', 'a(n-14) -a(n-16) -144', 'a(n-13) -a(n-15) -144', 'n +(-1/144)*a(n-15) +(-1/144)*a(n-16) -703/48', 'a(n-4) +(1/6)*a(n-10) +(-7/144)*a(n-11) +(-1175/3456)*a(n-12) +(-5/144)*a(n-15) +(311/3456)*a(n-16) -4901/6', 'a(n-3) +(1/6)*a(n-9) +(-7/144)*a(n-10) +(-1175/3456)*a(n-11) +(-2935/82944)*a(n-12) +(311/3456)*a(n-15) +(55/82944)*a(n-16) -233753/288', 'a(n-15) -a(n-17) -144', 'a(n-14) -a(n-16) -144', 'a(n-13) -a(n-17) -288', 'n +(-1/144)*a(n-16) +(-1/144)*a(n-17) -751/48', 'a(n-5) +(1/6)*a(n-11) +(-7/144)*a(n-12) +(-5/144)*a(n-16) +(-1/4)*a(n-17) -3659/4', 'a(n-4) +(1/6)*a(n-10) +(-7/144)*a(n-11) +(-1175/3456)*a(n-12) +(311/3456)*a(n-16) +(-5/144)*a(n-17) -4931/6', 'a(n-3) +(1/6)*a(n-9) +(-7/144)*a(n-10) +(-1175/3456)*a(n-11) +(-2935/82944)*a(n-12) +(55/82944)*a(n-16) +(311/3456)*a(n-17) -230021/288', 'a(n-16) -a(n-18) -144', 'a(n-15) -a(n-17) -144', 'a(n-14) -a(n-18) -288', 'a(n-13) -a(n-17) -288', 'n +(-1/144)*a(n-17) +(-1/144)*a(n-18) -799/48', 'a(n-6) +(1/6)*a(n-12) +(-1/12)*a(n-17) +(-1/4)*a(n-18) -3715/4', 'a(n-5) +(1/6)*a(n-11) +(-7/144)*a(n-12) +(-1/4)*a(n-17) +(-5/144)*a(n-18) -3679/4', 'a(n-4) +(1/6)*a(n-10) +(-7/144)*a(n-11) +(-1175/3456)*a(n-12) +(-5/144)*a(n-17) +(311/3456)*a(n-18) -6471/8', 'a(n-2) +(-7/24)*a(n-10) +(-13/192)*a(n-11) +(467/4608)*a(n-12) +(49/2496)*a(n-17) +(-695/59904)*a(n-18) -310209/416', 'a(n-11)*a(n-18) +288*a(n-9) +204*a(n-10) +(-563/2)*a(n-11) +(1583/48)*a(n-12) +(-956/13)*a(n-17) +(-587147/624)*a(n-18) -4045437/26', 'a(n-17) -a(n-19) -144', 'a(n-16) -a(n-18) -144', 'a(n-15) -a(n-19) -288', 'a(n-14) -a(n-18) -288', 'a(n-13) -a(n-19) -432', 'a(n-7) +(-1/12)*a(n-18) +(-1/12)*a(n-19) -3427/4', 'n +(-1/144)*a(n-18) +(-1/144)*a(n-19) -847/48', 'a(n-6) +(1/6)*a(n-12) +(-1/4)*a(n-18) +(-1/12)*a(n-19) -3763/4', 'a(n-5) +(1/6)*a(n-11) +(-7/144)*a(n-12) +(-5/144)*a(n-18) +(-1/4)*a(n-19) -3823/4', 'a(n-3) +(-7/24)*a(n-11) +(-13/192)*a(n-12) +(49/2496)*a(n-18) +(7/78)*a(n-19) -72999/104', 'a(n-18) -a(n-20) -144', 'a(n-17) -a(n-19) -144', 'a(n-16) -a(n-20) -288', 'a(n-15) -a(n-19) -288', 'a(n-14) -a(n-20) -432', 'a(n-13) -a(n-19) -432', 'a(n-8) +(-1/12)*a(n-19) +(-1/12)*a(n-20) -3427/4', 'a(n-7) +(-1/12)*a(n-19) +(-1/12)*a(n-20) -3475/4', 'n +(-1/144)*a(n-19) +(-1/144)*a(n-20) -895/48', 'a(n) +(-1/144)*a(n-19) +(-1/144)*a(n-20) -46591/48']
A039546: 
a(n) = a(n-20)/144 + a(n-19)/144 + 46591/48
truth: 
None

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

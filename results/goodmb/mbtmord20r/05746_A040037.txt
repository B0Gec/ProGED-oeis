
orders_used: [1, 2, 2, 1, 3, 3, 3, 2, 2, 1, 4, 4, 4, 3, 3, 3, 2, 2, 1, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 6, 6, 6, 6, 6, 5, 5, 5, 5, 4, 7, 7, 7, 7, 7, 6, 6, 6, 6, 5, 8, 8, 8, 8, 7, 7, 7, 7, 9, 9, 9, 8, 8, 10, 10, 11, 11, 11, 11, 12, 12, 12]
dasco's acc_1, acc_10: True, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:5747/10000, seq_id:A040037, order:20 took:
 44.9 seconds, i.e. 0.75 minutes or 0.012 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
eqs_explicit:
['a(n) = a(n-12)/5 + 4/5']
non_linears:
['a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n)*a(n-2) -a(n) -a(n-2) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-2)*a(n-3) -a(n-2) -a(n-3) +1', 'a(n-1)*a(n-3) -a(n-1) -a(n-3) +1', 'a(n)*a(n-3) -a(n) -a(n-3) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n)*a(n-2) -a(n) -a(n-2) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n-2)*a(n-4) -a(n-2) -a(n-4) +1', 'a(n-1)*a(n-4) -a(n-1) -a(n-4) +1', 'a(n-2)*a(n-3) -a(n-2) -a(n-3) +1', 'a(n-1)*a(n-3) -a(n-1) -a(n-3) +1', 'a(n)*a(n-3) -a(n) -a(n-3) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n)*a(n-2) -a(n) -a(n-2) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-4)*a(n-5) -a(n-4) -a(n-5) +1', 'a(n-3)*a(n-5) -a(n-3) -a(n-5) +1', 'a(n-2)*a(n-5) -a(n-2) -a(n-5) +1', 'a(n)*a(n-5) -a(n) -a(n-5) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n-2)*a(n-4) -a(n-2) -a(n-4) +1', 'a(n-1)*a(n-4) -a(n-1) -a(n-4) +1', 'a(n-2)*a(n-3) -a(n-2) -a(n-3) +1', 'a(n-1)*a(n-3) -a(n-1) -a(n-3) +1', 'a(n)*a(n-3) -a(n) -a(n-3) +1', 'a(n-5)*a(n-6) -a(n-5) -a(n-6) +1', 'a(n-4)*a(n-6) -a(n-4) -a(n-6) +1', 'a(n-3)*a(n-6) -a(n-3) -a(n-6) +1', 'a(n-1)*a(n-6) -a(n-1) -a(n-6) +1', 'a(n)*a(n-6) -a(n) -a(n-6) +1', 'a(n-4)*a(n-5) -a(n-4) -a(n-5) +1', 'a(n-3)*a(n-5) -a(n-3) -a(n-5) +1', 'a(n-2)*a(n-5) -a(n-2) -a(n-5) +1', 'a(n)*a(n-5) -a(n) -a(n-5) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n-6)*a(n-7) -a(n-6) -a(n-7) +1', 'a(n-5)*a(n-7) -a(n-5) -a(n-7) +1', 'a(n-4)*a(n-7) -a(n-4) -a(n-7) +1', 'a(n-2)*a(n-7) -a(n-2) -a(n-7) +1', 'a(n-1)*a(n-7) -a(n-1) -a(n-7) +1', 'a(n-5)*a(n-6) -a(n-5) -a(n-6) +1', 'a(n-4)*a(n-6) -a(n-4) -a(n-6) +1', 'a(n-3)*a(n-6) -a(n-3) -a(n-6) +1', 'a(n-1)*a(n-6) -a(n-1) -a(n-6) +1', 'a(n-4)*a(n-5) -a(n-4) -a(n-5) +1', 'a(n-7)*a(n-8) -a(n-7) -a(n-8) +1', 'a(n-6)*a(n-8) -a(n-6) -a(n-8) +1', 'a(n-5)*a(n-8) -a(n-5) -a(n-8) +1', 'a(n-2)*a(n-8) -a(n-2) -a(n-8) +1', 'a(n-6)*a(n-7) -a(n-6) -a(n-7) +1', 'a(n-5)*a(n-7) -a(n-5) -a(n-7) +1', 'a(n-4)*a(n-7) -a(n-4) -a(n-7) +1', 'a(n-2)*a(n-7) -a(n-2) -a(n-7) +1', 'a(n-8)*a(n-9) -a(n-8) -a(n-9) +1', 'a(n-7)*a(n-9) -a(n-7) -a(n-9) +1', 'a(n-6)*a(n-9) -a(n-6) -a(n-9) +1', 'a(n-7)*a(n-8) -a(n-7) -a(n-8) +1', 'a(n-6)*a(n-8) -a(n-6) -a(n-8) +1', 'a(n-9)*a(n-10) -a(n-9) -a(n-10) +1', 'a(n-8)*a(n-10) -a(n-8) -a(n-10) +1', 'a(n-11)^2 -7*a(n-11) +6', 'a(n-7) +(-1/5)*a(n-11) -4/5', 'a(n-3) +(-11/5)*a(n-11) +6/5', 'a(n-10)*a(n-11) -a(n-10) -a(n-11) +1', 'a(n-12)^2 -7*a(n-12) +6', 'a(n-8) +(-1/5)*a(n-12) -4/5', 'a(n) +(-1/5)*a(n-12) -4/5']
A040037: 
a(n) = a(n-12)/5 + 4/5
truth: 
None

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

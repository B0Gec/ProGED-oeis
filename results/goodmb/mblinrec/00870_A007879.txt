
orders_used: [1, 2, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 8, 1, 3, 9, 8, 3, 2, 8, 10, 3, 7, 9, 8, 2, 6, 8, 10, 1, 3, 7, 9, 2, 6, 8, 10, 12, 3, 5, 7, 9, 2, 4, 6, 8, 10, 12, 1, 3, 5, 2, 4, 6, 8, 10, 12, 14, 3, 5, 7, 2, 4, 6, 8, 10, 12, 14, 1, 3, 5, 2, 4, 6, 8, 10, 12, 14, 16, 3, 5, 2, 4, 6, 8, 10, 12, 14, 16, 1, 3, 2, 4, 6, 8, 10, 12, 14, 16, 18, 3, 2, 4, 6, 8, 10, 12, 14, 16, 18, 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20]
While total time consumed by now, scale:871/27236, seq_id:A007879, order:20 took:
 47.6 seconds, i.e. 0.79 minutes or 0.013 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1
n_more_terms: 10

by degree: unknown_mb and order: 1.
non_linears:
['a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-2)*a(n-1) -a(n-2) -a(n-1) +1', 'a(n-2)*a(n-1) -a(n-2) -a(n-1) +1', 'a(n-3)*a(n-2) -a(n-3) -a(n-2) +1', 'a(n-2)*a(n-1) -a(n-2) -a(n-1) +1', 'a(n-3)*a(n-2) -a(n-3) -a(n-2) +1', 'a(n-2)*a(n-1) -a(n-2) -a(n-1) +1', 'a(n-3)*a(n-2) -a(n-3) -a(n-2) +1', 'a(n-2)*a(n-1) -a(n-2) -a(n-1) +1', 'a(n-3)*a(n-2) -a(n-3) -a(n-2) +1', 'a(n-2)*a(n-1) -a(n-2) -a(n-1) +1', 'a(n-3)*a(n-2) -a(n-3) -a(n-2) +1', 'a(n-2)*a(n-1) -a(n-2) -a(n-1) +1', 'a(n-3)*a(n-2) -a(n-3) -a(n-2) +1', 'a(n-2)*a(n-1) -a(n-2) -a(n-1) +1', 'a(n-8)*a(n-1) -a(n-8) -a(n-1) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-3)*a(n-2) -a(n-3) -a(n-2) +1', 'a(n-9)*a(n-2) -a(n-9) -a(n-2) +1', 'a(n-8)*a(n-3) -a(n-8) -a(n-3) +1', 'a(n)*a(n-3) -a(n) -a(n-3) +1', 'a(n-2)*a(n-1) -a(n-2) -a(n-1) +1', 'a(n-8)*a(n-1) -a(n-8) -a(n-1) +1', 'a(n-10)*a(n-1) -a(n-10) -a(n-1) +1', 'a(n-3)*a(n-2) -a(n-3) -a(n-2) +1', 'a(n-7)*a(n-2) -a(n-7) -a(n-2) +1', 'a(n-9)*a(n-2) -a(n-9) -a(n-2) +1', 'a(n-8)*a(n-3) -a(n-8) -a(n-3) +1', 'a(n-2)*a(n-1) -a(n-2) -a(n-1) +1', 'a(n-6)*a(n-1) -a(n-6) -a(n-1) +1', 'a(n-8)*a(n-1) -a(n-8) -a(n-1) +1', 'a(n-10)*a(n-1) -a(n-10) -a(n-1) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-3)*a(n-2) -a(n-3) -a(n-2) +1', 'a(n-7)*a(n-2) -a(n-7) -a(n-2) +1', 'a(n-9)*a(n-2) -a(n-9) -a(n-2) +1', 'a(n-2)*a(n-1) -a(n-2) -a(n-1) +1', 'a(n-6)*a(n-1) -a(n-6) -a(n-1) +1', 'a(n-8)*a(n-1) -a(n-8) -a(n-1) +1', 'a(n-10)*a(n-1) -a(n-10) -a(n-1) +1', 'a(n-12)*a(n-1) -a(n-12) -a(n-1) +1', 'a(n-3)*a(n-2) -a(n-3) -a(n-2) +1', 'a(n-5)*a(n-2) -a(n-5) -a(n-2) +1', 'a(n-7)*a(n-2) -a(n-7) -a(n-2) +1', 'a(n-9)*a(n-2) -a(n-9) -a(n-2) +1', 'a(n-2)*a(n-1) -a(n-2) -a(n-1) +1', 'a(n-4)*a(n-1) -a(n-4) -a(n-1) +1', 'a(n-6)*a(n-1) -a(n-6) -a(n-1) +1', 'a(n-8)*a(n-1) -a(n-8) -a(n-1) +1', 'a(n-10)*a(n-1) -a(n-10) -a(n-1) +1', 'a(n-12)*a(n-1) -a(n-12) -a(n-1) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-3)*a(n-2) -a(n-3) -a(n-2) +1', 'a(n-5)*a(n-2) -a(n-5) -a(n-2) +1', 'a(n-2)*a(n-1) -a(n-2) -a(n-1) +1', 'a(n-4)*a(n-1) -a(n-4) -a(n-1) +1', 'a(n-6)*a(n-1) -a(n-6) -a(n-1) +1', 'a(n-8)*a(n-1) -a(n-8) -a(n-1) +1', 'a(n-10)*a(n-1) -a(n-10) -a(n-1) +1', 'a(n-12)*a(n-1) -a(n-12) -a(n-1) +1', 'a(n-14)*a(n-1) -a(n-14) -a(n-1) +1', 'a(n-3)*a(n-2) -a(n-3) -a(n-2) +1', 'a(n-5)*a(n-2) -a(n-5) -a(n-2) +1', 'a(n-7)*a(n-2) -a(n-7) -a(n-2) +1', 'a(n-2)*a(n-1) -a(n-2) -a(n-1) +1', 'a(n-4)*a(n-1) -a(n-4) -a(n-1) +1', 'a(n-6)*a(n-1) -a(n-6) -a(n-1) +1', 'a(n-8)*a(n-1) -a(n-8) -a(n-1) +1', 'a(n-10)*a(n-1) -a(n-10) -a(n-1) +1', 'a(n-12)*a(n-1) -a(n-12) -a(n-1) +1', 'a(n-14)*a(n-1) -a(n-14) -a(n-1) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-3)*a(n-2) -a(n-3) -a(n-2) +1', 'a(n-5)*a(n-2) -a(n-5) -a(n-2) +1', 'a(n-2)*a(n-1) -a(n-2) -a(n-1) +1', 'a(n-4)*a(n-1) -a(n-4) -a(n-1) +1', 'a(n-6)*a(n-1) -a(n-6) -a(n-1) +1', 'a(n-8)*a(n-1) -a(n-8) -a(n-1) +1', 'a(n-10)*a(n-1) -a(n-10) -a(n-1) +1', 'a(n-12)*a(n-1) -a(n-12) -a(n-1) +1', 'a(n-14)*a(n-1) -a(n-14) -a(n-1) +1', 'a(n-16)*a(n-1) -a(n-16) -a(n-1) +1', 'a(n-3)*a(n-2) -a(n-3) -a(n-2) +1', 'a(n-5)*a(n-2) -a(n-5) -a(n-2) +1', 'a(n-2)*a(n-1) -a(n-2) -a(n-1) +1', 'a(n-4)*a(n-1) -a(n-4) -a(n-1) +1', 'a(n-6)*a(n-1) -a(n-6) -a(n-1) +1', 'a(n-8)*a(n-1) -a(n-8) -a(n-1) +1', 'a(n-10)*a(n-1) -a(n-10) -a(n-1) +1', 'a(n-12)*a(n-1) -a(n-12) -a(n-1) +1', 'a(n-14)*a(n-1) -a(n-14) -a(n-1) +1', 'a(n-16)*a(n-1) -a(n-16) -a(n-1) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-3)*a(n-2) -a(n-3) -a(n-2) +1', 'a(n-2)*a(n-1) -a(n-2) -a(n-1) +1', 'a(n-4)*a(n-1) -a(n-4) -a(n-1) +1', 'a(n-6)*a(n-1) -a(n-6) -a(n-1) +1', 'a(n-8)*a(n-1) -a(n-8) -a(n-1) +1', 'a(n-10)*a(n-1) -a(n-10) -a(n-1) +1', 'a(n-12)*a(n-1) -a(n-12) -a(n-1) +1', 'a(n-14)*a(n-1) -a(n-14) -a(n-1) +1', 'a(n-16)*a(n-1) -a(n-16) -a(n-1) +1', 'a(n-18)*a(n-1) -a(n-18) -a(n-1) +1', 'a(n-3)*a(n-2) -a(n-3) -a(n-2) +1', 'a(n-2)*a(n-1) -a(n-2) -a(n-1) +1', 'a(n-4)*a(n-1) -a(n-4) -a(n-1) +1', 'a(n-6)*a(n-1) -a(n-6) -a(n-1) +1', 'a(n-8)*a(n-1) -a(n-8) -a(n-1) +1', 'a(n-10)*a(n-1) -a(n-10) -a(n-1) +1', 'a(n-12)*a(n-1) -a(n-12) -a(n-1) +1', 'a(n-14)*a(n-1) -a(n-14) -a(n-1) +1', 'a(n-16)*a(n-1) -a(n-16) -a(n-1) +1', 'a(n-18)*a(n-1) -a(n-18) -a(n-1) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-2)*a(n-1) -a(n-2) -a(n-1) +1', 'a(n-4)*a(n-1) -a(n-4) -a(n-1) +1', 'a(n-6)*a(n-1) -a(n-6) -a(n-1) +1', 'a(n-8)*a(n-1) -a(n-8) -a(n-1) +1', 'a(n-10)*a(n-1) -a(n-10) -a(n-1) +1', 'a(n-12)*a(n-1) -a(n-12) -a(n-1) +1', 'a(n-14)*a(n-1) -a(n-14) -a(n-1) +1', 'a(n-16)*a(n-1) -a(n-16) -a(n-1) +1', 'a(n-18)*a(n-1) -a(n-18) -a(n-1) +1', 'a(n-20)*a(n-1) -a(n-20) -a(n-1) +1']
A007879: 
MB not reconst
truth: 
a(n) = 0*a(n - 1) + 0*a(n - 2) + 0*a(n - 3) + 0*a(n - 4) + 0*a(n - 5) + 0*a(n - 6) + 0*a(n - 7) + 0*a(n - 8) + 0*a(n - 9) + 0*a(n - 10) + 0*a(n - 11) + 0*a(n - 12) + 0*a(n - 13) + 0*a(n - 14) + 0*a(n - 15) + 0*a(n - 16) + 0*a(n - 17) + 0*a(n - 18) + 0*a(n - 19) + 0*a(n - 20) + 0*a(n - 21) + 0*a(n - 22) + 0*a(n - 23) + 1*a(n - 24),  
a(0) = 1, a(1) = 1, a(2) = 1, a(3) = 2, a(4) = 1, a(5) = 3, a(6) = 1, a(7) = 4, a(8) = 1, a(9) = 5, a(10) = 1, a(11) = 6, a(12) = 1, a(13) = 7, a(14) = 1, a(15) = 8, a(16) = 1, a(17) = 9, a(18) = 1, a(19) = 10, a(20) = 1, a(21) = 11, a(22) = 1, a(23) = 12

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

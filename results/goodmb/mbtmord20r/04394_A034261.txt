
orders_used: [3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:4395/10000, seq_id:A034261, order:20 took:
 26.8 seconds, i.e. 0.45 minutes or 0.007 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 3.
eqs_explicit:
['a(n) = a(n-10) + 4*a(n-9) + 5*a(n-8) + 2*a(n-7) - 5']
non_linears:
['a(n-2)*a(n-3)^2 +(792/355)*a(n-2)^2 +(-80/71)*a(n)*a(n-3) +(160/71)*n*a(n-3) +(-1368/355)*a(n-1)*a(n-3) -9*a(n-2)*a(n-3) +(-160/71)*a(n-3)^2 +(-792/355)*a(n-2) +(-632/355)*a(n-3)', 'a(n-2)^2*a(n-3) +(437/355)*a(n-2)^2 +(-80/71)*a(n)*a(n-3) +(160/71)*n*a(n-3) +(-1368/355)*a(n-1)*a(n-3) -9*a(n-2)*a(n-3) +(-160/71)*a(n-3)^2 +(-437/355)*a(n-2) +(-632/355)*a(n-3)', 'a(n-1)*a(n-3)^2 +(-132/355)*a(n-2)^2 +(40/213)*a(n)*a(n-3) +(-80/213)*n*a(n-3) +(-127/355)*a(n-1)*a(n-3) +(4/3)*a(n-2)*a(n-3) +(-133/213)*a(n-3)^2 +(132/355)*a(n-2) +(1381/1065)*a(n-3)', 'a(n-2)^3 +(-2658/355)*a(n-2)^2 +(-420/71)*a(n)*a(n-3) +(840/71)*n*a(n-3) +(-1218/355)*a(n-1)*a(n-3) -6*a(n-2)*a(n-3) +(-840/71)*a(n-3)^2 +(2303/355)*a(n-2) +(-9282/355)*a(n-3)', 'a(n-7)*a(n-8) +(-492/983)*a(n-3) +(-84/983)*a(n-4) +(-537/983)*a(n-5) +(585/983)*a(n-6) +(-186/983)*a(n-7) +(543/983)*a(n-8) +975/983', 'a(n-6)*a(n-8) +(164/983)*a(n-3) +(28/983)*a(n-4) +(179/983)*a(n-5) +(-195/983)*a(n-6) +(62/983)*a(n-7) +(-1164/983)*a(n-8) -325/983', 'a(n-6)*a(n-7) +(328/983)*a(n-3) +(56/983)*a(n-4) +(358/983)*a(n-5) +(-1373/983)*a(n-6) +(-859/983)*a(n-7) +(-362/983)*a(n-8) +333/983', 'n +(205/983)*a(n-3) +(35/983)*a(n-4) +(-22/983)*a(n-5) +(-981/983)*a(n-6) +(-1397/983)*a(n-7) +(-1455/983)*a(n-8) -7533/983', 'a(n-8)^2 +(66/983)*a(n-3) +(-708/983)*a(n-4) +(108/983)*a(n-5) +(-546/983)*a(n-6) +(960/983)*a(n-7) +(-1883/983)*a(n-8) +1056/983', 'a(n-1) +(409/983)*a(n-3) +(-98/983)*a(n-4) +(-2101/983)*a(n-5) +(191/983)*a(n-6) +(-217/983)*a(n-7) +(2108/983)*a(n-8) -2303/983', 'a(n-5)*a(n-8) +(394/983)*a(n-3) +(-652/983)*a(n-4) +(466/983)*a(n-5) +(-936/983)*a(n-6) +(1084/983)*a(n-7) +(-4211/983)*a(n-8) +406/983', 'a(n-3)*a(n-8) +(-853/983)*a(n-3) +(214/983)*a(n-4) +(-949/983)*a(n-5) +(1248/983)*a(n-6) +(-790/983)*a(n-7) +(372/983)*a(n-8) +1097/983', 'a(n-4)*a(n-6) +(424/983)*a(n-3) +(-527/983)*a(n-4) +(1230/983)*a(n-5) +(-1631/983)*a(n-6) +(448/983)*a(n-7) +(-2386/983)*a(n-8) -97/983', 'a(n-5)*a(n-7) +(-776/983)*a(n-3) +(-612/983)*a(n-4) +(-1806/983)*a(n-5) +(611/983)*a(n-6) +(330/983)*a(n-7) +(3254/983)*a(n-8) +2329/983', 'a(n-7)*a(n-9) +(-3/25)*a(n-5) +(-6/25)*a(n-6) +(-4/25)*a(n-7) +(8/25)*a(n-8) +(-2/5)*a(n-9) +7/25', 'a(n-6)*a(n-7) +(4/25)*a(n-5) +(-17/25)*a(n-6) +(-3/25)*a(n-7) +(6/25)*a(n-8) +(-4/5)*a(n-9) -1/25', 'a(n-7)*a(n-8) +(-6/25)*a(n-5) +(-12/25)*a(n-6) +(-33/25)*a(n-7) +(-9/25)*a(n-8) +(6/5)*a(n-9) +39/25', 'a(n-6)*a(n-8) +(2/25)*a(n-5) +(4/25)*a(n-6) +(11/25)*a(n-7) +(-22/25)*a(n-8) +(-2/5)*a(n-9) -13/25', 'n +(-3/20)*a(n-5) +(-11/20)*a(n-6) +(-19/20)*a(n-7) +(-11/10)*a(n-8) +(-1/2)*a(n-9) -79/10', 'a(n-9)^2 +(-39/50)*a(n-5) +(-3/50)*a(n-6) +(-27/50)*a(n-7) +(27/25)*a(n-8) +(-8/5)*a(n-9) +33/25', 'a(n-8)*a(n-9) +(9/25)*a(n-5) +(18/25)*a(n-6) +(12/25)*a(n-7) +(-24/25)*a(n-8) +(-9/5)*a(n-9) -21/25', 'a(n-5)*a(n-7) +(-23/25)*a(n-5) +(4/25)*a(n-6) +(-39/25)*a(n-7) +(28/25)*a(n-8) +(-2/5)*a(n-9) +37/25', 'a(n-1) +(-56/25)*a(n-5) +(38/25)*a(n-6) +(17/25)*a(n-7) +(66/25)*a(n-8) +(-9/5)*a(n-9) -86/25', 'a(n-6)*a(n-9) +(-51/50)*a(n-5) +(-27/50)*a(n-6) +(-43/50)*a(n-7) +(43/25)*a(n-8) +(-12/5)*a(n-9) +47/25', 'a(n-10)^2 -a(n-10)', 'a(n) -2*a(n-7) -5*a(n-8) -4*a(n-9) -a(n-10) +5']
A034261: 
a(n) = a(n-10) + 4*a(n-9) + 5*a(n-8) + 2*a(n-7) - 5
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    


orders_used: [14, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 17, 18, 17, 18, 18, 18, 18, 18, 18, 19, 19, 18, 17, 19, 19, 19, 20, 20, 20, 19, 20, 20, 20, 20, 20, 20]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:41/10000, seq_id:A000091, order:20 took:
 33.3 seconds, i.e. 0.55 minutes or 0.009 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 14.
eqs_explicit:
[]
non_linears:
['a(n-5)*a(n-7) +(-8/5)*a(n-5) +(-8/5)*a(n-6) +(-12/5)*a(n-7) +(-4/5)*a(n-9) +(-8/5)*a(n-10) +(4/5)*a(n-11) +(-8/5)*a(n-13) +(8/5)*a(n-14) +8', 'a(n-5) +3*a(n-9) +2*a(n-12) +a(n-13) +a(n-14) -a(n-15) +2*a(n-16) -14', 'a(n-8) +(6/101)*a(n-9) +(-19/101)*a(n-10) +(99/101)*a(n-11) +(56/101)*a(n-12) +(18/101)*a(n-13) +(-1/101)*a(n-14) +(83/101)*a(n-15) +(22/101)*a(n-16) -592/101', 'a(n-12)^2 +(24/101)*a(n-9) +(-76/101)*a(n-10) +(-8/101)*a(n-11) +(-382/101)*a(n-12) +(72/101)*a(n-13) +(-4/101)*a(n-14) +(-72/101)*a(n-15) +(88/101)*a(n-16) +56/101', 'a(n-2) +(-26/101)*a(n-9) +(116/101)*a(n-10) +(-25/101)*a(n-11) +(-7/101)*a(n-12) +(124/101)*a(n-13) +(38/101)*a(n-14) +(-23/101)*a(n-15) +(-28/101)*a(n-16) -330/101', 'a(n-9)*a(n-16) +(-212/101)*a(n-9) +(-2/101)*a(n-10) +(-64/101)*a(n-11) +(-26/101)*a(n-12) +(-30/101)*a(n-13) +(-32/101)*a(n-14) +(30/101)*a(n-15) +(-306/101)*a(n-16) +852/101', 'a(n-10)^2 +(-28/101)*a(n-9) +(-450/101)*a(n-10) +(144/101)*a(n-11) +(8/101)*a(n-12) +(-84/101)*a(n-13) +(72/101)*a(n-14) +(84/101)*a(n-15) +(32/101)*a(n-16) -200/101', 'a(n-15)^2 +(20/101)*a(n-9) +(4/101)*a(n-10) +(128/101)*a(n-11) +(52/101)*a(n-12) +(60/101)*a(n-13) +(64/101)*a(n-14) +(-262/101)*a(n-15) +(208/101)*a(n-16) -896/101', 'a(n-9)*a(n-14) +(-32/101)*a(n-9) +(-168/101)*a(n-10) +(78/101)*a(n-11) +(38/101)*a(n-12) +(-96/101)*a(n-13) +(-62/101)*a(n-14) +(-106/101)*a(n-15) +(152/101)*a(n-16) +60/101', 'a(n-9)*a(n-10) +(-140/101)*a(n-9) +(-28/101)*a(n-10) +(-88/101)*a(n-11) +(40/101)*a(n-12) +(-16/101)*a(n-13) +(-44/101)*a(n-14) +(16/101)*a(n-15) +(-244/101)*a(n-16) +616/101', 'a(n-13)*a(n-17) -2*a(n-13)', 'a(n-15)*a(n-17) -2*a(n-15) -2*a(n-17) +4', 'a(n-2) +(-97/139)*a(n-11) +(1/139)*a(n-12) +(52/139)*a(n-13) +(-74/139)*a(n-14) +(-103/139)*a(n-15) +(6/139)*a(n-16) +(-76/139)*a(n-17) +330/139', 'a(n-14)*a(n-16) +(-92/139)*a(n-11) +(64/139)*a(n-12) +(-8/139)*a(n-13) +(-288/139)*a(n-14) +(80/139)*a(n-15) +(-172/139)*a(n-16) +(140/139)*a(n-17) -8/139', 'a(n-9) +(-29/139)*a(n-11) +(135/139)*a(n-12) +(70/139)*a(n-13) +(18/139)*a(n-14) +(-5/139)*a(n-15) +(115/139)*a(n-16) +(26/139)*a(n-17) -764/139', 'a(n-12)*a(n-13) +(-90/139)*a(n-11) +(-22/139)*a(n-12) +(-310/139)*a(n-13) +(-40/139)*a(n-14) +(42/139)*a(n-15) +(-132/139)*a(n-16) +(4/139)*a(n-17) +524/139', 'a(n-10) +(48/139)*a(n-11) +(21/139)*a(n-12) +(119/139)*a(n-13) +(114/139)*a(n-14) +(61/139)*a(n-15) +(-13/139)*a(n-16) +(72/139)*a(n-17) -854/139', 'a(n-8) +(147/139)*a(n-11) +(73/139)*a(n-12) +(43/139)*a(n-13) +(19/139)*a(n-14) +(126/139)*a(n-15) +(21/139)*a(n-16) +(12/139)*a(n-17) -930/139', 'a(n-5) +(87/139)*a(n-11) +(-127/139)*a(n-12) +(-71/139)*a(n-13) +(85/139)*a(n-14) +(-124/139)*a(n-15) +(-67/139)*a(n-16) +(-78/139)*a(n-17) +346/139', 'a(n-4) +(-255/139)*a(n-11) +(-16/139)*a(n-12) +(2/139)*a(n-13) +(-206/139)*a(n-14) +(-20/139)*a(n-15) +(43/139)*a(n-16) +(104/139)*a(n-17) +280/139', 'a(n-14)*a(n-18) -2*a(n-14)', 'a(n-13)*a(n-17) -2*a(n-13)', 'a(n-16)*a(n-18) -2*a(n-16) -2*a(n-18) +4', 'a(n-15)*a(n-17) -2*a(n-15) -2*a(n-17) +4', 'a(n-8) +(6/23)*a(n-13) +(-18/23)*a(n-14) +(1/46)*a(n-15) +(-4/23)*a(n-16) +(17/46)*a(n-17) +(-7/23)*a(n-18) -27/23', 'a(n-10) +(19/23)*a(n-13) +(12/23)*a(n-14) +(7/46)*a(n-15) +(-5/23)*a(n-16) +(27/46)*a(n-17) +(-3/23)*a(n-18) -97/23', 'a(n-6) +(-11/23)*a(n-13) +(-13/23)*a(n-14) +(25/46)*a(n-15) +(-8/23)*a(n-16) +(11/46)*a(n-17) +(9/23)*a(n-18) -31/23', 'a(n-2) +(15/23)*a(n-13) +(1/23)*a(n-14) +(-9/46)*a(n-15) +(13/23)*a(n-16) +(-15/46)*a(n-17) +(17/23)*a(n-18) -79/23', 'a(n-17)*a(n-18) +(-14/23)*a(n-13) +(-4/23)*a(n-14) +(-5/23)*a(n-15) +(-6/23)*a(n-16) +(-39/23)*a(n-17) +(-68/23)*a(n-18) +178/23', 'a(n-15)*a(n-18) +(2/23)*a(n-13) +(-6/23)*a(n-14) +(-42/23)*a(n-15) +(14/23)*a(n-16) +(22/23)*a(n-17) +(-10/23)*a(n-18) -32/23', 'a(n-15)*a(n-19) -2*a(n-15)', 'a(n-17)*a(n-19) -2*a(n-17) -2*a(n-19) +4', 'a(n-16)*a(n-18) -2*a(n-16) -2*a(n-18) +4', 'a(n-15)*a(n-17) -2*a(n-15) -2*a(n-17) +4', 'a(n-1) +(2/3)*a(n-15) +(4/3)*a(n-17) +(2/3)*a(n-18) +(-2/3)*a(n-19) -16/3', 'a(n-15)*a(n-16) -a(n-15) -3*a(n-16) -a(n-17) -a(n-18) -2*a(n-19) +12', 'a(n-9) -a(n-15) +(-1/2)*a(n-16) -a(n-17) +(-1/2)*a(n-18) -a(n-19) +5', 'a(n-13) +2*a(n-20) -4', 'a(n-18)*a(n-20) -2*a(n-18) -2*a(n-20) +4', 'a(n-17)*a(n-20) -2*a(n-17) -2*a(n-20) +4', 'a(n-17)*a(n-19) -2*a(n-17) -2*a(n-19) +4', 'a(n-6) -a(n-18) -2*a(n-19) -2*a(n-20) +8', 'a(n-18)*a(n-19) +a(n-17) -a(n-19) +2*a(n-20) -6', 'a(n-16) -a(n-18) -2*a(n-19) -4*a(n-20) +10', 'a(n-2) +2*a(n-18) +2*a(n-19) +2*a(n-20) -12', 'a(n-1) -2*a(n-18) -4*a(n-19) -4*a(n-20) +16', 'a(n-19)*a(n-20) +a(n-17) +2*a(n-18) +a(n-19) -10']
A000091: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

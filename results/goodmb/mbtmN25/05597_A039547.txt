
orders_used: [14, 15, 15, 15, 16, 15, 16, 16, 16, 17, 16, 17, 17, 17, 17, 17, 17, 18, 17, 18, 17, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 19, 19, 19, 19, 19, 19, 20, 19, 20, 19, 20, 19, 20, 20, 20, 20]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:5598/10000, seq_id:A039547, order:20 took:
 38.4 seconds, i.e. 0.64 minutes or 0.011 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 14.
eqs_explicit:
[]
non_linears:
['n +(-1/144)*a(n-13) +(-1/144)*a(n-14) -113/9', 'a(n-13) -a(n-15) -144', 'n +(-1/144)*a(n-14) +(-1/144)*a(n-15) -122/9', 'a(n-3) +(1/6)*a(n-9) +(-2/27)*a(n-10) +(-83/486)*a(n-11) +(-407/8748)*a(n-12) +(163/4374)*a(n-14) +(-77/972)*a(n-15) -206902/243', 'a(n-14) -a(n-16) -144', 'a(n-13) -a(n-15) -144', 'n +(-1/144)*a(n-15) +(-1/144)*a(n-16) -131/9', 'a(n-4) +(1/6)*a(n-10) +(-2/27)*a(n-11) +(-83/486)*a(n-12) +(-1/108)*a(n-15) +(-77/972)*a(n-16) -23170/27', 'a(n-3) +(1/6)*a(n-9) +(-2/27)*a(n-10) +(-83/486)*a(n-11) +(-407/8748)*a(n-12) +(-77/972)*a(n-15) +(163/4374)*a(n-16) -205598/243', 'a(n-15) -a(n-17) -144', 'a(n-14) -a(n-16) -144', 'a(n-13) -a(n-17) -288', 'n +(-1/144)*a(n-16) +(-1/144)*a(n-17) -140/9', 'a(n-5) +(1/6)*a(n-11) +(-2/27)*a(n-12) +(-1/108)*a(n-16) +(-1/4)*a(n-17) -2722/3', 'a(n-4) +(1/6)*a(n-10) +(-2/27)*a(n-11) +(-83/486)*a(n-12) +(-77/972)*a(n-16) +(-1/108)*a(n-17) -23206/27', 'a(n-3) +(1/6)*a(n-9) +(-2/27)*a(n-10) +(-83/486)*a(n-11) +(-407/8748)*a(n-12) +(163/4374)*a(n-16) +(-77/972)*a(n-17) -208370/243', 'a(n-1) +(-1/6)*a(n-9) +(-7/108)*a(n-10) +(-169/1944)*a(n-11) +(685/17496)*a(n-12) +(239/30618)*a(n-16) +(73/3402)*a(n-17) -1276489/1701', 'a(n-16) -a(n-18) -144', 'a(n-15) -a(n-17) -144', 'a(n-14) -a(n-18) -288', 'a(n-13) -a(n-17) -288', 'n +(-1/144)*a(n-17) +(-1/144)*a(n-18) -149/9', 'a(n-6) +(1/6)*a(n-12) +(-1/12)*a(n-17) +(-1/4)*a(n-18) -2786/3', 'a(n-5) +(1/6)*a(n-11) +(-2/27)*a(n-12) +(-1/4)*a(n-17) +(-1/108)*a(n-18) -2726/3', 'a(n-4) +(1/6)*a(n-10) +(-2/27)*a(n-11) +(-83/486)*a(n-12) +(-1/108)*a(n-17) +(-77/972)*a(n-18) -7838/9', 'a(n-2) +(-1/6)*a(n-10) +(-7/108)*a(n-11) +(-169/1944)*a(n-12) +(71/1512)*a(n-17) +(73/3402)*a(n-18) -46567/63', 'a(n-3) +(1/6)*a(n-9) +(-2/27)*a(n-10) +(-83/486)*a(n-11) +(-407/8748)*a(n-12) +(-77/972)*a(n-17) +(163/4374)*a(n-18) -69022/81', 'a(n-17) -a(n-19) -144', 'a(n-16) -a(n-18) -144', 'a(n-15) -a(n-19) -288', 'a(n-14) -a(n-18) -288', 'a(n-13) -a(n-19) -432', 'a(n-7) +(-1/12)*a(n-18) +(-1/12)*a(n-19) -2570/3', 'n +(-1/144)*a(n-18) +(-1/144)*a(n-19) -158/9', 'a(n-6) +(1/6)*a(n-12) +(-1/4)*a(n-18) +(-1/12)*a(n-19) -2822/3', 'a(n-5) +(1/6)*a(n-11) +(-2/27)*a(n-12) +(-1/108)*a(n-18) +(-1/4)*a(n-19) -2834/3', 'a(n-3) +(-1/6)*a(n-11) +(-7/108)*a(n-12) +(71/1512)*a(n-18) +(-11/168)*a(n-19) -5437/7', 'a(n-18) -a(n-20) -144', 'a(n-17) -a(n-19) -144', 'a(n-16) -a(n-20) -288', 'a(n-15) -a(n-19) -288', 'a(n-14) -a(n-20) -432', 'a(n-13) -a(n-19) -432', 'a(n-8) +(-1/12)*a(n-19) +(-1/12)*a(n-20) -2570/3', 'a(n-7) +(-1/12)*a(n-19) +(-1/12)*a(n-20) -2606/3', 'n +(-1/144)*a(n-19) +(-1/144)*a(n-20) -167/9', 'a(n-6) +(1/6)*a(n-12) +(-1/12)*a(n-19) +(-1/4)*a(n-20) -2930/3']
A039547: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

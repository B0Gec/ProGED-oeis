
orders_used: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 14]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:9670/10000, seq_id:A060047, order:20 took:
 38.5 seconds, i.e. 0.64 minutes or 0.011 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 8.
eqs_explicit:
[]
non_linears:
['a(n-5)*a(n-8) +(4/5)*a(n-3) +(19/5)*a(n-4) +(-17/5)*a(n-5) +(-26/5)*a(n-6) +(-8/5)*a(n-7) +(-24/5)*a(n-8) +72/5', 'a(n-6)^2 +(-67/31)*a(n-3) +(105/62)*a(n-4) +(80/31)*a(n-5) +(-268/31)*a(n-6) +(-81/31)*a(n-7) +(-44/31)*a(n-8) +626/31', 'a(n-4)*a(n-7) +(102/31)*a(n-3) +(-48/31)*a(n-4) +(-144/31)*a(n-5) +(-88/31)*a(n-6) +(-158/31)*a(n-7) +(-20/31)*a(n-8) +572/31', 'a(n-5)*a(n-6) +(60/31)*a(n-3) +(114/31)*a(n-4) +(-216/31)*a(n-5) +(-256/31)*a(n-6) +(-20/31)*a(n-7) +(-92/31)*a(n-8) +672/31', 'a(n-1) +(-301/62)*a(n-3) +(-179/31)*a(n-4) +(269/31)*a(n-5) +(173/31)*a(n-6) +(-110/31)*a(n-7) +(52/31)*a(n-8) +100/31', 'a(n-4)*a(n-6) +(-122/31)*a(n-3) +(-145/31)*a(n-4) +(216/31)*a(n-5) +(-116/31)*a(n-6) +(-166/31)*a(n-7) +(-32/31)*a(n-8) +940/31', 'a(n-3)*a(n-6) +(-70/31)*a(n-3) +(177/31)*a(n-4) +(-120/31)*a(n-5) +(-404/31)*a(n-6) +(-18/31)*a(n-7) +(-120/31)*a(n-8) +1076/31', 'n +(-29/155)*a(n-3) +(-301/620)*a(n-4) +(-63/155)*a(n-5) +(47/310)*a(n-6) +(71/310)*a(n-7) +(-1/155)*a(n-8) -982/155', 'a(n-2) +(232/155)*a(n-3) +(-191/310)*a(n-4) +(-426/155)*a(n-5) +(-33/155)*a(n-6) +(181/155)*a(n-7) +(8/155)*a(n-8) -824/155', 'a(n-7)^2 +(343/155)*a(n-3) +(-52/155)*a(n-4) +(-404/155)*a(n-5) +(8/155)*a(n-6) +(-941/155)*a(n-7) +(-218/155)*a(n-8) +1374/155', 'a(n-9)^2 +(-3/82)*a(n-5) +(-24/41)*a(n-6) +(-3/41)*a(n-7) +(57/41)*a(n-8) +(-177/41)*a(n-9) +64/41', 'a(n-4) +(81/41)*a(n-5) +(-98/41)*a(n-6) +(-84/41)*a(n-7) +(38/41)*a(n-8) +(-36/41)*a(n-9) -12/41', 'n +(-19/164)*a(n-5) +(-35/41)*a(n-6) +(-19/82)*a(n-7) +(33/82)*a(n-8) +(-7/41)*a(n-9) -303/41', 'a(n-3) +(-293/82)*a(n-5) +(34/41)*a(n-6) +(117/41)*a(n-7) +(-9/41)*a(n-8) +(56/41)*a(n-9) -200/41', 'a(n-7)*a(n-8) +(-99/41)*a(n-5) +(56/41)*a(n-6) +(-34/41)*a(n-7) +(-174/41)*a(n-8) +(44/41)*a(n-9) +452/41', 'a(n-6)*a(n-7) +(-6/41)*a(n-5) +(-96/41)*a(n-6) +(-176/41)*a(n-7) +(-100/41)*a(n-8) +(-52/41)*a(n-9) +912/41', 'a(n-8)*a(n-9) +(47/41)*a(n-5) +(14/41)*a(n-6) +(-70/41)*a(n-7) +(-146/41)*a(n-8) +(-112/41)*a(n-9) +400/41', 'a(n-6)*a(n-9) +(91/41)*a(n-5) +(-61/41)*a(n-6) +(-146/41)*a(n-7) +(-96/41)*a(n-8) +(-168/41)*a(n-9) +600/41', 'a(n-5)*a(n-9) +(16/41)*a(n-5) +(-72/41)*a(n-6) +(-132/41)*a(n-7) +(48/41)*a(n-8) +(-244/41)*a(n-9) +520/41', 'a(n-2) +(313/82)*a(n-5) +(-120/41)*a(n-6) +(-179/41)*a(n-7) +(39/41)*a(n-8) +(-106/41)*a(n-9) +74/41', 'a(n-6) +(-40/59)*a(n-7) +(-46/59)*a(n-8) +(54/59)*a(n-9) +(-8/59)*a(n-10) -112/59', 'a(n-10)^2 +(-36/59)*a(n-7) +(-6/59)*a(n-8) +(84/59)*a(n-9) +(-255/59)*a(n-10) +88/59', 'a(n-9)^2 +(-30/59)*a(n-7) +(54/59)*a(n-8) +(-225/59)*a(n-9) +(-6/59)*a(n-10) +34/59', 'a(n-5) +(-62/59)*a(n-7) +(-30/59)*a(n-8) +(-52/59)*a(n-9) +(-36/59)*a(n-10) +204/59', 'a(n-4) +(-94/59)*a(n-7) +(4/59)*a(n-8) +(180/59)*a(n-9) +(52/59)*a(n-10) -688/59', 'n +(-55/59)*a(n-7) +(-19/59)*a(n-8) +(30/59)*a(n-9) +(-11/59)*a(n-10) -508/59', 'a(n-7)*a(n-9) +(-230/59)*a(n-7) +(60/59)*a(n-8) +(-14/59)*a(n-9) +(72/59)*a(n-10) -172/59', 'a(n-3) +(-20/59)*a(n-7) +(-82/59)*a(n-8) +(-150/59)*a(n-9) +(-122/59)*a(n-10) +534/59', 'a(n-9)*a(n-10) +(66/59)*a(n-7) +(-48/59)*a(n-8) +(-272/59)*a(n-9) +(-152/59)*a(n-10) +704/59', 'a(n-8)*a(n-10) +(-30/59)*a(n-7) +(-182/59)*a(n-8) +(-48/59)*a(n-9) +(-242/59)*a(n-10) +860/59', 'a(n-7) -4*a(n-9) -4*a(n-10) -2*a(n-11) +22', 'a(n-4) -3*a(n-9) -5*a(n-10) -3*a(n-11) +21', 'a(n-2) -3*a(n-9) -3*a(n-10) -3*a(n-11) +13', 'a(n-11)^2 -3*a(n-9) -3*a(n-10) -6*a(n-11) +23', 'a(n-10)*a(n-11) +(9/2)*a(n-9) +(7/2)*a(n-10) +(1/2)*a(n-11) -55/2', 'a(n-9)^2 +(-3/2)*a(n-9) +(9/2)*a(n-10) +(3/2)*a(n-11) -41/2', 'a(n-10)^2 +(-3/2)*a(n-9) +(-15/2)*a(n-10) +(-3/2)*a(n-11) +37/2', 'a(n-6) +(-11/2)*a(n-9) +(-17/2)*a(n-10) +(-7/2)*a(n-11) +81/2', 'a(n-5) +(-15/2)*a(n-9) +(-17/2)*a(n-10) +(-7/2)*a(n-11) +89/2', 'a(n-5) +(-8/7)*a(n-11) +(-12/7)*a(n-12)', 'a(n-10) +(9/7)*a(n-11) +(3/7)*a(n-12) -7', 'a(n-9) +(-8/7)*a(n-11) +(-5/7)*a(n-12) +2', 'a(n-8) +(8/7)*a(n-11) +(-2/7)*a(n-12) -6', 'a(n-6) +(8/7)*a(n-11) +(-2/7)*a(n-12) -8', 'a(n-7) +(-10/7)*a(n-11) +(-8/7)*a(n-12) +2', 'a(n-3) +(6/7)*a(n-11) +(-12/7)*a(n-12) -8', 'a(n-2) +(-18/7)*a(n-11) +(-6/7)*a(n-12) -2', 'n +(-1/7)*a(n-11) +(-5/7)*a(n-12) -11', 'a(n-12) -2*a(n-13)', 'a(n-6) -4*a(n-13)', 'a(n-11) +3*a(n-13) -7', 'a(n-10) -3*a(n-13) +2', 'a(n-9) +2*a(n-13) -6', 'a(n-8) -4*a(n-13) +2', 'a(n-7) +2*a(n-13) -8', 'a(n-3) -6*a(n-13) -2', 'a(n-14) -1']
A060047: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

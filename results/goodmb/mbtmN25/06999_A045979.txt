
orders_used: [17, 17, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:7000/10000, seq_id:A045979, order:20 took:
 18.1 seconds, i.e. 0.3 minutes or 0.005 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 17.
eqs_explicit:
[]
non_linears:
['a(n-2) +(-711/61)*a(n-11) +(-223/61)*a(n-12) +(141/61)*a(n-13) +(84/61)*a(n-14) +(-21/61)*a(n-15) +(546/61)*a(n-16) +(-30/61)*a(n-17) +20775/61', 'a(n-12)*a(n-17) +(-12204/61)*a(n-11) +(911/61)*a(n-12) +(4278/61)*a(n-13) +(1326/61)*a(n-14) +(-972/61)*a(n-15) +(9168/61)*a(n-16) +(-8543/61)*a(n-17) +274595/61', 'a(n-10) +(-18/791)*a(n-13) +(36/791)*a(n-14) +(-608/791)*a(n-15) +(213/791)*a(n-16) +(-197/791)*a(n-17) +(-60/791)*a(n-18) -28297/791', 'a(n-13)*a(n-18) +(3163/77)*a(n-13) +(1374/77)*a(n-14) +(114/77)*a(n-15) +(-540/77)*a(n-16) +(-240/77)*a(n-17) +(-8275/77)*a(n-18) -111509/77', 'a(n-17)^2 +(6360/77)*a(n-13) +(1140/77)*a(n-14) +(-204/77)*a(n-15) +(-444/77)*a(n-16) +(-3996/77)*a(n-17) +(-5820/77)*a(n-18) -179561/77', 'a(n-2) +(2664/791)*a(n-13) +(-582/791)*a(n-14) +(-190/791)*a(n-15) +(116/791)*a(n-16) +(-111/791)*a(n-17) +(-2194/791)*a(n-18) -138814/791', 'a(n-13)*a(n-16) +(1981/113)*a(n-13) +(1914/113)*a(n-14) +(294/113)*a(n-15) +(-5795/113)*a(n-16) +(-624/113)*a(n-17) +(-5676/113)*a(n-18) -62935/113', 'a(n-7) +(-90/1243)*a(n-13) +(180/1243)*a(n-14) +(237/1243)*a(n-15) +(48/1243)*a(n-16) +(-646/1243)*a(n-17) +(-978/1243)*a(n-18) -75606/1243', 'n +(-1/30)*a(n-15) +(-1/30)*a(n-16) +(-1/30)*a(n-17) +(-1/30)*a(n-18) +(-1/30)*a(n-19) -171/10', 'a(n-2) +(32/61)*a(n-15) +(26/61)*a(n-16) +(-17/61)*a(n-17) +(-10/61)*a(n-18) +(-92/61)*a(n-19) -6584/61', 'a(n-15)*a(n-17) +(-139/61)*a(n-15) +(-132/61)*a(n-16) +(-2959/61)*a(n-17) +(-456/61)*a(n-18) +(-96/61)*a(n-19) +31573/61', 'a(n-19)^2 +(1520/61)*a(n-15) +(320/61)*a(n-16) +(-472/61)*a(n-17) +(-292/61)*a(n-18) +(-3028/61)*a(n-19) -23173/61', 'a(n-9) +(67/915)*a(n-15) +(-323/915)*a(n-16) +(-68/915)*a(n-17) +(82/915)*a(n-18) +(-368/915)*a(n-19) -16363/305', 'a(n-8) +(42/305)*a(n-15) +(57/305)*a(n-16) +(12/305)*a(n-17) +(-158/305)*a(n-18) +(-258/305)*a(n-19) -19164/305', 'a(n-7) +(57/305)*a(n-15) +(12/305)*a(n-16) +(-158/305)*a(n-17) +(-258/305)*a(n-18) +(42/305)*a(n-19) -17904/305', 'a(n-6) +(12/305)*a(n-15) +(-158/305)*a(n-16) +(-258/305)*a(n-17) +(42/305)*a(n-18) +(57/305)*a(n-19) -16194/305', 'a(n-5) +(-158/305)*a(n-15) +(-258/305)*a(n-16) +(42/305)*a(n-17) +(57/305)*a(n-18) +(12/305)*a(n-19) -15834/305', 'a(n-18)*a(n-19) +(1500/61)*a(n-15) +(258/61)*a(n-16) +(-408/61)*a(n-17) +(-1399/61)*a(n-18) +(-2269/61)*a(n-19) -15947/61', 'a(n-15) -a(n-20) -30', 'n +(-7/449)*a(n-17) +(-33/898)*a(n-18) +(-37/898)*a(n-19) +(-43/449)*a(n-20) -8474/449', 'a(n-14) +(17/449)*a(n-17) +(8/449)*a(n-18) +(-372/449)*a(n-19) +(-88/449)*a(n-20) -14314/449', 'a(n-12) +(-356/449)*a(n-17) +(123/449)*a(n-18) +(-107/449)*a(n-19) +(-6/449)*a(n-20) -15895/449', 'a(n-10) +(-176/449)*a(n-17) +(-30/449)*a(n-18) +(48/449)*a(n-19) +(-119/449)*a(n-20) -23326/449', 'a(n-9) +(51/449)*a(n-17) +(24/449)*a(n-18) +(-218/449)*a(n-19) +(-264/449)*a(n-20) -26778/449', 'a(n-6) +(-256/449)*a(n-17) +(38/449)*a(n-18) +(29/449)*a(n-19) +(-418/449)*a(n-20) -28704/449', 'a(n-5) +(264/449)*a(n-17) +(45/449)*a(n-18) +(-72/449)*a(n-19) +(-944/449)*a(n-20) -39096/449', 'a(n-4) +(68/449)*a(n-17) +(32/449)*a(n-18) +(-141/449)*a(n-19) +(-352/449)*a(n-20) -41092/449', 'a(n-3) +(66/449)*a(n-17) +(-101/449)*a(n-18) +(-18/449)*a(n-19) +(-236/449)*a(n-20) -43000/449']
A045979: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    


orders_used: [1, 2, 1, 3, 2, 1, 4, 4, 3, 2, 1, 5, 5, 4, 4, 3, 2, 1, 6, 6, 6, 5, 5, 4, 4, 3, 2, 1, 7, 7, 7, 6, 6, 5, 5, 4, 3, 2, 8, 8, 7, 7, 6, 5, 4, 8, 9, 9, 8, 7, 6, 9, 9, 9, 9, 10, 9, 8, 10, 10, 10, 10, 10, 10, 10, 11, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:6662/10000, seq_id:A040965, order:20 took:
 51.3 seconds, i.e. 0.85 minutes or 0.014 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
eqs_explicit:
[]
non_linears:
['a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-2)*a(n-3) -a(n-2) -a(n-3) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n)*a(n-4) -a(n) -a(n-4) +1', 'a(n-2)*a(n-3) -a(n-2) -a(n-3) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-4)*a(n-5) -a(n-4) -a(n-5) +1', 'a(n-1)*a(n-5) -a(n-1) -a(n-5) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n)*a(n-4) -a(n) -a(n-4) +1', 'a(n-2)*a(n-3) -a(n-2) -a(n-3) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-5)*a(n-6) -a(n-5) -a(n-6) +1', 'a(n-2)*a(n-6) -a(n-2) -a(n-6) +1', 'a(n)*a(n-6) -a(n) -a(n-6) +1', 'a(n-4)*a(n-5) -a(n-4) -a(n-5) +1', 'a(n-1)*a(n-5) -a(n-1) -a(n-5) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n)*a(n-4) -a(n) -a(n-4) +1', 'a(n-2)*a(n-3) -a(n-2) -a(n-3) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-6)*a(n-7) -a(n-6) -a(n-7) +1', 'a(n-3)*a(n-7) -a(n-3) -a(n-7) +1', 'a(n-1)*a(n-7) -a(n-1) -a(n-7) +1', 'a(n-5)*a(n-6) -a(n-5) -a(n-6) +1', 'a(n-2)*a(n-6) -a(n-2) -a(n-6) +1', 'a(n-4)*a(n-5) -a(n-4) -a(n-5) +1', 'a(n-1)*a(n-5) -a(n-1) -a(n-5) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n-2)*a(n-3) -a(n-2) -a(n-3) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n-7)*a(n-8) -a(n-7) -a(n-8) +1', 'a(n-4)*a(n-8) -a(n-4) -a(n-8) +1', 'a(n-6)*a(n-7) -a(n-6) -a(n-7) +1', 'a(n-3)*a(n-7) -a(n-3) -a(n-7) +1', 'a(n-5)*a(n-6) -a(n-5) -a(n-6) +1', 'a(n-4)*a(n-5) -a(n-4) -a(n-5) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n-2) +(79/16)*a(n-3) +(253/16)*a(n-4) +(295/16)*a(n-5) +(253/16)*a(n-6) +(79/16)*a(n-7) +a(n-8) -2003/16', 'a(n-8)*a(n-9) -a(n-8) -a(n-9) +1', 'a(n-5)*a(n-9) -a(n-5) -a(n-9) +1', 'a(n-7)*a(n-8) -a(n-7) -a(n-8) +1', 'a(n-6)*a(n-7) -a(n-6) -a(n-7) +1', 'a(n-5)*a(n-6) -a(n-5) -a(n-6) +1', 'a(n-7)*a(n-9) +(69/31)*a(n-5) +(81/31)*a(n-6) +(23/31)*a(n-7) +(18/31)*a(n-8) +(-25/31)*a(n-9) -458/31', 'a(n-6)^2 +(38/31)*a(n-5) +(-105/31)*a(n-6) +(54/31)*a(n-7) +(18/31)*a(n-8) +(6/31)*a(n-9) -210/31', 'a(n-7)^2 +(138/31)*a(n-5) +(162/31)*a(n-6) +(15/31)*a(n-7) +(36/31)*a(n-8) +(12/31)*a(n-9) -916/31', 'a(n-4) +(583/93)*a(n-5) +(247/31)*a(n-6) +(237/31)*a(n-7) +(79/31)*a(n-8) +(16/31)*a(n-9) -4873/93', 'a(n-9)*a(n-10) -a(n-9) -a(n-10) +1', 'a(n-8)*a(n-9) -a(n-8) -a(n-9) +1', 'a(n-7)*a(n-8) -a(n-7) -a(n-8) +1', 'a(n-2) +(-177/547)*a(n-7) +(24/547)*a(n-8) +(8/547)*a(n-9) +(-48/547)*a(n-10) -378/547', 'a(n-4) +(-488/547)*a(n-7) +(-8/547)*a(n-8) +(-185/547)*a(n-9) +(16/547)*a(n-10) +126/547', 'a(n-7)^2 +(-2739/547)*a(n-7) +(-18/547)*a(n-8) +(-6/547)*a(n-9) +(36/547)*a(n-10) +2198/547', 'n +(-122/547)*a(n-7) +(-549/547)*a(n-8) +(-730/547)*a(n-9) +(4/547)*a(n-10) -4071/547', 'a(n-9)^2 +(366/547)*a(n-7) +(6/547)*a(n-8) +(-2733/547)*a(n-9) +(-12/547)*a(n-10) +1820/547', 'a(n-7)*a(n-9) +(-1096/547)*a(n-7) +(-9/547)*a(n-8) +(-550/547)*a(n-9) +(18/547)*a(n-10) +1099/547', 'a(n-6) +(723/547)*a(n-7) +(792/547)*a(n-8) +(264/547)*a(n-9) +(57/547)*a(n-10) -4816/547', 'a(n-10)*a(n-11) -a(n-10) -a(n-11) +1', 'a(n-9)*a(n-10) -a(n-9) -a(n-10) +1', 'a(n-3) +(3/61)*a(n-9) +(-58/61)*a(n-10) +(-6/61)*a(n-11) -3/61', 'a(n-8) +(1/61)*a(n-9) +(-182/61)*a(n-10) +(-2/61)*a(n-11) +121/61', 'a(n-6) +(-87/61)*a(n-9) +(-87/61)*a(n-10) +(-9/61)*a(n-11) +209/61', 'a(n-2) +(29/61)*a(n-9) +(90/61)*a(n-10) +(3/61)*a(n-11) -273/61', 'a(n-12)^2 -32*a(n-12) +31', 'a(n-7) +(-1/10)*a(n-12) -9/10', 'a(n-2) +(-1/30)*a(n-12) -29/30', 'a(n-11)*a(n-12) -a(n-11) -a(n-12) +1', 'a(n-4) -a(n-11) +(-1/10)*a(n-12) +1/10', 'a(n-10) +a(n-11) +(1/30)*a(n-12) -91/30', 'a(n-9) -3*a(n-11) +(-1/30)*a(n-12) +61/30', 'a(n-13)^2 -32*a(n-13) +31', 'a(n-8) +(-1/10)*a(n-13) -9/10', 'a(n-5) +(-1/10)*a(n-13) -9/10', 'a(n-11) +(1/30)*a(n-13) -61/30', 'a(n-10) +(-1/30)*a(n-13) -29/30', 'a(n-9) +(1/10)*a(n-13) -41/10', 'a(n-6) +(1/10)*a(n-13) -41/10']
A040965: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    


orders_used: [5, 5, 6, 6, 6, 7, 6, 7, 7, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 8, 9, 8, 9, 9, 9, 9, 9, 9, 10, 9, 10, 9, 10, 10, 10, 10, 10, 10, 11, 10, 11, 10, 11, 10, 11, 11, 11, 11, 12, 11, 12, 11, 12, 11, 12, 12, 12, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 13, 14, 13, 14, 13, 14, 13, 14, 13, 14, 14, 15, 14, 15, 14, 15, 14, 15, 14, 15, 14, 16, 15, 16, 15, 16, 15, 16, 15, 16, 15, 17, 16, 17, 16, 17, 16, 17, 16, 17, 16, 18, 17, 18, 17, 18, 17, 18, 17, 18, 17, 19, 18, 19, 18, 19, 18, 19, 18, 19, 18, 20, 19, 20, 19, 20, 19, 20, 19, 20, 19]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:5650/10000, seq_id:A039603, order:20 took:
 104.4 seconds, i.e. 1.74 minutes or 0.029 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 5.
eqs_explicit:
[]
non_linears:
['n +(-1/144)*a(n-4) +(-1/144)*a(n-5) -433/144', 'a(n-4)^2 -2*a(n-4)*a(n-5) +a(n-5)^2 -144*a(n-4) +144*a(n-5) +2783', 'a(n-4) -a(n-6) -144', 'n +(-1/144)*a(n-5) +(-1/144)*a(n-6) -577/144', 'a(n-5)^2 -2*a(n-5)*a(n-6) +a(n-6)^2 -144*a(n-5) +144*a(n-6) +2783', 'a(n-5) -a(n-7) -144', 'a(n-4) -a(n-6) -144', 'n +(-1/144)*a(n-6) +(-1/144)*a(n-7) -721/144', 'a(n-6)^2 -2*a(n-6)*a(n-7) +a(n-7)^2 -144*a(n-6) +144*a(n-7) +2783', 'a(n-6) -a(n-8) -144', 'a(n-5) -a(n-7) -144', 'a(n-4) -a(n-8) -288', 'n +(-1/144)*a(n-7) +(-1/144)*a(n-8) -865/144', 'a(n-7)^2 -2*a(n-7)*a(n-8) +a(n-8)^2 -144*a(n-7) +144*a(n-8) +2783', 'a(n-3)*a(n-8) -a(n-7)*a(n-8) -1284*a(n-3) +1284*a(n-7) -288*a(n-8) +369792', 'a(n-3)*a(n-7) -2*a(n-7)*a(n-8) +a(n-8)^2 -1307*a(n-3) +875*a(n-7) +144*a(n-8) +379199', 'a(n-3)^2 -2*a(n-7)*a(n-8) +a(n-8)^2 -3180*a(n-3) +2460*a(n-7) +144*a(n-8) +835679', 'a(n-2)*a(n-7) -a(n-7)*a(n-8) -1284*a(n-2) -299*a(n-3) -133*a(n-7) +1284*a(n-8) +640800', 'a(n-2)*a(n-8) -a(n-8)^2 -1163*a(n-2) -1573*a(n-3) +1573*a(n-7) +731*a(n-8) +955440', 'a(n-7) -a(n-9) -144', 'a(n-6) -a(n-8) -144', 'a(n-5) -a(n-9) -288', 'a(n-4) -a(n-8) -288', 'n +(-1/144)*a(n-8) +(-1/144)*a(n-9) -1009/144', 'a(n-3)*a(n-9) -a(n-9)^2 -1163*a(n-3) +731*a(n-9) +502416', 'a(n-3)^2 -a(n-9)^2 -3180*a(n-3) +2316*a(n-9) +1187136', 'a(n-8)^2 -2*a(n-8)*a(n-9) +a(n-9)^2 -144*a(n-8) +144*a(n-9) +2783', 'a(n-3)*a(n-8) -a(n-8)*a(n-9) -1284*a(n-3) -432*a(n-8) +1284*a(n-9) +554688', 'a(n-2)*a(n-9) -a(n-8)*a(n-9) -1140*a(n-2) -299*a(n-3) +1140*a(n-8) -133*a(n-9) +621648', 'a(n-8) -a(n-10) -144', 'a(n-7) -a(n-9) -144', 'a(n-6) -a(n-10) -288', 'a(n-5) -a(n-9) -288', 'a(n-4) -a(n-10) -432', 'n +(-1/144)*a(n-9) +(-1/144)*a(n-10) -1153/144', 'a(n-9)^2 -2*a(n-9)*a(n-10) +a(n-10)^2 -144*a(n-9) +144*a(n-10) +2783', 'a(n-3)*a(n-10) -a(n-9)*a(n-10) -1140*a(n-3) +1140*a(n-9) -432*a(n-10) +492480', 'a(n-3)*a(n-9) -2*a(n-9)*a(n-10) +a(n-10)^2 -1163*a(n-3) +587*a(n-9) +144*a(n-10) +505199', 'a(n-3)^2 -2*a(n-9)*a(n-10) +a(n-10)^2 -3180*a(n-3) +2172*a(n-9) +144*a(n-10) +1189919', 'a(n-9) -a(n-11) -144', 'a(n-8) -a(n-10) -144', 'a(n-7) -a(n-11) -288', 'a(n-6) -a(n-10) -288', 'a(n-5) -a(n-11) -432', 'a(n-4) -a(n-10) -432', 'n +(-1/144)*a(n-10) +(-1/144)*a(n-11) -1297/144', 'a(n-3)*a(n-11) -a(n-11)^2 -1019*a(n-3) +443*a(n-11) +586944', 'a(n-3)^2 -a(n-11)^2 -3180*a(n-3) +2028*a(n-11) +1499904', 'a(n-10)^2 -2*a(n-10)*a(n-11) +a(n-11)^2 -144*a(n-10) +144*a(n-11) +2783', 'a(n-10) -a(n-12) -144', 'a(n-9) -a(n-11) -144', 'a(n-8) -a(n-12) -288', 'a(n-7) -a(n-11) -288', 'a(n-6) -a(n-12) -432', 'a(n-5) -a(n-11) -432', 'a(n-4) -a(n-12) -576', 'n +(-1/144)*a(n-11) +(-1/144)*a(n-12) -1441/144', 'a(n-11)^2 -2*a(n-11)*a(n-12) +a(n-12)^2 -144*a(n-11) +144*a(n-12) +2783', 'a(n-3)*a(n-12) -a(n-11)*a(n-12) -996*a(n-3) +996*a(n-11) -576*a(n-12) +573696', 'a(n-11) -a(n-13) -144', 'a(n-10) -a(n-12) -144', 'a(n-9) -a(n-13) -288', 'a(n-8) -a(n-12) -288', 'a(n-7) -a(n-13) -432', 'a(n-6) -a(n-12) -432', 'a(n-5) -a(n-13) -576', 'a(n-4) -a(n-12) -576', 'n +(-1/144)*a(n-12) +(-1/144)*a(n-13) -1585/144', 'a(n-3)*a(n-13) -a(n-13)^2 -875*a(n-3) +155*a(n-13) +630000', 'a(n-12) -a(n-14) -144', 'a(n-11) -a(n-13) -144', 'a(n-10) -a(n-14) -288', 'a(n-9) -a(n-13) -288', 'a(n-8) -a(n-14) -432', 'a(n-7) -a(n-13) -432', 'a(n-6) -a(n-14) -576', 'a(n-5) -a(n-13) -576', 'a(n-4) -a(n-14) -720', 'n +(-1/144)*a(n-13) +(-1/144)*a(n-14) -1729/144', 'a(n-13) -a(n-15) -144', 'a(n-12) -a(n-14) -144', 'a(n-11) -a(n-15) -288', 'a(n-10) -a(n-14) -288', 'a(n-9) -a(n-15) -432', 'a(n-8) -a(n-14) -432', 'a(n-7) -a(n-15) -576', 'a(n-6) -a(n-14) -576', 'a(n-5) -a(n-15) -720', 'a(n-4) -a(n-14) -720', 'a(n-14) -a(n-16) -144', 'a(n-13) -a(n-15) -144', 'a(n-12) -a(n-16) -288', 'a(n-11) -a(n-15) -288', 'a(n-10) -a(n-16) -432', 'a(n-9) -a(n-15) -432', 'a(n-8) -a(n-16) -576', 'a(n-7) -a(n-15) -576', 'a(n-6) -a(n-16) -720', 'a(n-5) -a(n-15) -720', 'a(n-15) -a(n-17) -144', 'a(n-14) -a(n-16) -144', 'a(n-13) -a(n-17) -288', 'a(n-12) -a(n-16) -288', 'a(n-11) -a(n-17) -432', 'a(n-10) -a(n-16) -432', 'a(n-9) -a(n-17) -576', 'a(n-8) -a(n-16) -576', 'a(n-7) -a(n-17) -720', 'a(n-6) -a(n-16) -720', 'a(n-16) -a(n-18) -144', 'a(n-15) -a(n-17) -144', 'a(n-14) -a(n-18) -288', 'a(n-13) -a(n-17) -288', 'a(n-12) -a(n-18) -432', 'a(n-11) -a(n-17) -432', 'a(n-10) -a(n-18) -576', 'a(n-9) -a(n-17) -576', 'a(n-8) -a(n-18) -720', 'a(n-7) -a(n-17) -720', 'a(n-17) -a(n-19) -144', 'a(n-16) -a(n-18) -144', 'a(n-15) -a(n-19) -288', 'a(n-14) -a(n-18) -288', 'a(n-13) -a(n-19) -432', 'a(n-12) -a(n-18) -432', 'a(n-11) -a(n-19) -576', 'a(n-10) -a(n-18) -576', 'a(n-9) -a(n-19) -720', 'a(n-8) -a(n-18) -720', 'a(n-18) -a(n-20) -144', 'a(n-17) -a(n-19) -144', 'a(n-16) -a(n-20) -288', 'a(n-15) -a(n-19) -288', 'a(n-14) -a(n-20) -432', 'a(n-13) -a(n-19) -432', 'a(n-12) -a(n-20) -576', 'a(n-11) -a(n-19) -576', 'a(n-10) -a(n-20) -720', 'a(n-9) -a(n-19) -720']
A039603: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    


orders_used: [0, 1, 0, 2, 1, 0, 2, 2, 2, 2, 2, 2, 3, 2, 1, 0, 3, 3, 3, 3, 3, 3, 4, 4, 3, 2, 1, 0, 4, 4, 4, 4, 5, 5, 4, 3, 2, 1, 0, 5, 5, 5, 6, 6, 6, 6, 5, 4, 3, 2, 1, 7, 7, 6, 6, 7, 7, 6, 8, 8, 7, 7, 6, 6, 8, 7, 9, 9, 9, 9, 8, 8, 7, 7, 6, 9, 10, 10, 10, 8, 8, 7, 10, 8, 7, 11, 11, 8, 11, 8, 7, 11, 12, 12, 12]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:3835/10000, seq_id:A029428, order:20 took:
 81.4 seconds, i.e. 1.36 minutes or 0.023 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 0.
eqs_explicit:
['a(n) = a(n-12)']
non_linears:
['a(n)^2 -a(n)', 'a(n-1)^2 -a(n-1)', 'a(n)^2 -a(n)', 'a(n-2)^2 -a(n-2)', 'a(n-1)^2 -a(n-1)', 'a(n)^2 -a(n)', 'a(n)*a(n-1)*a(n-2) -a(n)*a(n-2)', 'n*a(n-1)*a(n-2) +3*a(n)*a(n-1) -n*a(n-1) -3*a(n)*a(n-2) -7*a(n-1)*a(n-2) +7*a(n-1)', 'a(n)*n*a(n-1) -7*a(n)*a(n-1) -n*a(n-1) -6*a(n)*a(n-2) +6*a(n-1)*a(n-2) +7*a(n-1)', 'a(n)*n*a(n-2) +3*a(n)*a(n-1) -n*a(n-1) -16*a(n)*a(n-2) +6*a(n-1)*a(n-2) +7*a(n-1)', 'n^2*a(n-1) +18*a(n)*a(n-1) -23*n*a(n-1) -16*a(n)*a(n-2) +18*a(n-1)*a(n-2) +112*a(n-1)', 'a(n)*n^2 -15*a(n)*n +20*a(n)*a(n-1) -8*n*a(n-1) -46*a(n)*a(n-2) +48*a(n-1)*a(n-2) +54*a(n) +56*a(n-1)', 'a(n-3)^2 -a(n-3)', 'a(n-2)^2 -a(n-2)', 'a(n-1)^2 -a(n-1)', 'a(n)^2 -a(n)', 'a(n-1)*a(n-2)*a(n-3) -a(n-1)*a(n-3)', 'n*a(n-1)*a(n-3) +(6/7)*a(n)*a(n-3) +(-1/7)*n*a(n-3) +(-92/7)*a(n-1)*a(n-3) +(11/7)*a(n-2)*a(n-3) +(3/7)*a(n-3)', 'a(n)*a(n-2) -a(n-1)*a(n-2) +(-6/7)*a(n)*a(n-3) +(1/7)*n*a(n-3) +(8/7)*a(n-1)*a(n-3) +(-11/7)*a(n-2)*a(n-3) +(-3/7)*a(n-3)', 'n*a(n-2) -3*a(n-1)*a(n-2) +(6/7)*a(n)*a(n-3) +(-1/7)*n*a(n-3) +(27/7)*a(n-1)*a(n-3) +(-31/7)*a(n-2)*a(n-3) -8*a(n-2) +(3/7)*a(n-3)', 'a(n)*a(n-1) +(-1/3)*n*a(n-1) +(1/3)*a(n-1)*a(n-2) +(-8/7)*a(n)*a(n-3) +(4/21)*n*a(n-3) +(13/7)*a(n-1)*a(n-3) +(-44/21)*a(n-2)*a(n-3) +(7/3)*a(n-1) +(-4/7)*a(n-3)', 'a(n)*n +(-4/3)*n*a(n-1) +(1/3)*a(n-1)*a(n-2) +(-47/7)*a(n)*a(n-3) +(13/21)*n*a(n-3) +(58/7)*a(n-1)*a(n-3) +(-143/21)*a(n-2)*a(n-3) -6*a(n) +(28/3)*a(n-1) +(-13/7)*a(n-3)', 'a(n-4)^2 -a(n-4)', 'a(n-2)*a(n-4) -a(n-3)*a(n-4)', 'a(n-3)^2 -a(n-3)', 'a(n-2)^2 -a(n-2)', 'a(n-1)^2 -a(n-1)', 'a(n)^2 -a(n)', 'a(n)*a(n-3) +a(n-3)*a(n-4) -a(n-3)', 'a(n)*a(n-4) +(-1/7)*n*a(n-4) +(-1/7)*a(n-1)*a(n-4) +(10/7)*a(n-3)*a(n-4) +(4/7)*a(n-4)', 'a(n)*a(n-2) -a(n-1)*a(n-2) +(-1/7)*n*a(n-4) +(6/7)*a(n-1)*a(n-4) +(10/7)*a(n-3)*a(n-4) +(4/7)*a(n-4)', 'a(n)*a(n-1) -a(n-1)*a(n-2) +(-2/7)*n*a(n-4) +(5/7)*a(n-1)*a(n-4) +(20/7)*a(n-3)*a(n-4) +(8/7)*a(n-4)', 'a(n-5)^2 -a(n-5)', 'a(n-3)*a(n-5) -a(n-4)*a(n-5)', 'a(n-4)^2 -a(n-4)', 'a(n-3)^2 -a(n-3)', 'a(n-2)^2 -a(n-2)', 'a(n-1)^2 -a(n-1)', 'a(n)^2 -a(n)', 'a(n-1)*a(n-5) -a(n-2)*a(n-5) +a(n-4)*a(n-5)', 'a(n)*a(n-5) -a(n-2)*a(n-5) +a(n-4)*a(n-5)', 'a(n-1)*a(n-4) +a(n-4)*a(n-5) -a(n-4)', 'a(n-5)*a(n-6)', 'a(n-4)*a(n-6)', 'a(n-6)^2 -a(n-6)', 'a(n)*a(n-6) -a(n-6)', 'a(n-5)^2 -a(n-5)', 'a(n-4)^2 -a(n-4)', 'a(n-3)^2 -a(n-3)', 'a(n-2)^2 -a(n-2)', 'a(n-1)^2 -a(n-1)', 'a(n-6)*a(n-7)', 'a(n-5)*a(n-7)', 'a(n-5)*a(n-6)', 'a(n-4)*a(n-6)', 'a(n-7)^2 -a(n-7)', 'a(n-1)*a(n-7) -a(n-7)', 'a(n-6)^2 -a(n-6)', 'a(n-7)*a(n-8)', 'a(n-6)*a(n-8)', 'a(n-6)*a(n-7)', 'a(n-5)*a(n-7)', 'a(n-5)*a(n-6)', 'a(n-4)*a(n-6)', 'a(n-8)^2 -a(n-8)', 'a(n-7)^2 -a(n-7)', 'a(n-8)*a(n-9)', 'a(n-7)*a(n-9)', 'a(n-6)*a(n-9)', 'a(n-5)*a(n-9)', 'a(n-7)*a(n-8)', 'a(n-6)*a(n-8)', 'a(n-6)*a(n-7)', 'a(n-5)*a(n-7)', 'a(n-5)*a(n-6)', 'a(n-9)^2 -a(n-9)', 'a(n-8)*a(n-10)', 'a(n-7)*a(n-10)', 'a(n-6)*a(n-10)', 'a(n-7)*a(n-8)', 'a(n-6)*a(n-8)', 'a(n-6)*a(n-7)', 'a(n-10)^2 -a(n-10)', 'a(n-8)^2 -a(n-8)', 'a(n-7)^2 -a(n-7)', 'a(n-8)*a(n-11)', 'a(n-7)*a(n-11)', 'a(n-7)*a(n-8)', 'a(n-11)^2 -a(n-11)', 'a(n-8)^2 -a(n-8)', 'a(n-7)^2 -a(n-7)', 'a(n-5) -a(n-8) -a(n-11)', 'a(n-8)*a(n-12)', 'a(n-6) -a(n-12)', 'a(n) -a(n-12)']
A029428: 
a(n) = a(n-12)
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

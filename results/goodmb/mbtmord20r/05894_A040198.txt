
orders_used: [2, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:5895/10000, seq_id:A040198, order:20 took:
 20.6 seconds, i.e. 0.34 minutes or 0.006 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 2.
eqs_explicit:
['a(n) = -783*a(n-10)/265 + 162*a(n-9)/53 - 243*a(n-8)/53 - 2241*a(n-7)/265 + 16114/265']
non_linears:
['a(n)*a(n-1)*a(n-2) -a(n)*a(n-1) -a(n)*a(n-2) -a(n-1)*a(n-2) +a(n) +a(n-1) +a(n-2) -1', 'a(n-7)*a(n-8) +(120/23)*a(n-3) +(-55/23)*a(n-4) +(-265/23)*a(n-5) +(-55/23)*a(n-6) +(97/23)*a(n-7) -a(n-8) +698/23', 'a(n-6)*a(n-8) +(-315/23)*a(n-3) +(175/23)*a(n-4) +(560/23)*a(n-5) +(-93/23)*a(n-6) +(-350/23)*a(n-7) +(-93/23)*a(n-8) -432/23', 'n +(-1/253)*a(n-3) +(183/253)*a(n-4) +(162/253)*a(n-5) +(-135/253)*a(n-6) +(-191/253)*a(n-7) +(-12/253)*a(n-8) -2951/253', 'a(n-5)*a(n-6) +(90/253)*a(n-3) +(250/253)*a(n-4) +(-148/253)*a(n-5) +(-148/253)*a(n-6) +(250/253)*a(n-7) +(90/253)*a(n-8) -3162/253', 'a(n-3)*a(n-8) +(-428/253)*a(n-3) +(-205/253)*a(n-4) +(-415/253)*a(n-5) +(-415/253)*a(n-6) +(-205/253)*a(n-7) +(-428/253)*a(n-8) +5558/253', 'a(n-4)*a(n-7) +(210/253)*a(n-3) +(-260/253)*a(n-4) +(245/253)*a(n-5) +(245/253)*a(n-6) +(-260/253)*a(n-7) +(210/253)*a(n-8) -3583/253', 'a(n-3)*a(n-4) +(-76/11)*a(n-3) +(147/253)*a(n-4) +(2500/253)*a(n-5) +(190/253)*a(n-6) +(-1525/253)*a(n-7) +(-175/253)*a(n-8) -1867/253', 'a(n-5)*a(n-6) +(1/4)*a(n-5) +(7/5)*a(n-6) +a(n-7) +(-3/4)*a(n-8) +(-1/20)*a(n-9) -317/20', 'a(n-3) -2*a(n-5) +(-27/25)*a(n-6) +(4/5)*a(n-7) +(2/5)*a(n-8) +(-1/25)*a(n-9) +138/25', 'a(n-4) +(-1/8)*a(n-5) +(-81/50)*a(n-6) +(-3/10)*a(n-7) +(39/40)*a(n-8) +(13/200)*a(n-9) +281/200', 'a(n-6)*a(n-7) +(95/92)*a(n-5) +(-1/115)*a(n-6) +(-11/23)*a(n-7) +(59/92)*a(n-8) +(153/460)*a(n-9) -5979/460', 'a(n-5)*a(n-9) +(17/23)*a(n-5) +(353/115)*a(n-6) +(19/23)*a(n-7) +(-3/23)*a(n-8) +(-651/115)*a(n-9) -1842/115', 'a(n-8)*a(n-9) +(-40/23)*a(n-5) +(-353/115)*a(n-6) +(-19/23)*a(n-7) +(-20/23)*a(n-8) +(-154/115)*a(n-9) +2647/115', 'a(n-7)*a(n-8) +(-255/184)*a(n-5) +(-29/46)*a(n-6) +(-31/46)*a(n-7) +(-139/184)*a(n-8) +(67/184)*a(n-9) +903/184', 'a(n-5)*a(n-7) +(-221/46)*a(n-5) +(-259/115)*a(n-6) +(-135/23)*a(n-7) +(-7/46)*a(n-8) +(91/230)*a(n-9) +6397/230', 'a(n-1) +(105/23)*a(n-5) +(228/115)*a(n-6) +(-114/23)*a(n-7) +(-28/23)*a(n-8) +(-211/115)*a(n-9) -632/115', 'a(n-5)*a(n-8) +(-85/92)*a(n-5) +(266/115)*a(n-6) +(28/23)*a(n-7) +(-169/92)*a(n-8) +(357/460)*a(n-9) -7051/460', 'a(n-6) +(84/53)*a(n-7) +(20/53)*a(n-8) +(-31/53)*a(n-9) +(7/53)*a(n-10) -573/53', 'a(n-8)*a(n-9) +(83/53)*a(n-7) +(-8/53)*a(n-8) +(-83/53)*a(n-9) +(29/53)*a(n-10) -534/53', 'a(n-3) +(-88/265)*a(n-7) +(16/53)*a(n-8) +(60/53)*a(n-9) +(81/265)*a(n-10) -1603/265', 'a(n-7)*a(n-8) +(-436/265)*a(n-7) +(-46/53)*a(n-8) +(66/53)*a(n-9) +(52/265)*a(n-10) -486/265', 'a(n-9)*a(n-10) +(-83/265)*a(n-7) +(-9/53)*a(n-8) +(-100/53)*a(n-9) +(-294/265)*a(n-10) +1117/265', 'a(n-1) +(-426/265)*a(n-7) +(-43/53)*a(n-8) +(-254/53)*a(n-9) +(-168/265)*a(n-10) +4159/265', 'a(n-9)^2 +(-332/265)*a(n-7) +(-36/53)*a(n-8) +(-347/53)*a(n-9) +(-116/265)*a(n-10) +3938/265', 'a(n-7)*a(n-9) +(-846/265)*a(n-7) +(-63/53)*a(n-8) +(-382/53)*a(n-9) +(-203/265)*a(n-10) +6229/265', 'a(n-2) +(-1392/265)*a(n-7) +(-354/53)*a(n-8) +(77/53)*a(n-9) +(-646/265)*a(n-10) +11623/265', 'a(n) +(2241/265)*a(n-7) +(243/53)*a(n-8) +(-162/53)*a(n-9) +(783/265)*a(n-10) -16114/265']
A040198: 
a(n) = -783*a(n-10)/265 + 162*a(n-9)/53 - 243*a(n-8)/53 - 2241*a(n-7)/265 + 16114/265
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

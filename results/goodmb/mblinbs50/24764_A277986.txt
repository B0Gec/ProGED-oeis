
orders_used: [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
While total time consumed by now, scale:24765/27236, seq_id:A277986, order:20 took:
 41.0 seconds, i.e. 0.68 minutes or 0.011 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
non_linears:
['a(n) -a(n-1) -74', 'a(n-1) -a(n-2) -74', 'a(n) -a(n-2) -148', 'a(n-2) -a(n-3) -74', 'a(n-1) -a(n-3) -148', 'a(n) -a(n-3) -222', 'a(n-3) -a(n-4) -74', 'a(n-2) -a(n-4) -148', 'a(n-1) -a(n-4) -222', 'a(n) -a(n-4) -296', 'a(n-4) -a(n-5) -74', 'a(n-3) -a(n-5) -148', 'a(n-2) -a(n-5) -222', 'a(n-1) -a(n-5) -296', 'a(n) -a(n-5) -370', 'a(n-5) -a(n-6) -74', 'a(n-4) -a(n-6) -148', 'a(n-3) -a(n-6) -222', 'a(n-2) -a(n-6) -296', 'a(n-1) -a(n-6) -370', 'a(n) -a(n-6) -444', 'a(n-6) -a(n-7) -74', 'a(n-5) -a(n-7) -148', 'a(n-4) -a(n-7) -222', 'a(n-3) -a(n-7) -296', 'a(n-2) -a(n-7) -370', 'a(n-1) -a(n-7) -444', 'a(n) -a(n-7) -518', 'a(n-7) -a(n-8) -74', 'a(n-6) -a(n-8) -148', 'a(n-5) -a(n-8) -222', 'a(n-4) -a(n-8) -296', 'a(n-3) -a(n-8) -370', 'a(n-2) -a(n-8) -444', 'a(n-1) -a(n-8) -518', 'a(n) -a(n-8) -592', 'a(n-8) -a(n-9) -74', 'a(n-7) -a(n-9) -148', 'a(n-6) -a(n-9) -222', 'a(n-5) -a(n-9) -296', 'a(n-4) -a(n-9) -370', 'a(n-3) -a(n-9) -444', 'a(n-2) -a(n-9) -518', 'a(n-1) -a(n-9) -592', 'a(n) -a(n-9) -666', 'a(n-9) -a(n-10) -74', 'a(n-8) -a(n-10) -148', 'a(n-7) -a(n-10) -222', 'a(n-6) -a(n-10) -296', 'a(n-5) -a(n-10) -370', 'a(n-4) -a(n-10) -444', 'a(n-3) -a(n-10) -518', 'a(n-2) -a(n-10) -592', 'a(n-1) -a(n-10) -666', 'a(n) -a(n-10) -740', 'a(n-10) -a(n-11) -74', 'a(n-9) -a(n-11) -148', 'a(n-8) -a(n-11) -222', 'a(n-7) -a(n-11) -296', 'a(n-6) -a(n-11) -370', 'a(n-5) -a(n-11) -444', 'a(n-4) -a(n-11) -518', 'a(n-3) -a(n-11) -592', 'a(n-2) -a(n-11) -666', 'a(n-1) -a(n-11) -740', 'a(n-11) -a(n-12) -74', 'a(n-10) -a(n-12) -148', 'a(n-9) -a(n-12) -222', 'a(n-8) -a(n-12) -296', 'a(n-7) -a(n-12) -370', 'a(n-6) -a(n-12) -444', 'a(n-5) -a(n-12) -518', 'a(n-4) -a(n-12) -592', 'a(n-3) -a(n-12) -666', 'a(n-2) -a(n-12) -740', 'a(n-12) -a(n-13) -74', 'a(n-11) -a(n-13) -148', 'a(n-10) -a(n-13) -222', 'a(n-9) -a(n-13) -296', 'a(n-8) -a(n-13) -370', 'a(n-7) -a(n-13) -444', 'a(n-6) -a(n-13) -518', 'a(n-5) -a(n-13) -592', 'a(n-4) -a(n-13) -666', 'a(n-3) -a(n-13) -740', 'a(n-13) -a(n-14) -74', 'a(n-12) -a(n-14) -148', 'a(n-11) -a(n-14) -222', 'a(n-10) -a(n-14) -296', 'a(n-9) -a(n-14) -370', 'a(n-8) -a(n-14) -444', 'a(n-7) -a(n-14) -518', 'a(n-6) -a(n-14) -592', 'a(n-5) -a(n-14) -666', 'a(n-4) -a(n-14) -740', 'a(n-14) -a(n-15) -74', 'a(n-13) -a(n-15) -148', 'a(n-12) -a(n-15) -222', 'a(n-11) -a(n-15) -296', 'a(n-10) -a(n-15) -370', 'a(n-9) -a(n-15) -444', 'a(n-8) -a(n-15) -518', 'a(n-7) -a(n-15) -592', 'a(n-6) -a(n-15) -666', 'a(n-5) -a(n-15) -740', 'a(n-15) -a(n-16) -74', 'a(n-14) -a(n-16) -148', 'a(n-13) -a(n-16) -222', 'a(n-12) -a(n-16) -296', 'a(n-11) -a(n-16) -370', 'a(n-10) -a(n-16) -444', 'a(n-9) -a(n-16) -518', 'a(n-8) -a(n-16) -592', 'a(n-7) -a(n-16) -666', 'a(n-6) -a(n-16) -740', 'a(n-16) -a(n-17) -74', 'a(n-15) -a(n-17) -148', 'a(n-14) -a(n-17) -222', 'a(n-13) -a(n-17) -296', 'a(n-12) -a(n-17) -370', 'a(n-11) -a(n-17) -444', 'a(n-10) -a(n-17) -518', 'a(n-9) -a(n-17) -592', 'a(n-8) -a(n-17) -666', 'a(n-7) -a(n-17) -740', 'a(n-17) -a(n-18) -74', 'a(n-16) -a(n-18) -148', 'a(n-15) -a(n-18) -222', 'a(n-14) -a(n-18) -296', 'a(n-13) -a(n-18) -370', 'a(n-12) -a(n-18) -444', 'a(n-11) -a(n-18) -518', 'a(n-10) -a(n-18) -592', 'a(n-9) -a(n-18) -666', 'a(n-8) -a(n-18) -740', 'a(n-18) -a(n-19) -74', 'a(n-17) -a(n-19) -148', 'a(n-16) -a(n-19) -222', 'a(n-15) -a(n-19) -296', 'a(n-14) -a(n-19) -370', 'a(n-13) -a(n-19) -444', 'a(n-12) -a(n-19) -518', 'a(n-11) -a(n-19) -592', 'a(n-10) -a(n-19) -666', 'a(n-9) -a(n-19) -740', 'a(n-19) -a(n-20) -74', 'a(n-18) -a(n-20) -148', 'a(n-17) -a(n-20) -222', 'a(n-16) -a(n-20) -296', 'a(n-15) -a(n-20) -370', 'a(n-14) -a(n-20) -444', 'a(n-13) -a(n-20) -518', 'a(n-12) -a(n-20) -592', 'a(n-11) -a(n-20) -666', 'a(n-10) -a(n-20) -740']
A277986: 
MB not reconst
truth: 
a(n) = 2*a(n - 1) + -1*a(n - 2),  
a(0) = -14, a(1) = 60

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

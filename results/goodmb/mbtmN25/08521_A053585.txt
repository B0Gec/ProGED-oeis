
orders_used: [17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:8522/10000, seq_id:A053585, order:20 took:
 22.9 seconds, i.e. 0.38 minutes or 0.006 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 17.
eqs_explicit:
[]
non_linears:
['n +(363/791)*a(n-11) +(32/791)*a(n-12) +(76/791)*a(n-13) +(120/791)*a(n-14) +(-63/113)*a(n-15) +(464/2373)*a(n-16) +(-413/339)*a(n-17) -44900/2373', 'n +(-8/135)*a(n-13) +(-19/135)*a(n-14) +(-2/9)*a(n-15) +(-41/135)*a(n-16) +(-116/405)*a(n-17) +(-94/405)*a(n-18) -5878/405', 'a(n-1) +(-2/135)*a(n-13) +(434/135)*a(n-14) +(-14/9)*a(n-15) +(-134/135)*a(n-16) +(106/405)*a(n-17) +(-496/405)*a(n-18) -6127/405', 'a(n-5) +(-481/243)*a(n-13) +(-788/243)*a(n-14) +(-14/81)*a(n-15) +(-106/243)*a(n-16) +(-292/729)*a(n-17) +(3238/729)*a(n-18) +9850/729', 'a(n-14)*a(n-18) +(400/243)*a(n-13) +(-346/243)*a(n-14) +(14/81)*a(n-15) +(106/243)*a(n-16) +(-1004/729)*a(n-17) +(-7045/729)*a(n-18) +5540/729', 'a(n-15)*a(n-17) +(4/243)*a(n-13) +(-193/243)*a(n-14) +(-400/81)*a(n-15) +(-101/243)*a(n-16) +(-5288/729)*a(n-17) +(2882/729)*a(n-18) +20030/729', 'a(n-15)^2 +(-254/243)*a(n-13) +(-502/243)*a(n-14) +(-925/81)*a(n-15) +(-512/243)*a(n-16) +(448/729)*a(n-17) +(2888/729)*a(n-18) +32276/729', 'a(n-13)*a(n-15) +(-1097/243)*a(n-13) +(-226/243)*a(n-14) +(-703/81)*a(n-15) +(58/243)*a(n-16) +(-2906/729)*a(n-17) +(4100/729)*a(n-18) +31013/729', 'a(n-12) +(88/405)*a(n-13) +(209/405)*a(n-14) +(22/27)*a(n-15) +(-224/405)*a(n-16) +(1276/1215)*a(n-17) +(-2611/1215)*a(n-18) -14317/1215', 'a(n-8) +(64/405)*a(n-13) +(-1063/405)*a(n-14) +(16/27)*a(n-15) +(-617/405)*a(n-16) +(-3122/1215)*a(n-17) +(6827/1215)*a(n-18) +4094/1215', 'a(n-13)^2 +(-2801/243)*a(n-13) +(-628/243)*a(n-14) +(-160/81)*a(n-15) +(-170/243)*a(n-16) +(-3314/729)*a(n-17) +(5948/729)*a(n-18) +36038/729', 'a(n-3) -2*a(n-15) +2*a(n-16) -2*a(n-17) +(-2/3)*a(n-18) +(14/3)*a(n-19) -37/3', 'n +(-3/31)*a(n-15) +(-6/31)*a(n-16) +(-9/31)*a(n-17) +(-12/31)*a(n-18) +(-10/31)*a(n-19) -489/31', 'a(n-6) +(-55/31)*a(n-15) +(73/93)*a(n-16) +(1/93)*a(n-17) +(-350/93)*a(n-18) +(44/31)*a(n-19) +149/31', 'a(n-19)^2 +(-22/31)*a(n-15) +(-70/93)*a(n-16) +(-4/31)*a(n-17) +(36/31)*a(n-18) +(-437/93)*a(n-19) +258/31', 'a(n-15)*a(n-19) +(-82/31)*a(n-15) +(-58/93)*a(n-16) +(2/31)*a(n-17) +(44/31)*a(n-18) +(-665/93)*a(n-19) +460/31', 'a(n-14) +(23/31)*a(n-15) +(15/31)*a(n-16) +(7/31)*a(n-17) +(-158/93)*a(n-18) +(-142/93)*a(n-19) -409/93', 'a(n-12) +(11/31)*a(n-15) +(-89/93)*a(n-16) +(33/31)*a(n-17) +(-49/31)*a(n-18) +(110/93)*a(n-19) -222/31', 'a(n-11) +(-42/31)*a(n-15) +(58/93)*a(n-16) +(-64/31)*a(n-17) +(116/93)*a(n-18) +(46/31)*a(n-19) -233/93', 'a(n-4) +(35/31)*a(n-15) +(-23/31)*a(n-16) +(105/31)*a(n-17) +(-15/31)*a(n-18) +(-28/31)*a(n-19) -836/31', 'a(n-18)*a(n-19) +(-16/31)*a(n-15) +(-34/93)*a(n-16) +(14/31)*a(n-17) +(-95/31)*a(n-18) +(-191/93)*a(n-19) +275/31', 'n -a(n-20) -19', 'a(n-14) +(-5/3)*a(n-18) +(2/3)*a(n-20) -8/3', 'a(n-5) -3*a(n-17) -5*a(n-19) +7*a(n-20) -1', 'a(n-19)^2 +(2/3)*a(n-17) +2*a(n-18) -5*a(n-19) +(-8/3)*a(n-20)', 'a(n-13) +(-5/3)*a(n-17) -3*a(n-19) +(11/3)*a(n-20) +1', 'a(n-18)*a(n-20) +(2/3)*a(n-17) -2*a(n-18) +4*a(n-19) +(-23/3)*a(n-20)', 'a(n-16) +2*a(n-17) +3*a(n-18) +4*a(n-19) -7*a(n-20) -23', 'a(n-18)*a(n-19) +(2/3)*a(n-17) -3*a(n-18) -3*a(n-19) +(-2/3)*a(n-20) +7', 'a(n-20)^2 +(2/3)*a(n-17) +2*a(n-18) +4*a(n-19) +(-29/3)*a(n-20) -8', 'a(n-19)*a(n-20) +(2/3)*a(n-17) +2*a(n-18) -a(n-19) +(-17/3)*a(n-20) -3']
A053585: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    


orders_used: [4, 4, 4, 4, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 8, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 9, 8, 10, 10, 10, 10, 11, 10, 11, 11, 10, 11, 11, 11, 11, 11, 12, 11, 10, 13, 12, 11, 14, 13, 12]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:7645/10000, seq_id:A048671, order:20 took:
 38.5 seconds, i.e. 0.64 minutes or 0.011 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 4.
eqs_explicit:
[]
non_linears:
['a(n-3)*a(n-4)^2 +(15/7)*a(n-1)*a(n-4) +(6/7)*a(n-2)*a(n-4) +(-85/14)*a(n-3)*a(n-4) +(-23/14)*a(n-4)^2 +(-15/7)*a(n-1) +(-6/7)*a(n-2) +(71/14)*a(n-3) +(5/7)*a(n-4) +13/14', 'a(n-1)*a(n-4)^2 +(6/7)*a(n-1)*a(n-4) +(22/7)*a(n-2)*a(n-4) +(-55/14)*a(n-3)*a(n-4) +(-47/14)*a(n-4)^2 +(-13/7)*a(n-1) +(-22/7)*a(n-2) +(55/14)*a(n-3) +(-61/7)*a(n-4) +169/14', 'a(n-4)^3 +(-169/7)*a(n-1)*a(n-4) +(-90/7)*a(n-2)*a(n-4) +(309/14)*a(n-3)*a(n-4) +(-47/14)*a(n-4)^2 +(169/7)*a(n-1) +(90/7)*a(n-2) +(-309/14)*a(n-3) +(576/7)*a(n-4) -1119/14', 'a(n-2)*a(n-4)^2 +(-193/7)*a(n-1)*a(n-4) +(-143/7)*a(n-2)*a(n-4) +(333/14)*a(n-3)*a(n-4) +(15/14)*a(n-4)^2 +(193/7)*a(n-1) +(136/7)*a(n-2) +(-333/14)*a(n-3) +(736/7)*a(n-4) -1487/14', 'a(n-6)*a(n-7) +(69/44)*a(n-1) +(51/44)*a(n-2) +(57/88)*a(n-3) +(9/88)*a(n-4) +(-45/22)*a(n-5) +(-49/22)*a(n-6) +(-13/4)*a(n-7) -251/88', 'a(n-5)*a(n-6) +(189/44)*a(n-1) +(111/44)*a(n-2) +(93/88)*a(n-3) +(-27/88)*a(n-4) +(-151/22)*a(n-5) +(-73/22)*a(n-6) +(-21/4)*a(n-7) -479/88', 'a(n-1)*a(n-4) +(-133/88)*a(n-1) +(137/88)*a(n-2) +(223/176)*a(n-3) +(-377/176)*a(n-4) +(81/44)*a(n-5) +(-57/44)*a(n-6) +(-39/8)*a(n-7) -437/176', 'a(n-1)*a(n-2) +(-53/8)*a(n-1) +(-23/8)*a(n-2) +(297/368)*a(n-3) +(33/368)*a(n-4) +(327/92)*a(n-5) +(105/92)*a(n-6) +(1269/184)*a(n-7) +1949/368', 'a(n-2)*a(n-3) +(-333/88)*a(n-1) +(-271/88)*a(n-2) +(-233/176)*a(n-3) +(255/176)*a(n-4) +(177/44)*a(n-5) +(-105/44)*a(n-6) +(33/8)*a(n-7) +1571/176', 'a(n-3)^2 +(135/8)*a(n-1) +(93/8)*a(n-2) +(-611/368)*a(n-3) +(-27/368)*a(n-4) +(-1773/92)*a(n-5) +(-939/92)*a(n-6) +(-5655/184)*a(n-7) -9423/368', 'a(n-1)^2 +(15/8)*a(n-1) +(53/8)*a(n-2) +(2357/368)*a(n-3) +(957/368)*a(n-4) +(-1557/92)*a(n-5) +(-819/92)*a(n-6) +(-5151/184)*a(n-7) -151/368', 'n +(-15/44)*a(n-1) +(-13/44)*a(n-2) +(-725/2024)*a(n-3) +(-837/2024)*a(n-4) +(-39/506)*a(n-5) +(-129/506)*a(n-6) +(21/92)*a(n-7) -7281/2024', 'a(n-7)^2 +(-3/22)*a(n-1) +(-7/22)*a(n-2) +(-497/1012)*a(n-3) +(-229/1012)*a(n-4) +(265/253)*a(n-5) +(137/253)*a(n-6) +(-309/46)*a(n-7) +7203/1012', 'a(n-2)*a(n-7) +(-63/88)*a(n-1) +(-125/88)*a(n-2) +(-317/4048)*a(n-3) +(251/4048)*a(n-4) +(505/1012)*a(n-5) +(347/1012)*a(n-6) +(-3/184)*a(n-7) +9583/4048', 'a(n-7)*a(n-8) -a(n-7) -a(n-8) +1', 'a(n-6)*a(n-8) +(5/46)*a(n-3) +(5/23)*a(n-4) +(5/46)*a(n-5) +(-33/23)*a(n-6) +(-5/23)*a(n-7) +(-93/23)*a(n-8) +83/23', 'n +(-1/23)*a(n-3) +(-5/23)*a(n-4) +(-9/23)*a(n-5) +(-12/23)*a(n-6) +(-12/23)*a(n-7) +(-6/23)*a(n-8) -125/23', 'a(n-5)*a(n-8) +(-5/46)*a(n-3) +(-5/23)*a(n-4) +(-51/46)*a(n-5) +(10/23)*a(n-6) +(5/23)*a(n-7) +(-68/23)*a(n-8) +78/23', 'a(n-3)*a(n-8) +(-41/46)*a(n-3) +(5/23)*a(n-4) +(5/46)*a(n-5) +(-10/23)*a(n-6) +(-5/23)*a(n-7) +(-24/23)*a(n-8) +14/23', 'a(n-1) +(13/46)*a(n-3) +(5/23)*a(n-4) +(-45/46)*a(n-5) +(8/23)*a(n-6) +(-35/23)*a(n-7) +(11/23)*a(n-8) -75/23', 'a(n-7)^2 +(-5/23)*a(n-3) +(-3/46)*a(n-4) +(43/46)*a(n-5) +(4/23)*a(n-6) +(-165/23)*a(n-7) +(-9/23)*a(n-8) +271/46', 'a(n-4)*a(n-7) +(5/23)*a(n-3) +(-31/46)*a(n-4) +(35/46)*a(n-5) +(5/23)*a(n-6) +(-83/23)*a(n-7) +(-15/23)*a(n-8) +41/46', 'a(n-4)*a(n-6) +(19/46)*a(n-3) +(-53/46)*a(n-4) +(7/23)*a(n-5) +(-66/23)*a(n-6) +(-9/23)*a(n-7) +(-84/23)*a(n-8) +183/46', 'a(n-2) +(17/23)*a(n-3) +(19/46)*a(n-4) +(3/46)*a(n-5) +(-30/23)*a(n-6) +(-18/23)*a(n-7) +(-33/23)*a(n-8) -113/46', 'a(n-8)*a(n-9) -a(n-8) -a(n-9) +1', 'a(n-7)*a(n-8) -a(n-7) -a(n-8) +1', 'a(n-3) +(-2/5)*a(n-5) +(-3/5)*a(n-6) +(-8/5)*a(n-7) +(2/5)*a(n-8) +(-2/5)*a(n-9) +11/5', 'a(n-4) +(11/10)*a(n-5) +(9/10)*a(n-6) +(2/5)*a(n-7) +(-8/5)*a(n-8) +(-7/5)*a(n-9) -63/10', 'a(n-6)*a(n-8) +(-2/23)*a(n-5) +(-36/23)*a(n-6) +(-3/23)*a(n-7) +(-86/23)*a(n-8) +(8/23)*a(n-9) +109/23', 'a(n-5)*a(n-8) +(-21/23)*a(n-5) +(13/23)*a(n-6) +(3/23)*a(n-7) +(-75/23)*a(n-8) +(-8/23)*a(n-9) +52/23', 'a(n-9)^2 +(-9/46)*a(n-5) +(-1/46)*a(n-6) +(22/23)*a(n-7) +(2/23)*a(n-8) +(-166/23)*a(n-9) +249/46', 'a(n-7)*a(n-9) +(9/92)*a(n-5) +(1/92)*a(n-6) +(-34/23)*a(n-7) +(-1/23)*a(n-8) +(-179/46)*a(n-9) +395/92', 'a(n-6)*a(n-9) +(-9/92)*a(n-5) +(-93/92)*a(n-6) +(11/23)*a(n-7) +(1/23)*a(n-8) +(-143/46)*a(n-9) +249/92', 'a(n-8)^2 +(4/23)*a(n-5) +(26/23)*a(n-6) +(6/23)*a(n-7) +(-173/23)*a(n-8) +(-16/23)*a(n-9) +104/23', 'a(n-10)^2 -3*a(n-10) +2', 'a(n-9)*a(n-10) -a(n-9) -a(n-10) +1', 'a(n-8)*a(n-10) -a(n-8) -6*a(n-10) +6', 'a(n-7)*a(n-10) -a(n-7) -a(n-10) +1', 'a(n-8)*a(n-9) -a(n-8) -a(n-9) +1', 'a(n-7)*a(n-8) -a(n-7) -a(n-8) +1', 'a(n-8)^2 -3*a(n-8) -20*a(n-10) +22', 'n +(-1/3)*a(n-7) +(-4/3)*a(n-8) +(-2/3)*a(n-9) +(10/3)*a(n-10) -32/3', 'a(n-4) +(-5/9)*a(n-7) +(-32/9)*a(n-8) +(2/9)*a(n-9) +(74/9)*a(n-10) -43/9', 'a(n-3) +(-11/9)*a(n-7) +(-2/9)*a(n-8) +(-10/9)*a(n-9) +(26/9)*a(n-10) -28/9', 'a(n-11)^2 -3*a(n-11) +2', 'a(n-10)^2 -3*a(n-10) +2', 'a(n-10)*a(n-11) -a(n-10) -a(n-11) +1', 'a(n-9)*a(n-11) -a(n-9) -6*a(n-11) +6', 'a(n-9)*a(n-10) -a(n-9) -a(n-10) +1', 'a(n-7) -5*a(n-9) +22*a(n-11) -18', 'a(n-9)^2 -3*a(n-9) -20*a(n-11) +22', 'a(n-1) -11*a(n-9) +42*a(n-11) -32', 'a(n-8) +a(n-9) -4*a(n-10) -4*a(n-11) +5', 'a(n-5) -3*a(n-9) -2*a(n-10) +6*a(n-11) -2', 'a(n-12) -1', 'a(n-11)^2 -3*a(n-11) +2', 'a(n-10)^2 -3*a(n-10) +2', 'a(n-13) -1', 'a(n-12) -1', 'a(n-11)^2 -3*a(n-11) +2', 'a(n-14) -1', 'a(n-13) -1', 'a(n-12) -1']
A048671: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

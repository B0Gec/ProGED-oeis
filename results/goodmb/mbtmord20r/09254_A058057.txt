
orders_used: [2, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 4, 4, 5, 5, 4, 5, 5, 5, 5, 5, 6, 5, 4, 6]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:9255/10000, seq_id:A058057, order:20 took:
 26.5 seconds, i.e. 0.44 minutes or 0.007 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 2.
eqs_explicit:
['a(n) = -28*n/23 + 32*a(n-6)/23 + 26*a(n-5)*a(n-1)/23 - 51*a(n-5)/23 + 97*a(n-4)/23 - 3*a(n-3)/23 + 44*a(n-2)/23 - 30*a(n-1)/23 + 169/23']
non_linears:
['a(n-1)*a(n-2)^2 -7*a(n-1)*a(n-2) -a(n-2)^2 +6*a(n-1) +7*a(n-2) -6', 'a(n-2)*a(n-3)^2 -7*a(n-2)*a(n-3) -a(n-3)^2 +6*a(n-2) +7*a(n-3) -6', 'a(n-2)^2*a(n-3) -a(n-2)^2 -7*a(n-2)*a(n-3) +7*a(n-2) +6*a(n-3) -6', 'a(n-1)*a(n-2)^2 -7*a(n-1)*a(n-2) -a(n-2)^2 +6*a(n-1) +7*a(n-2) -6', 'a(n-3)^3 +(-18/5)*a(n-2)*a(n-3) -4*a(n-3)^2 +(18/5)*a(n-2) +(33/5)*a(n-3) -18/5', 'a(n-1)*a(n-3)^2 -a(n-1)*a(n-3) +(-42/5)*a(n-2)*a(n-3) -a(n-3)^2 +(42/5)*a(n-2) +(47/5)*a(n-3) -42/5', 'a(n-1)*a(n-2)*a(n-3) -a(n-1)*a(n-2) -a(n-1)*a(n-3) -8*a(n-2)*a(n-3) +a(n-1) +8*a(n-2) +8*a(n-3) -8', 'a(n)*a(n-3) +(-1/2)*a(n-1)*a(n-3) +(1/2)*a(n-2)*a(n-3) +(-1/3)*a(n-3)^2 -a(n) +(1/2)*a(n-1) +(-1/2)*a(n-2) +(1/3)*a(n-3)', 'n*a(n-3) +(-3/2)*a(n-1)*a(n-3) +(23/10)*a(n-2)*a(n-3) +(-5/3)*a(n-3)^2 -n +(3/2)*a(n-1) +(-23/10)*a(n-2) +(-62/15)*a(n-3) +29/5', 'a(n-2)^3 +(-18/5)*a(n-1)*a(n-2) -4*a(n-2)^2 +(36/25)*a(n-2)*a(n-3) +(18/5)*a(n-1) +(129/25)*a(n-2) +(-36/25)*a(n-3) -54/25', 'n*a(n-2)^2 -n*a(n-2) +(-24/5)*a(n-1)*a(n-2) -9*a(n-2)^2 +(18/25)*a(n-2)*a(n-3) +(24/5)*a(n-1) +(327/25)*a(n-2) +(-18/25)*a(n-3) -102/25', 'a(n-4)^3 -4*a(n-4)^2 +3*a(n-4)', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n-2)*a(n-4)^2 -a(n-2)*a(n-4) -a(n-4)^2 +a(n-4)', 'a(n)*a(n-4) +(-5/3)*a(n-4)^2 -a(n) +(2/3)*a(n-4) +1', 'a(n-2)*a(n-3)^2 -7*a(n-2)*a(n-3) -a(n-3)^2 +6*a(n-2) +7*a(n-3) -6', 'a(n-3)^3 +(-18/5)*a(n-2)*a(n-3) -4*a(n-3)^2 +(18/5)*a(n-2) +(33/5)*a(n-3) -18/5', 'a(n-1)*a(n-4) +(-1/2)*a(n-2)*a(n-4) +(-1/3)*a(n-4)^2 -a(n-1) +(1/2)*a(n-2) +(5/6)*a(n-4) -1/2', 'n*a(n-4) +(-3/2)*a(n-2)*a(n-4) +(-5/3)*a(n-4)^2 -n +(3/2)*a(n-2) +(-17/6)*a(n-4) +9/2', 'a(n-5)^3 -4*a(n-5)^2 +3*a(n-5)', 'a(n-4)*a(n-5) -a(n-4) -a(n-5) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n-3)*a(n-5)^2 -a(n-3)*a(n-5) -a(n-5)^2 +a(n-5)', 'a(n-1)*a(n-5) +(-5/3)*a(n-5)^2 -a(n-1) +(2/3)*a(n-5) +1', 'a(n)*a(n-5) +a(n-3)*a(n-5) -a(n-5)^2 -a(n) -a(n-3) -3*a(n-5) +4', 'a(n-2)*a(n-5) +(-1/2)*a(n-3)*a(n-5) +(-1/3)*a(n-5)^2 -a(n-2) +(1/2)*a(n-3) +(5/6)*a(n-5) -1/2', 'n*a(n-5) +(-3/2)*a(n-3)*a(n-5) +(-5/3)*a(n-5)^2 -n +(3/2)*a(n-3) +(-23/6)*a(n-5) +11/2', 'a(n-5)*a(n-6) -a(n-5) -a(n-6) +1', 'a(n-4)*a(n-5) -a(n-4) -a(n-5) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n-1)*a(n-5) +(-23/26)*a(n) +(-14/13)*n +(-15/13)*a(n-1) +(22/13)*a(n-2) +(-3/26)*a(n-3) +(97/26)*a(n-4) +(-51/26)*a(n-5) +(16/13)*a(n-6) +13/2']
A058057: 
a(n) = -28*n/23 + 32*a(n-6)/23 + 26*a(n-5)*a(n-1)/23 - 51*a(n-5)/23 + 97*a(n-4)/23 - 3*a(n-3)/23 + 44*a(n-2)/23 - 30*a(n-1)/23 + 169/23
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    


orders_used: [17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:1127/10000, seq_id:A006305, order:20 took:
 21.7 seconds, i.e. 0.36 minutes or 0.006 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 17.
eqs_explicit:
[]
non_linears:
['n +(-60/509)*a(n-11) +(-114/509)*a(n-12) +(39/509)*a(n-13) +(228/509)*a(n-14) +(235/509)*a(n-15) +(-76/509)*a(n-16) +(-167/509)*a(n-17) -7708/509', 'a(n-10) +(-922/509)*a(n-11) +(-123/509)*a(n-12) +(243/509)*a(n-13) +(755/509)*a(n-14) +(133/509)*a(n-15) +(-1609/509)*a(n-16) +(1387/509)*a(n-17) +15/509', 'a(n-9) +(-677/509)*a(n-11) +(-930/509)*a(n-12) +(-298/509)*a(n-13) +(842/509)*a(n-14) +(658/509)*a(n-15) +(398/509)*a(n-16) +(245/509)*a(n-17) -3462/509', 'a(n-7) -10*a(n-13) -6*a(n-14) +(13/3)*a(n-15) +(52/3)*a(n-16) +(20/3)*a(n-17) +(-28/3)*a(n-18) -160/3', 'a(n-17)^2 -20*a(n-13) +58*a(n-14) +(250/3)*a(n-15) +(-212/3)*a(n-16) +(-367/3)*a(n-17) +(-382/3)*a(n-18) -328/3', 'n +(-12/37)*a(n-13) +(-3/37)*a(n-14) +(14/37)*a(n-15) +(25/37)*a(n-16) +(2/37)*a(n-17) +(-21/37)*a(n-18) -611/37', 'a(n-11) +(-66/37)*a(n-13) +(-72/37)*a(n-14) +(46/111)*a(n-15) +(394/111)*a(n-16) +(-4/111)*a(n-17) +(-106/111)*a(n-18) -628/111', 'a(n-8) +(-239/37)*a(n-13) +(-217/37)*a(n-14) +(137/37)*a(n-15) +(464/37)*a(n-16) +(157/37)*a(n-17) +(-261/37)*a(n-18) -1251/37', 'a(n-12) +(-63/74)*a(n-13) +(-99/74)*a(n-14) +(-131/222)*a(n-15) +(403/222)*a(n-16) +(383/222)*a(n-17) +(-451/222)*a(n-18) -697/222', 'a(n-9) +(-167/37)*a(n-13) +(-125/37)*a(n-14) +(85/111)*a(n-15) +(979/111)*a(n-16) +(398/111)*a(n-17) +(-553/111)*a(n-18) -2227/111', 'a(n-10) +(-219/74)*a(n-13) +(-175/74)*a(n-14) +(193/222)*a(n-15) +(823/222)*a(n-16) +(683/222)*a(n-17) +(-493/222)*a(n-18) -2437/222', 'a(n-18)^2 +(-416/37)*a(n-13) +(1006/37)*a(n-14) +(1620/37)*a(n-15) +(-1156/37)*a(n-16) +(-1978/37)*a(n-17) +(-2615/37)*a(n-18) -1966/37', 'a(n-17)*a(n-18) +(-558/37)*a(n-13) +(1470/37)*a(n-14) +(2242/37)*a(n-15) +(-1742/37)*a(n-16) +(-2978/37)*a(n-17) +(-3548/37)*a(n-18) -2826/37', 'n +(-1/3)*a(n-15) +(-2/3)*a(n-16) +a(n-17) +(2/3)*a(n-18) +(1/3)*a(n-19) -52/3', 'a(n-18)*a(n-19) +28*a(n-15) +12*a(n-16) -32*a(n-17) -52*a(n-18) -54*a(n-19) -68', 'a(n-13) -2*a(n-15) +(-10/3)*a(n-16) +(8/3)*a(n-17) +(10/3)*a(n-18) +(1/3)*a(n-19) -8/3', 'a(n-14) +(-7/9)*a(n-15) +(-29/9)*a(n-16) +a(n-17) +(17/9)*a(n-18) +(25/9)*a(n-19) +5/9', 'a(n-12) +(-10/3)*a(n-15) +(-16/3)*a(n-16) +(16/3)*a(n-17) +(10/3)*a(n-18) +4*a(n-19) -14/3', 'a(n-11) +(-14/3)*a(n-15) +(-26/3)*a(n-16) +(20/3)*a(n-17) +(26/3)*a(n-18) +6*a(n-19) -28/3', 'a(n-9) +(-98/9)*a(n-15) +(-154/9)*a(n-16) +19*a(n-17) +(148/9)*a(n-18) +(98/9)*a(n-19) -272/9', 'a(n-10) +(-62/9)*a(n-15) +(-124/9)*a(n-16) +(40/3)*a(n-17) +(109/9)*a(n-18) +(68/9)*a(n-19) -158/9', 'a(n-7) +(-61/3)*a(n-15) +(-106/3)*a(n-16) +(118/3)*a(n-17) +(106/3)*a(n-18) +20*a(n-19) -230/3', 'a(n-19)^2 +(166/9)*a(n-15) +(68/9)*a(n-16) -20*a(n-17) +(-290/9)*a(n-18) +(-355/9)*a(n-19) -422/9', 'a(n-16) -a(n-17) +(-1/2)*a(n-19) -a(n-20) -2', 'a(n-15) -4*a(n-17) +a(n-18) +(3/2)*a(n-19) +2*a(n-20) -1', 'a(n-20)^2 +26*a(n-17) -20*a(n-18) -23*a(n-19) -21*a(n-20) -10', 'a(n-19)*a(n-20) +40*a(n-17) -32*a(n-18) -38*a(n-19) -26*a(n-20) -12', 'a(n-18)*a(n-20) +60*a(n-17) -50*a(n-18) -54*a(n-19) -40*a(n-20) -16', 'a(n-17)*a(n-20) +86*a(n-17) -72*a(n-18) -78*a(n-19) -58*a(n-20) -20', 'a(n-18)*a(n-19) +92*a(n-17) -80*a(n-18) -90*a(n-19) -44*a(n-20) -16', 'a(n-6) -104*a(n-17) +74*a(n-18) +49*a(n-19) +5*a(n-20) -240']
A006305: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

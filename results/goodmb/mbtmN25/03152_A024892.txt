
orders_used: [16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:3153/10000, seq_id:A024892, order:20 took:
 33.4 seconds, i.e. 0.56 minutes or 0.009 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 16.
eqs_explicit:
['a(n) = -a(n-19)/2 + a(n-18)/2 + 3*a(n-16)/4 + a(n-15)/4 + 105/2']
non_linears:
['a(n-15)*a(n-16) +(-188/5)*a(n-9) +(-128/5)*a(n-10) -6*a(n-11) +(34/5)*a(n-12) +32*a(n-13) +(116/5)*a(n-14) +(-62/5)*a(n-15) +(2/5)*a(n-16) +4616/5', 'a(n-11)*a(n-13) +(-404/5)*a(n-9) +(-164/5)*a(n-10) -22*a(n-11) +(22/5)*a(n-12) +22*a(n-13) +(128/5)*a(n-14) +(-56/5)*a(n-15) +(316/5)*a(n-16) +10468/5', 'a(n-8) +(-2/23)*a(n-9) +(-10/23)*a(n-10) +(-4/23)*a(n-11) +(-25/46)*a(n-12) +(3/46)*a(n-13) +(12/23)*a(n-14) +(-17/23)*a(n-15) +(5/23)*a(n-16) -131/23', 'n +(9/115)*a(n-9) +(-1/115)*a(n-10) +(-1/23)*a(n-11) +(-7/115)*a(n-12) +(-5/46)*a(n-13) +(-8/115)*a(n-14) +(-4/115)*a(n-15) +(-11/115)*a(n-16) -1653/115', 'a(n-3) +(-7/115)*a(n-9) +(-12/115)*a(n-10) +(-12/23)*a(n-11) +(-53/230)*a(n-12) +(9/46)*a(n-13) +(19/115)*a(n-14) +(-48/115)*a(n-15) +(-17/115)*a(n-16) -3391/115', 'a(n-13)*a(n-16) +(-876/23)*a(n-9) +(-792/23)*a(n-10) +(-234/23)*a(n-11) +(22/23)*a(n-12) +(450/23)*a(n-13) +(702/23)*a(n-14) +(98/23)*a(n-15) +(74/23)*a(n-16) +28412/23', 'a(n-5) +(-61/115)*a(n-9) +(-6/115)*a(n-10) +(11/46)*a(n-11) +(-199/230)*a(n-12) +(-15/23)*a(n-13) +(-48/115)*a(n-14) +(-24/115)*a(n-15) +(164/115)*a(n-16) -833/115', 'a(n-2) +(98/115)*a(n-9) +(-62/115)*a(n-10) +(-9/46)*a(n-11) +(26/115)*a(n-12) +(-11/46)*a(n-13) +(-36/115)*a(n-14) +(-18/115)*a(n-15) +(-107/115)*a(n-16) -5426/115', 'a(n-1) +(41/115)*a(n-9) +(21/115)*a(n-10) +(19/46)*a(n-11) +(32/115)*a(n-12) +(-33/46)*a(n-13) +(-62/115)*a(n-14) +(-31/115)*a(n-15) +(-114/115)*a(n-16) -6572/115', 'a(n-12)*a(n-13) +(-916/23)*a(n-9) +(-808/23)*a(n-10) +(-222/23)*a(n-11) +(-274/23)*a(n-12) +(204/23)*a(n-13) +(712/23)*a(n-14) +(80/23)*a(n-15) +(404/23)*a(n-16) +32508/23', 'n +(-1/106)*a(n-11) +(-5/106)*a(n-12) +(-7/106)*a(n-13) +(-4/53)*a(n-14) +(-4/53)*a(n-15) +(-2/53)*a(n-16) +(-1/53)*a(n-17) -740/53', 'a(n-10) +(1/106)*a(n-11) +(5/106)*a(n-12) +(7/106)*a(n-13) +(-45/106)*a(n-14) +(4/53)*a(n-15) +(2/53)*a(n-16) +(-52/53)*a(n-17) -956/53', 'a(n-9) +(-23/53)*a(n-11) +(-9/53)*a(n-12) +(-57/106)*a(n-13) +(3/106)*a(n-14) +(28/53)*a(n-15) +(-39/53)*a(n-16) +(7/53)*a(n-17) -385/53', 'a(n-8) +(-11/53)*a(n-11) +(-57/106)*a(n-12) +(5/106)*a(n-13) +(18/53)*a(n-14) +(-35/53)*a(n-15) +(9/53)*a(n-16) +(-22/53)*a(n-17) -751/53', 'a(n-6) +(-5/106)*a(n-11) +(14/53)*a(n-12) +(-44/53)*a(n-13) +(-93/106)*a(n-14) +(-20/53)*a(n-15) +(-10/53)*a(n-16) +(48/53)*a(n-17) -891/53', 'a(n-4) +(-11/106)*a(n-11) +(-55/106)*a(n-12) +(-12/53)*a(n-13) +(9/53)*a(n-14) +(9/53)*a(n-15) +(-22/53)*a(n-16) +(-11/53)*a(n-17) -1621/53', 'a(n-3) +(-29/53)*a(n-11) +(-25/106)*a(n-12) +(9/53)*a(n-13) +(13/106)*a(n-14) +(-20/53)*a(n-15) +(-10/53)*a(n-16) +(-5/53)*a(n-17) -1686/53', 'a(n-5) +(1/106)*a(n-11) +(-101/106)*a(n-12) +(-99/106)*a(n-13) +(-45/106)*a(n-14) +(4/53)*a(n-15) +(55/53)*a(n-16) +(1/53)*a(n-17) -638/53', 'a(n-1) +(30/53)*a(n-11) +(35/106)*a(n-12) +(-57/106)*a(n-13) +(-25/53)*a(n-14) +(-25/53)*a(n-15) +(-39/53)*a(n-16) +(7/53)*a(n-17) -2717/53', 'a(n-7) +(39/53)*a(n-11) +(36/53)*a(n-12) +(69/106)*a(n-13) +(-65/106)*a(n-14) +(-59/53)*a(n-15) +(-56/53)*a(n-16) +(-28/53)*a(n-17) -2435/53', 'a(n-13)*a(n-14) -4*a(n-13) -4*a(n-14) +20*a(n-15) -24*a(n-17) -36*a(n-18) -96', 'n +(-2/47)*a(n-13) +(-3/47)*a(n-14) +(-7/94)*a(n-15) +(-4/47)*a(n-16) +(-2/47)*a(n-17) +(-1/47)*a(n-18) -713/47', 'a(n-11) +(2/47)*a(n-13) +(3/47)*a(n-14) +(-20/47)*a(n-15) +(4/47)*a(n-16) +(2/47)*a(n-17) +(-46/47)*a(n-18) -838/47', 'a(n-10) +(2/47)*a(n-13) +(-41/94)*a(n-14) +(7/94)*a(n-15) +(4/47)*a(n-16) +(-45/47)*a(n-17) +(1/47)*a(n-18) -791/47', 'a(n-9) +(-41/94)*a(n-13) +(9/94)*a(n-14) +(17/47)*a(n-15) +(-41/47)*a(n-16) +(3/47)*a(n-17) +(-22/47)*a(n-18) -881/47', 'a(n-6) +(-45/47)*a(n-13) +(-44/47)*a(n-14) +(-20/47)*a(n-15) +(4/47)*a(n-16) +(49/47)*a(n-17) +(1/47)*a(n-18) -556/47', 'a(n-2) +(5/94)*a(n-13) +(-63/94)*a(n-14) +(-25/47)*a(n-15) +(5/47)*a(n-16) +(-21/47)*a(n-17) +(13/47)*a(n-18) -1823/47', 'a(n-12) +(23/47)*a(n-13) +(11/47)*a(n-14) +(5/47)*a(n-15) +(-48/47)*a(n-16) +(-24/47)*a(n-17) +(-12/47)*a(n-18) -1036/47', 'a(n-7) +(27/94)*a(n-13) +(-77/94)*a(n-14) +(-41/47)*a(n-15) +(-20/47)*a(n-16) +(-10/47)*a(n-17) +(42/47)*a(n-18) -839/47', 'a(n-5) +(-22/47)*a(n-13) +(-19/94)*a(n-14) +(17/94)*a(n-15) +(3/47)*a(n-16) +(-22/47)*a(n-17) +(-11/47)*a(n-18) -1545/47', 'n +(1/2)*a(n-16) -a(n-19) -22', 'a(n-9) -5*a(n-16) -a(n-17) -a(n-18) +7*a(n-19) +14', 'a(n-11) +(-1/2)*a(n-15) +(-1/2)*a(n-16) -a(n-18) +a(n-19) -11', 'a(n-6) +(1/2)*a(n-15) +(13/2)*a(n-16) +a(n-17) -11*a(n-19) -97', 'a(n-3) +(-3/4)*a(n-15) +(-5/4)*a(n-16) +(-1/2)*a(n-18) +(3/2)*a(n-19) -63/2', 'a(n) +(-1/4)*a(n-15) +(-3/4)*a(n-16) +(-1/2)*a(n-18) +(1/2)*a(n-19) -105/2']
A024892: 
a(n) = -a(n-19)/2 + a(n-18)/2 + 3*a(n-16)/4 + a(n-15)/4 + 105/2
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

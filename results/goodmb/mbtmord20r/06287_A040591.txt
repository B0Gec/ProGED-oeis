
orders_used: [1, 1, 1, 2, 1, 3, 2, 1, 4, 3, 2, 1, 5, 4, 3, 2, 1, 6, 5, 4, 3, 2, 1, 7, 7, 6, 5, 4, 3, 2, 8, 8, 7, 7, 6, 5, 4, 9, 9, 8, 7, 6, 10, 10, 9, 8, 10, 10]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:6288/10000, seq_id:A040591, order:20 took:
 24.6 seconds, i.e. 0.41 minutes or 0.007 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
eqs_explicit:
['a(n) = 47*a(n-10)/23 - 72*a(n-7)/115 - 48/115']
non_linears:
['a(n)*a(n-1) -a(n) -a(n-1) +1', 'n*a(n-1)^3 +(-181/5)*n*a(n-1)^2 -8*a(n-1)^3 +160*n*a(n-1) +(1196/5)*a(n-1)^2 +(-624/5)*n -1028*a(n-1) +3984/5', 'a(n-1)^4 +(-1512/25)*n*a(n-1)^2 +(-259/5)*a(n-1)^3 +(1512/5)*n*a(n-1) +(21142/25)*a(n-1)^2 +(-6048/25)*n +(-16128/5)*a(n-1) +60768/25', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-2)*a(n-3) -a(n-2) -a(n-3) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n-2)*a(n-3) -a(n-2) -a(n-3) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-4)*a(n-5) -a(n-4) -a(n-5) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n-2)*a(n-3) -a(n-2) -a(n-3) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-5)*a(n-6) -a(n-5) -a(n-6) +1', 'a(n-4)*a(n-5) -a(n-4) -a(n-5) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n-2)*a(n-3) -a(n-2) -a(n-3) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-6)*a(n-7) -a(n-6) -a(n-7) +1', 'a(n-3)*a(n-7) -a(n-3) -a(n-7) +1', 'a(n-5)*a(n-6) -a(n-5) -a(n-6) +1', 'a(n-4)*a(n-5) -a(n-4) -a(n-5) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n-2)*a(n-3) -a(n-2) -a(n-3) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n-7)*a(n-8) -a(n-7) -a(n-8) +1', 'a(n-4)*a(n-8) -a(n-4) -a(n-8) +1', 'a(n-6)*a(n-7) -a(n-6) -a(n-7) +1', 'a(n-3)*a(n-7) -a(n-3) -a(n-7) +1', 'a(n-5)*a(n-6) -a(n-5) -a(n-6) +1', 'a(n-4)*a(n-5) -a(n-4) -a(n-5) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n-8)*a(n-9) -a(n-8) -a(n-9) +1', 'a(n-5)*a(n-9) -a(n-5) -a(n-9) +1', 'a(n-7)*a(n-8) -a(n-7) -a(n-8) +1', 'a(n-6)*a(n-7) -a(n-6) -a(n-7) +1', 'a(n-5)*a(n-6) -a(n-5) -a(n-6) +1', 'a(n-9)*a(n-10) -a(n-9) -a(n-10) +1', 'a(n-7)*a(n-10) -4*a(n-7) -a(n-10) +4', 'a(n-8)*a(n-9) -a(n-8) -a(n-9) +1', 'a(n-7)*a(n-8) -a(n-7) -a(n-8) +1', 'a(n-10)^2 +12*a(n-7) -25*a(n-10) +12', 'a(n) +(72/115)*a(n-7) +(-47/23)*a(n-10) +48/115']
A040591: 
a(n) = 47*a(n-10)/23 - 72*a(n-7)/115 - 48/115
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

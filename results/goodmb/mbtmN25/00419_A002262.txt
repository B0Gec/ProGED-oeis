
orders_used: [1, 1, 2, 2, 2, 3, 3, 3, 2, 2, 4, 4, 4, 3, 3, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:420/10000, seq_id:A002262, order:20 took:
 44.8 seconds, i.e. 0.75 minutes or 0.012 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
eqs_explicit:
['a(n) = -3*a(n-19)/2 - 3*a(n-18)/2 - 3*a(n-17)/2 - a(n-16)/2 + 3*a(n-15)/2 + 4']
non_linears:
['a(n)^2 -a(n)*a(n-1) -a(n)', 'a(n)*a(n-1)^2 -a(n-1)^3 -2*a(n)*n +3*a(n)*a(n-1) +2*n*a(n-1) -4*a(n-1)^2 +2*a(n) +2*n -5*a(n-1) -2', 'a(n-1)^2 -a(n-1)*a(n-2) -a(n-1)', 'a(n)*a(n-1) -a(n)*a(n-2) -a(n) -a(n-1) +a(n-2) +1', 'a(n)^2 -a(n)*a(n-2) -2*a(n) -a(n-1) +a(n-2) +1', 'a(n-2)^2 -a(n-2)*a(n-3) -a(n-2)', 'a(n-1)*a(n-2) -a(n-1)*a(n-3) -a(n-1) -a(n-2) +a(n-3) +1', 'a(n-1)^2 -a(n-1)*a(n-3) -2*a(n-1) -a(n-2) +a(n-3) +1', 'a(n)*a(n-1) -a(n)*a(n-2) -a(n) -a(n-1) +a(n-2) +1', 'a(n)^2 -a(n)*a(n-2) -2*a(n) -a(n-1) +a(n-2) +1', 'a(n-3)^2 -a(n-3)*a(n-4) -a(n-3)', 'a(n-2)*a(n-3) -a(n-2)*a(n-4) -a(n-2) -a(n-3) +a(n-4) +1', 'a(n-2)^2 -a(n-2)*a(n-4) -2*a(n-2) -a(n-3) +a(n-4) +1', 'a(n-1)*a(n-2) -a(n-1)*a(n-3) -a(n-1) -a(n-2) +a(n-3) +1', 'a(n-1)^2 -a(n-1)*a(n-3) -2*a(n-1) -a(n-2) +a(n-3) +1', 'a(n-4)^2 -a(n-4)*a(n-5) -a(n-4)', 'a(n-3)*a(n-4) -a(n-3)*a(n-5) -a(n-3) -a(n-4) +a(n-5) +1', 'a(n-3)^2 -a(n-3)*a(n-5) -2*a(n-3) -a(n-4) +a(n-5) +1', 'a(n-5)^2 -a(n-5)*a(n-6) -a(n-5)', 'a(n-4)*a(n-5) -a(n-4)*a(n-6) -a(n-4) -a(n-5) +a(n-6) +1', 'a(n-4)^2 -a(n-4)*a(n-6) -2*a(n-4) -a(n-5) +a(n-6) +1', 'a(n-6)^2 -a(n-6)*a(n-7) -a(n-6)', 'a(n-5)*a(n-6) -a(n-5)*a(n-7) -a(n-5) -a(n-6) +a(n-7) +1', 'a(n-5)^2 -a(n-5)*a(n-7) -2*a(n-5) -a(n-6) +a(n-7) +1', 'a(n-7)^2 -a(n-7)*a(n-8) -a(n-7)', 'a(n-6)*a(n-7) -a(n-6)*a(n-8) -a(n-6) -a(n-7) +a(n-8) +1', 'a(n-6)^2 -a(n-6)*a(n-8) -2*a(n-6) -a(n-7) +a(n-8) +1', 'a(n-8)^2 -a(n-8)*a(n-9) -a(n-8)', 'a(n-7)*a(n-8) -a(n-7)*a(n-9) -a(n-7) -a(n-8) +a(n-9) +1', 'a(n-7)^2 -a(n-7)*a(n-9) -2*a(n-7) -a(n-8) +a(n-9) +1', 'a(n-9)^2 -a(n-9)*a(n-10) -a(n-9)', 'a(n-9)*a(n-15) +(-25/9)*a(n-9) -a(n-10) +(-7/3)*a(n-11) -3*a(n-12) +(-1/3)*a(n-13) +(-1/9)*a(n-14) +(1/3)*a(n-15) +(26/9)*a(n-16) +95/9', 'a(n-12)*a(n-16) +(-82/3)*a(n-9) -30*a(n-10) -50*a(n-11) -53*a(n-12) -17*a(n-13) +(53/3)*a(n-14) +45*a(n-15) +(137/3)*a(n-16) +488/3', 'a(n-5) +(76/9)*a(n-9) +8*a(n-10) +(46/3)*a(n-11) +16*a(n-12) +(16/3)*a(n-13) +(-47/9)*a(n-14) +(-40/3)*a(n-15) +(-128/9)*a(n-16) -458/9', 'a(n-13)*a(n-16) +(118/9)*a(n-9) +14*a(n-10) +(70/3)*a(n-11) +24*a(n-12) +(22/3)*a(n-13) +(-77/9)*a(n-14) +(-61/3)*a(n-15) +(-212/9)*a(n-16) -677/9', 'a(n-11)*a(n-15) +(38/27)*a(n-9) +(4/3)*a(n-10) +(11/9)*a(n-11) +(7/3)*a(n-12) +(5/9)*a(n-13) +(-19/27)*a(n-14) +(-35/9)*a(n-15) +(-82/27)*a(n-16) -148/27', 'a(n-7) +(-56/27)*a(n-9) +(-7/3)*a(n-10) +(-47/9)*a(n-11) +(-16/3)*a(n-12) +(-14/9)*a(n-13) +(28/27)*a(n-14) +(44/9)*a(n-15) +(91/27)*a(n-16) +373/27', 'a(n-11)*a(n-16) +(-182/9)*a(n-9) -22*a(n-10) +(-110/3)*a(n-11) -37*a(n-12) +(-35/3)*a(n-13) +(127/9)*a(n-14) +(95/3)*a(n-15) +(298/9)*a(n-16) +1048/9', 'a(n-8) +(-431/9)*a(n-9) -52*a(n-10) +(-260/3)*a(n-11) -91*a(n-12) +(-89/3)*a(n-13) +(283/9)*a(n-14) +(233/3)*a(n-15) +(751/9)*a(n-16) +2509/9', 'n +(-304/9)*a(n-9) -37*a(n-10) +(-184/3)*a(n-11) -64*a(n-12) +(-64/3)*a(n-13) +(188/9)*a(n-14) +(160/3)*a(n-15) +(512/9)*a(n-16) +1652/9', 'a(n-3) +(-574/9)*a(n-9) -68*a(n-10) +(-340/3)*a(n-11) -119*a(n-12) +(-112/3)*a(n-13) +(368/9)*a(n-14) +(304/3)*a(n-15) +(980/9)*a(n-16) +3290/9', 'a(n-11)*a(n-14) +(2/35)*a(n-11) +(9/35)*a(n-12) +(5/7)*a(n-13) +(-58/35)*a(n-14) +(-2/7)*a(n-15) +(4/35)*a(n-16) +(6/35)*a(n-17) -33/35', 'a(n-11)*a(n-13) +(-33/35)*a(n-11) +(9/35)*a(n-12) +(-9/7)*a(n-13) +(12/35)*a(n-14) +(-2/7)*a(n-15) +(4/35)*a(n-16) +(6/35)*a(n-17) +37/35', 'a(n-11)*a(n-12) +(-68/35)*a(n-11) +(-26/35)*a(n-12) +(-2/7)*a(n-13) +(12/35)*a(n-14) +(-2/7)*a(n-15) +(4/35)*a(n-16) +(6/35)*a(n-17) +72/35', 'a(n-11)^2 +(-103/35)*a(n-11) +(-26/35)*a(n-12) +(-2/7)*a(n-13) +(12/35)*a(n-14) +(-2/7)*a(n-15) +(4/35)*a(n-16) +(6/35)*a(n-17) +72/35', 'a(n-8) +(-3/55)*a(n-11) +(-81/55)*a(n-12) +(-16/11)*a(n-13) +(-18/55)*a(n-14) +(-4/11)*a(n-15) +(84/55)*a(n-16) +(-9/55)*a(n-17) +97/55', 'a(n-12)*a(n-17) +(12/55)*a(n-11) +(-6/55)*a(n-12) +(9/11)*a(n-13) +(17/55)*a(n-14) +(5/11)*a(n-15) +(-61/55)*a(n-16) +(-74/55)*a(n-17) -58/55', 'a(n-7) +(-76/55)*a(n-11) +(-72/55)*a(n-12) +(-2/11)*a(n-13) +(-16/55)*a(n-14) +(16/11)*a(n-15) +(-17/55)*a(n-16) +(-8/55)*a(n-17) +74/55', 'a(n-11)*a(n-15) +(-61/55)*a(n-11) +(3/55)*a(n-12) +(1/11)*a(n-13) +(19/55)*a(n-14) +(-19/11)*a(n-15) +(-52/55)*a(n-16) +(-18/55)*a(n-17) +84/55', 'a(n-12)*a(n-14) +(-2/77)*a(n-11) +(-65/77)*a(n-12) +(31/77)*a(n-13) +(-89/77)*a(n-14) +(38/77)*a(n-15) +(-32/77)*a(n-16) +(-6/77)*a(n-17) +61/77', 'a(n-12)*a(n-15) +(-2/77)*a(n-11) +(12/77)*a(n-12) +(31/77)*a(n-13) +(65/77)*a(n-14) +(-116/77)*a(n-15) +(-32/77)*a(n-16) +(-6/77)*a(n-17) -93/77', 'a(n-13)*a(n-17) -a(n-13) -2*a(n-17) -a(n-18) +2', 'a(n-7) +2*a(n-13) +2*a(n-14) +2*a(n-15) -a(n-16) -2*a(n-17) -2*a(n-18) -6', 'a(n-4) -3*a(n-13) -3*a(n-14) -3*a(n-15) -a(n-16) +3*a(n-17) +3*a(n-18) +6', 'a(n-16)*a(n-18) +(10/41)*a(n-13) +(2/41)*a(n-14) +(4/41)*a(n-15) +(-7/41)*a(n-16) +(7/41)*a(n-17) +(-37/41)*a(n-18) -15/41', 'a(n-15)*a(n-18) +(10/41)*a(n-13) +(2/41)*a(n-14) +(4/41)*a(n-15) +(-7/41)*a(n-16) +(7/41)*a(n-17) +(-78/41)*a(n-18) -15/41', 'a(n-17)*a(n-18) +(-20/41)*a(n-13) +(-4/41)*a(n-14) +(-8/41)*a(n-15) +(14/41)*a(n-16) +(-14/41)*a(n-17) +(-8/41)*a(n-18) +30/41', 'a(n-17)^2 +(-20/41)*a(n-13) +(-4/41)*a(n-14) +(-8/41)*a(n-15) +(14/41)*a(n-16) +(-55/41)*a(n-17) +(-8/41)*a(n-18) +30/41', 'a(n-16)*a(n-17) +(10/41)*a(n-13) +(2/41)*a(n-14) +(4/41)*a(n-15) +(-48/41)*a(n-16) +(-34/41)*a(n-17) +(4/41)*a(n-18) +26/41', 'a(n-16)^2 +(10/41)*a(n-13) +(2/41)*a(n-14) +(4/41)*a(n-15) +(-89/41)*a(n-16) +(-34/41)*a(n-17) +(4/41)*a(n-18) +26/41', 'a(n-18)^2 +(-2/41)*a(n-13) +(-25/41)*a(n-14) +(-9/41)*a(n-15) +(-15/41)*a(n-16) +(15/41)*a(n-17) +(-50/41)*a(n-18) +44/41', 'a(n-6) +(-4/3)*a(n-15) +(1/3)*a(n-16) +a(n-17) +a(n-18) +a(n-19) -8/3', 'a(n-7) +(1/3)*a(n-15) +(-4/3)*a(n-16) +a(n-17) +a(n-18) +a(n-19) -10/3', 'a(n-5) +(1/3)*a(n-15) +(11/3)*a(n-16) +a(n-17) +a(n-18) -4*a(n-19) -16/3', 'a(n-4) +(-1/2)*a(n-15) +(-1/2)*a(n-16) +(-3/2)*a(n-17) +(-3/2)*a(n-18) +(-3/2)*a(n-19) +2', 'a(n-1) +(1/2)*a(n-15) +(-3/2)*a(n-16) +(3/2)*a(n-17) +(3/2)*a(n-18) +(3/2)*a(n-19) -5', 'a(n) +(-3/2)*a(n-15) +(1/2)*a(n-16) +(3/2)*a(n-17) +(3/2)*a(n-18) +(3/2)*a(n-19) -4']
A002262: 
a(n) = -3*a(n-19)/2 - 3*a(n-18)/2 - 3*a(n-17)/2 - a(n-16)/2 + 3*a(n-15)/2 + 4
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

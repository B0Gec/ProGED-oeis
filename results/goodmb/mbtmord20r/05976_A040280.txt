
orders_used: [8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:5977/10000, seq_id:A040280, order:20 took:
 36.7 seconds, i.e. 0.61 minutes or 0.01 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 8.
eqs_explicit:
[]
non_linears:
['a(n-5)*a(n-7) +(-9/19)*a(n-4) +(-16/19)*a(n-5) +(-15/19)*a(n-6) +(-16/19)*a(n-7) +(-9/19)*a(n-8) +97/19', 'a(n-6)^2 +(-6/19)*a(n-4) +(78/19)*a(n-5) +(-105/19)*a(n-6) +(78/19)*a(n-7) +(-6/19)*a(n-8) -328/19', 'a(n-4)*a(n-8) +(-103/19)*a(n-4) +(104/19)*a(n-5) +(-64/19)*a(n-6) +(104/19)*a(n-7) +(-103/19)*a(n-8) -13/19', 'a(n-1) +(-169/89)*a(n-3) +(2311/89)*a(n-4) +(3130/89)*a(n-5) +(3023/89)*a(n-6) +(3302/89)*a(n-7) -3*a(n-8) -32741/89', 'n +(-9/89)*a(n-3) +(-9231/3382)*a(n-4) +(5927/3382)*a(n-5) +(-5315/3382)*a(n-6) +(9537/3382)*a(n-7) +(9/38)*a(n-8) -20590/1691', 'a(n-6)*a(n-8) +(18/89)*a(n-3) +(954/1691)*a(n-4) +(-13314/1691)*a(n-5) +(-3407/1691)*a(n-6) +(-13542/1691)*a(n-7) +(-7/19)*a(n-8) +74021/1691', 'a(n-3)*a(n-5) +(-65/89)*a(n-3) +(-12879/1691)*a(n-4) +(-4580/1691)*a(n-5) +(-12345/1691)*a(n-6) +(189/1691)*a(n-7) +(9/19)*a(n-8) +75347/1691', 'a(n-2) +(76/3)*a(n-5) +(115/3)*a(n-6) +(100/3)*a(n-7) +39*a(n-8) -3*a(n-9) -1153/3', 'a(n-6)*a(n-8) +(-9/19)*a(n-5) +(-16/19)*a(n-6) +(-15/19)*a(n-7) +(-16/19)*a(n-8) +(-9/19)*a(n-9) +97/19', 'a(n-7)^2 +(-6/19)*a(n-5) +(78/19)*a(n-6) +(-105/19)*a(n-7) +(78/19)*a(n-8) +(-6/19)*a(n-9) -328/19', 'a(n-5)^2 +(-165/19)*a(n-5) +(-78/19)*a(n-6) +(-66/19)*a(n-7) +(-78/19)*a(n-8) +(6/19)*a(n-9) +860/19', 'n +(-105/38)*a(n-5) +(73/38)*a(n-6) +(-61/38)*a(n-7) +(111/38)*a(n-8) +(9/38)*a(n-9) -267/19', 'a(n-7)*a(n-9) +(12/19)*a(n-5) +(-156/19)*a(n-6) +(-37/19)*a(n-7) +(-156/19)*a(n-8) +(-7/19)*a(n-9) +865/19', 'a(n-8)^2 +(-61/19)*a(n-5) +(-81/19)*a(n-6) +(-51/19)*a(n-7) +(-176/19)*a(n-8) +(15/19)*a(n-9) +782/19', 'a(n-6) +(41/143)*a(n-7) +(137/143)*a(n-8) +(3/143)*a(n-9) +(-9/143)*a(n-10) -872/143', 'a(n-4) +(-32/143)*a(n-7) +(-86/143)*a(n-8) +(43/143)*a(n-9) +(14/143)*a(n-10) -296/143', 'a(n-5) +(252/143)*a(n-7) +(-2/143)*a(n-8) +(144/143)*a(n-9) +(-3/143)*a(n-10) -1530/143', 'a(n-7)^2 +(-879/143)*a(n-7) +(24/143)*a(n-8) +(-12/143)*a(n-9) +(36/143)*a(n-10) +628/143', 'a(n-7)*a(n-9) +(-101/143)*a(n-7) +(-48/143)*a(n-8) +(-119/143)*a(n-9) +(-72/143)*a(n-10) +317/143', 'n +(388/143)*a(n-7) +(149/143)*a(n-8) +(426/143)*a(n-9) +(9/143)*a(n-10) -4562/143', 'a(n-9)^2 +(-478/143)*a(n-7) +(56/143)*a(n-8) +(-1315/143)*a(n-9) +(84/143)*a(n-10) +3086/143', 'a(n-8)^2 +(600/143)*a(n-7) +(-747/143)*a(n-8) +(588/143)*a(n-9) +(-48/143)*a(n-10) -2744/143', 'a(n-7)*a(n-10) +(1137/143)*a(n-7) +(8/143)*a(n-8) +(1712/143)*a(n-9) +(-703/143)*a(n-10) -7465/143', 'a(n-8)*a(n-10) +(-1200/143)*a(n-7) +(-365/143)*a(n-8) +(-1176/143)*a(n-9) +(-47/143)*a(n-10) +7061/143', 'a(n-6) +(-26/53)*a(n-9) +(-60/53)*a(n-10) +(3/53)*a(n-11) +102/53', 'a(n-4) +(35/53)*a(n-9) +(40/53)*a(n-10) +(-2/53)*a(n-11) -386/53', 'a(n-9)^2 +(-337/53)*a(n-9) +(-52/53)*a(n-10) +(-8/53)*a(n-11) +576/53', 'a(n-9)*a(n-11) +(-15/53)*a(n-9) +(104/53)*a(n-10) +(-37/53)*a(n-11) -569/53', 'a(n-9)*a(n-10) +(-269/53)*a(n-9) +(-209/53)*a(n-10) +(-24/53)*a(n-11) +1145/53', 'a(n-7) +(140/159)*a(n-9) +(-52/159)*a(n-10) +(-8/159)*a(n-11) -643/159', 'a(n-5) +(-86/159)*a(n-9) +(91/159)*a(n-10) +(14/159)*a(n-11) -584/159', 'a(n-3) +(459/53)*a(n-9) +(-119/53)*a(n-10) +(104/53)*a(n-11) -2082/53', 'a(n-8) +(43/159)*a(n-9) +(193/159)*a(n-10) +(-7/159)*a(n-11) -1139/159', 'n +(49/159)*a(n-9) +(-50/159)*a(n-10) +(29/159)*a(n-11) -2141/159', 'a(n-8) +(-4/23)*a(n-11) +(-6/23)*a(n-12) -1/23', 'a(n-7) +(-28/23)*a(n-11) +(4/23)*a(n-12) -7/23', 'a(n-4) +(-17/23)*a(n-11) +(-5/46)*a(n-12) +3/46', 'n +(-6/23)*a(n-11) +(5/46)*a(n-12) -601/46', 'a(n-10) +(-4/23)*a(n-11) +(11/46)*a(n-12) -209/46', 'a(n-9) +(29/23)*a(n-11) +(-5/46)*a(n-12) -273/46', 'a(n-6) +(11/23)*a(n-11) +(5/23)*a(n-12) -141/23', 'a(n-5) +(20/23)*a(n-11) +(-9/46)*a(n-12) -197/46', 'a(n-11)^2 +(-113/23)*a(n-11) +(3/23)*a(n-12) +81/23', 'a(n-12) +(-1/7)*a(n-13) -4/7', 'a(n-9) +(-2/7)*a(n-13) -1/7', 'a(n-1) +(-1/7)*a(n-13) -4/7', 'a(n-13)^2 -20*a(n-13) +51', 'a(n-7) +(2/7)*a(n-13) -41/7', 'a(n-4) +(1/7)*a(n-13) -24/7', 'a(n-5) +(-3/14)*a(n-13) -5/14', 'a(n-11) +(3/14)*a(n-13) -65/14', 'a(n-10) +(1/14)*a(n-13) -73/14']
A040280: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

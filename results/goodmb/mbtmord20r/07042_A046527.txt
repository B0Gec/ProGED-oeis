
orders_used: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 11, 11, 11, 13, 12, 11, 14, 13, 12]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:7043/10000, seq_id:A046527, order:20 took:
 25.1 seconds, i.e. 0.42 minutes or 0.007 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 9.
eqs_explicit:
[]
non_linears:
['a(n-6)*a(n-8) +(-11/4)*a(n-5) -4*a(n-6) -2*a(n-7) +4*a(n-8) +(79/4)*a(n-9) -2', 'a(n-5)*a(n-7) +(19/4)*a(n-5) +7*a(n-6) +a(n-7) -17*a(n-8) +(-203/4)*a(n-9) +24', 'n +(19/32)*a(n-5) +(3/8)*a(n-6) +(1/4)*a(n-7) +(-21/8)*a(n-8) +(-119/32)*a(n-9) -53/8', 'a(n-5)*a(n-8) +(-1/10)*a(n-5) +(-2/5)*a(n-6) +(24/5)*a(n-7) +(-123/5)*a(n-8) +(-37/10)*a(n-9) +99/5', 'a(n-8)*a(n-9) +(-1/40)*a(n-5) +(-1/10)*a(n-6) +(1/5)*a(n-7) +(-19/10)*a(n-8) +(-27/40)*a(n-9) +17/10', 'a(n-7)*a(n-9) +(1/40)*a(n-5) +(1/10)*a(n-6) +(-6/5)*a(n-7) +(9/10)*a(n-8) +(-213/40)*a(n-9) +43/10', 'a(n-7)*a(n-8) +(-177/32)*a(n-5) +(-41/8)*a(n-6) +(-31/4)*a(n-7) +(135/8)*a(n-8) +(1213/32)*a(n-9) -81/8', 'a(n-6)*a(n-7) +(-251/20)*a(n-5) +(-71/5)*a(n-6) +(-78/5)*a(n-7) +(226/5)*a(n-8) +(1443/20)*a(n-9) -63/5', 'a(n-9)^2 +(3/160)*a(n-5) +(3/40)*a(n-6) +(-3/20)*a(n-7) +(27/40)*a(n-8) +(-999/160)*a(n-9) +179/40', 'a(n-8)^2 +(-171/160)*a(n-5) +(-51/40)*a(n-6) +(-9/20)*a(n-7) +(-99/40)*a(n-8) +(1263/160)*a(n-9) +77/40', 'a(n-10)^2 +(3/53)*a(n-7) +(-9/53)*a(n-8) +(39/53)*a(n-9) +(-324/53)*a(n-10) +235/53', 'a(n-9)*a(n-10) +(-4/53)*a(n-7) +(12/53)*a(n-8) +(-105/53)*a(n-9) +(-45/53)*a(n-10) +93/53', 'n +(-11/53)*a(n-7) +(-20/53)*a(n-8) +(-37/53)*a(n-9) +(22/53)*a(n-10) -473/53', 'a(n-8)*a(n-10) +(4/53)*a(n-7) +(-65/53)*a(n-8) +(52/53)*a(n-9) +(-273/53)*a(n-10) +225/53', 'a(n-9)^2 +(-12/53)*a(n-7) +(36/53)*a(n-8) +(-315/53)*a(n-9) +(24/53)*a(n-10) +226/53', 'a(n-8)*a(n-9) +(16/53)*a(n-7) +(-101/53)*a(n-8) +(-57/53)*a(n-9) +(-32/53)*a(n-10) +105/53', 'a(n-7)*a(n-9) +(-69/53)*a(n-7) +(48/53)*a(n-8) +(-261/53)*a(n-9) +(32/53)*a(n-10) +213/53', 'a(n-6) +(52/53)*a(n-7) +(56/53)*a(n-8) +(-172/53)*a(n-9) +(-369/53)*a(n-10) +116/53', 'a(n-5) +(8/53)*a(n-7) +(-236/53)*a(n-8) +(-161/53)*a(n-9) +(196/53)*a(n-10) +132/53', 'a(n-8)^2 +(51/53)*a(n-7) +(-312/53)*a(n-8) +(27/53)*a(n-9) +(-261/53)*a(n-10) +391/53', 'a(n-11)^2 -3*a(n-11) +2', 'a(n-10)*a(n-11) -a(n-10) -5*a(n-11) +5', 'a(n-9)*a(n-11) -a(n-9) -a(n-11) +1', 'a(n-10)^2 -3*a(n-10) -12*a(n-11) +14', 'a(n-6) -4*a(n-9) -5*a(n-10) +12*a(n-11) -4', 'n -a(n-9) +2*a(n-10) -11*a(n-11) -1', 'a(n-9)*a(n-10) -a(n-9) -5*a(n-10) +16*a(n-11) -11', 'a(n-8) -3*a(n-9) +13*a(n-10) -55*a(n-11) +43', 'a(n-7) +4*a(n-9) -16*a(n-10) +47*a(n-11) -40', 'a(n-3) +8*a(n-9) -37*a(n-10) +64*a(n-11) -44', 'a(n-12) -1', 'a(n-11)^2 -3*a(n-11) +2', 'a(n-10)*a(n-11) -a(n-10) -5*a(n-11) +5', 'a(n-10)^2 -3*a(n-10) -12*a(n-11) +14', 'a(n-13) -1', 'a(n-12) -1', 'a(n-11)^2 -3*a(n-11) +2', 'a(n-14) -1', 'a(n-13) -1', 'a(n-12) -1']
A046527: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    


orders_used: [1, 2, 2, 2, 2, 3, 3, 3, 3, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:3303/10000, seq_id:A026729, order:20 took:
 22.6 seconds, i.e. 0.38 minutes or 0.006 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
eqs_explicit:
['a(n) = 2*n/5 - 2*a(n-5)*a(n-4) - 13*a(n-4)/5 + 19*a(n-3)^2/10 - 73*a(n-3)/10 - 21*a(n-2)/5 - 12*a(n-1)/5 + 34/5']
non_linears:
['a(n)*a(n-1)^2 -a(n)*a(n-1) -a(n-1)^2 +a(n-1)', 'a(n)*a(n-2)^2 -a(n)*a(n-2)', 'a(n-2)^3 -3*a(n-2)^2 +2*a(n-2)', 'a(n-1)*a(n-2)^2 -a(n-1)*a(n-2) -a(n-2)^2 +a(n-2)', 'n*a(n-2)^2 -n*a(n-2) -10*a(n-2)^2 +10*a(n-2)', 'a(n-1)*a(n-3)^2 -a(n-1)*a(n-3)', 'a(n)*a(n-3)^2 -a(n)*a(n-3)', 'a(n-2)^2*a(n-3) -a(n-2)*a(n-3)', 'a(n-3)^3 -3*a(n-3)^2 +2*a(n-3)', 'a(n-2)^3 -3*a(n-2)^2 +2*a(n-2)', 'a(n-2)*a(n-3)^2 -a(n-2)*a(n-3) -a(n-3)^2 +a(n-3)', 'n*a(n-3)^2 -n*a(n-3) -11*a(n-3)^2 +11*a(n-3)', 'a(n)*a(n-1) +(1/3)*a(n)*a(n-3) +(-1/6)*n*a(n-3) +(-7/6)*a(n-1)*a(n-3) +(-3/2)*a(n-2)*a(n-3) +(7/6)*a(n-3)^2 -a(n) -a(n-1) +(1/2)*a(n-3) +1', 'a(n-2)*a(n-4)^2 -a(n-2)*a(n-4)', 'a(n-1)*a(n-4)^2 -a(n-1)*a(n-4)', 'a(n-4)^3 -3*a(n-4)^2 +2*a(n-4)', 'a(n-3)*a(n-4)^2 -a(n-3)*a(n-4) -a(n-4)^2 +a(n-4)', 'a(n-5)^3 -3*a(n-5)^2 +2*a(n-5)', 'a(n-4)*a(n-5)^2 -a(n-4)*a(n-5) -a(n-5)^2 +a(n-5)', 'a(n-3)^2 +(-20/19)*a(n-4)*a(n-5) +(-10/19)*a(n) +(4/19)*n +(-24/19)*a(n-1) +(-42/19)*a(n-2) +(-73/19)*a(n-3) +(-26/19)*a(n-4) +68/19']
A026729: 
a(n) = 2*n/5 - 2*a(n-5)*a(n-4) - 13*a(n-4)/5 + 19*a(n-3)^2/10 - 73*a(n-3)/10 - 21*a(n-2)/5 - 12*a(n-1)/5 + 34/5
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

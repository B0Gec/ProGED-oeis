
orders_used: [3, 4, 3, 5, 4, 3, 6, 5, 4, 3, 7, 6, 5, 4, 3, 8, 7, 6, 5, 4, 3, 9, 9, 8, 7, 6, 5, 4, 3, 10, 10, 9, 9, 8, 7, 6, 5, 4, 3, 11, 11, 10, 10, 9, 9, 8, 7, 6, 5, 12, 12, 11, 11, 10, 10, 9, 8, 7, 6, 13, 13, 12, 12, 11, 10, 9, 8, 7, 14, 14, 13, 12, 11, 10, 9, 8, 15, 14, 13, 12, 11, 10, 16, 15, 14, 13, 12, 17, 16, 15, 14, 18, 17, 16, 19, 18, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:6043/10000, seq_id:A040346, order:20 took:
 54.0 seconds, i.e. 0.9 minutes or 0.015 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 3.
eqs_explicit:
['a(n) = 29*a(n-20)/662 - 29*a(n-19)/331 + 1116*a(n-18)/331 + 87*a(n-17)/331 - 1889/662']
non_linears:
['a(n)*a(n-3) -a(n) -a(n-3) +1', 'a(n-1)*a(n-4) -a(n-1) -a(n-4) +1', 'a(n)*a(n-3) -a(n) -a(n-3) +1', 'a(n-2)*a(n-5) -a(n-2) -a(n-5) +1', 'a(n-1)*a(n-4) -a(n-1) -a(n-4) +1', 'a(n)*a(n-3) -a(n) -a(n-3) +1', 'a(n-3)*a(n-6) -a(n-3) -a(n-6) +1', 'a(n-2)*a(n-5) -a(n-2) -a(n-5) +1', 'a(n-1)*a(n-4) -a(n-1) -a(n-4) +1', 'a(n)*a(n-3) -a(n) -a(n-3) +1', 'a(n-4)*a(n-7) -a(n-4) -a(n-7) +1', 'a(n-3)*a(n-6) -a(n-3) -a(n-6) +1', 'a(n-2)*a(n-5) -a(n-2) -a(n-5) +1', 'a(n-1)*a(n-4) -a(n-1) -a(n-4) +1', 'a(n)*a(n-3) -a(n) -a(n-3) +1', 'a(n-5)*a(n-8) -a(n-5) -a(n-8) +1', 'a(n-4)*a(n-7) -a(n-4) -a(n-7) +1', 'a(n-3)*a(n-6) -a(n-3) -a(n-6) +1', 'a(n-2)*a(n-5) -a(n-2) -a(n-5) +1', 'a(n-1)*a(n-4) -a(n-1) -a(n-4) +1', 'a(n)*a(n-3) -a(n) -a(n-3) +1', 'a(n-6)*a(n-9) -a(n-6) -a(n-9) +1', 'a(n)*a(n-9) -a(n) -a(n-9) +1', 'a(n-5)*a(n-8) -a(n-5) -a(n-8) +1', 'a(n-4)*a(n-7) -a(n-4) -a(n-7) +1', 'a(n-3)*a(n-6) -a(n-3) -a(n-6) +1', 'a(n-2)*a(n-5) -a(n-2) -a(n-5) +1', 'a(n-1)*a(n-4) -a(n-1) -a(n-4) +1', 'a(n)*a(n-3) -a(n) -a(n-3) +1', 'a(n-7)*a(n-10) -a(n-7) -a(n-10) +1', 'a(n-1)*a(n-10) -a(n-1) -a(n-10) +1', 'a(n-6)*a(n-9) -a(n-6) -a(n-9) +1', 'a(n)*a(n-9) -a(n) -a(n-9) +1', 'a(n-5)*a(n-8) -a(n-5) -a(n-8) +1', 'a(n-4)*a(n-7) -a(n-4) -a(n-7) +1', 'a(n-3)*a(n-6) -a(n-3) -a(n-6) +1', 'a(n-2)*a(n-5) -a(n-2) -a(n-5) +1', 'a(n-1)*a(n-4) -a(n-1) -a(n-4) +1', 'a(n)*a(n-3) -a(n) -a(n-3) +1', 'a(n-8)*a(n-11) -a(n-8) -a(n-11) +1', 'a(n-2)*a(n-11) -a(n-2) -a(n-11) +1', 'a(n-7)*a(n-10) -a(n-7) -a(n-10) +1', 'a(n-1)*a(n-10) -a(n-1) -a(n-10) +1', 'a(n-6)*a(n-9) -a(n-6) -a(n-9) +1', 'a(n)*a(n-9) -a(n) -a(n-9) +1', 'a(n-5)*a(n-8) -a(n-5) -a(n-8) +1', 'a(n-4)*a(n-7) -a(n-4) -a(n-7) +1', 'a(n-3)*a(n-6) -a(n-3) -a(n-6) +1', 'a(n-2)*a(n-5) -a(n-2) -a(n-5) +1', 'a(n-9)*a(n-12) -a(n-9) -a(n-12) +1', 'a(n-3)*a(n-12) -a(n-3) -a(n-12) +1', 'a(n-8)*a(n-11) -a(n-8) -a(n-11) +1', 'a(n-2)*a(n-11) -a(n-2) -a(n-11) +1', 'a(n-7)*a(n-10) -a(n-7) -a(n-10) +1', 'a(n-1)*a(n-10) -a(n-1) -a(n-10) +1', 'a(n-6)*a(n-9) -a(n-6) -a(n-9) +1', 'a(n-5)*a(n-8) -a(n-5) -a(n-8) +1', 'a(n-4)*a(n-7) -a(n-4) -a(n-7) +1', 'a(n-3)*a(n-6) -a(n-3) -a(n-6) +1', 'a(n-10)*a(n-13) -a(n-10) -a(n-13) +1', 'a(n-4)*a(n-13) -a(n-4) -a(n-13) +1', 'a(n-9)*a(n-12) -a(n-9) -a(n-12) +1', 'a(n-3)*a(n-12) -a(n-3) -a(n-12) +1', 'a(n-8)*a(n-11) -a(n-8) -a(n-11) +1', 'a(n-7)*a(n-10) -a(n-7) -a(n-10) +1', 'a(n-6)*a(n-9) -a(n-6) -a(n-9) +1', 'a(n-5)*a(n-8) -a(n-5) -a(n-8) +1', 'a(n-4)*a(n-7) -a(n-4) -a(n-7) +1', 'a(n-11)*a(n-14) -a(n-11) -a(n-14) +1', 'a(n-5)*a(n-14) -a(n-5) -a(n-14) +1', 'a(n-10)*a(n-13) -a(n-10) -a(n-13) +1', 'a(n-9)*a(n-12) -a(n-9) -a(n-12) +1', 'a(n-8)*a(n-11) -a(n-8) -a(n-11) +1', 'a(n-7)*a(n-10) -a(n-7) -a(n-10) +1', 'a(n-6)*a(n-9) -a(n-6) -a(n-9) +1', 'a(n-5)*a(n-8) -a(n-5) -a(n-8) +1', 'a(n-12)*a(n-15) -a(n-12) -a(n-15) +1', 'a(n-11)*a(n-14) -a(n-11) -a(n-14) +1', 'a(n-10)*a(n-13) -a(n-10) -a(n-13) +1', 'a(n-9)*a(n-12) -a(n-9) -a(n-12) +1', 'a(n-8)*a(n-11) -a(n-8) -a(n-11) +1', 'a(n-7)*a(n-10) -a(n-7) -a(n-10) +1', 'a(n-13)*a(n-16) -a(n-13) -a(n-16) +1', 'a(n-12)*a(n-15) -a(n-12) -a(n-15) +1', 'a(n-11)*a(n-14) -a(n-11) -a(n-14) +1', 'a(n-10)*a(n-13) -a(n-10) -a(n-13) +1', 'a(n-9)*a(n-12) -a(n-9) -a(n-12) +1', 'a(n-14)*a(n-17) -a(n-14) -a(n-17) +1', 'a(n-13)*a(n-16) -a(n-13) -a(n-16) +1', 'a(n-12)*a(n-15) -a(n-12) -a(n-15) +1', 'a(n-11)*a(n-14) -a(n-11) -a(n-14) +1', 'a(n-15)*a(n-18) -a(n-15) -a(n-18) +1', 'a(n-14)*a(n-17) -a(n-14) -a(n-17) +1', 'a(n-13)*a(n-16) -a(n-13) -a(n-16) +1', 'a(n-16)*a(n-19) -a(n-16) -a(n-19) +1', 'a(n-15)*a(n-18) -a(n-15) -a(n-18) +1', 'a(n-17)*a(n-18) +(690/3377)*a(n-15) +(936/3377)*a(n-16) +(-5837/3377)*a(n-17) +(-534/307)*a(n-18) +(1306/3377)*a(n-19) -284/307', 'a(n-16)^2 +(3540/3377)*a(n-15) +(-44091/3377)*a(n-16) +(3530/3377)*a(n-17) +(10/307)*a(n-18) +(240/3377)*a(n-19) +2574/307', 'a(n-15)^2 +(-48027/3377)*a(n-15) +(-370/3377)*a(n-16) +(-3790/3377)*a(n-17) +(-336/307)*a(n-18) +(-1310/3377)*a(n-19) +9052/307', 'a(n-17)^2 +(-1044/3377)*a(n-15) +(2460/3377)*a(n-16) +(-45171/3377)*a(n-17) +(226/307)*a(n-18) +(-1330/3377)*a(n-19) +4386/307', 'a(n-18)*a(n-20) -a(n-18) -a(n-20) +1', 'a(n-17)*a(n-20) -a(n-17) -a(n-20) +1', 'a(n-17)*a(n-19) +(-328/331)*a(n-17) +(-30/331)*a(n-18) +(-332/331)*a(n-19) +(1/662)*a(n-20) +711/662', 'a(n-14) +(-4/331)*a(n-17) +(40/331)*a(n-18) +(-440/331)*a(n-19) +(-335/1986)*a(n-20) +797/1986', 'a(n-12) +(-87/331)*a(n-17) +(-1116/331)*a(n-18) +(29/331)*a(n-19) +(-29/662)*a(n-20) +1889/662', 'a(n-2) +(-4/331)*a(n-17) +(40/331)*a(n-18) +(-440/331)*a(n-19) +(-335/1986)*a(n-20) +797/1986', 'a(n) +(-87/331)*a(n-17) +(-1116/331)*a(n-18) +(29/331)*a(n-19) +(-29/662)*a(n-20) +1889/662']
A040346: 
a(n) = 29*a(n-20)/662 - 29*a(n-19)/331 + 1116*a(n-18)/331 + 87*a(n-17)/331 - 1889/662
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

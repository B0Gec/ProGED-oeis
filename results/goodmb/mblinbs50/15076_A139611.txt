
orders_used: [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
While total time consumed by now, scale:15077/27236, seq_id:A139611, order:20 took:
 54.1 seconds, i.e. 0.9 minutes or 0.015 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
non_linears:
['a(n) -a(n-1) -55', 'a(n-1) -a(n-2) -55', 'a(n) -a(n-2) -110', 'a(n-2) -a(n-3) -55', 'a(n-1) -a(n-3) -110', 'a(n) -a(n-3) -165', 'a(n-3) -a(n-4) -55', 'a(n-2) -a(n-4) -110', 'a(n-1) -a(n-4) -165', 'a(n) -a(n-4) -220', 'a(n-4) -a(n-5) -55', 'a(n-3) -a(n-5) -110', 'a(n-2) -a(n-5) -165', 'a(n-1) -a(n-5) -220', 'a(n) -a(n-5) -275', 'a(n-5) -a(n-6) -55', 'a(n-4) -a(n-6) -110', 'a(n-3) -a(n-6) -165', 'a(n-2) -a(n-6) -220', 'a(n-1) -a(n-6) -275', 'a(n) -a(n-6) -330', 'a(n-6) -a(n-7) -55', 'a(n-5) -a(n-7) -110', 'a(n-4) -a(n-7) -165', 'a(n-3) -a(n-7) -220', 'a(n-2) -a(n-7) -275', 'a(n-1) -a(n-7) -330', 'a(n) -a(n-7) -385', 'a(n-7) -a(n-8) -55', 'a(n-6) -a(n-8) -110', 'a(n-5) -a(n-8) -165', 'a(n-4) -a(n-8) -220', 'a(n-3) -a(n-8) -275', 'a(n-2) -a(n-8) -330', 'a(n-1) -a(n-8) -385', 'a(n) -a(n-8) -440', 'a(n-8) -a(n-9) -55', 'a(n-7) -a(n-9) -110', 'a(n-6) -a(n-9) -165', 'a(n-5) -a(n-9) -220', 'a(n-4) -a(n-9) -275', 'a(n-3) -a(n-9) -330', 'a(n-2) -a(n-9) -385', 'a(n-1) -a(n-9) -440', 'a(n) -a(n-9) -495', 'a(n-9) -a(n-10) -55', 'a(n-8) -a(n-10) -110', 'a(n-7) -a(n-10) -165', 'a(n-6) -a(n-10) -220', 'a(n-5) -a(n-10) -275', 'a(n-4) -a(n-10) -330', 'a(n-3) -a(n-10) -385', 'a(n-2) -a(n-10) -440', 'a(n-1) -a(n-10) -495', 'a(n) -a(n-10) -550', 'a(n-10) -a(n-11) -55', 'a(n-9) -a(n-11) -110', 'a(n-8) -a(n-11) -165', 'a(n-7) -a(n-11) -220', 'a(n-6) -a(n-11) -275', 'a(n-5) -a(n-11) -330', 'a(n-4) -a(n-11) -385', 'a(n-3) -a(n-11) -440', 'a(n-2) -a(n-11) -495', 'a(n-1) -a(n-11) -550', 'a(n-11) -a(n-12) -55', 'a(n-10) -a(n-12) -110', 'a(n-9) -a(n-12) -165', 'a(n-8) -a(n-12) -220', 'a(n-7) -a(n-12) -275', 'a(n-6) -a(n-12) -330', 'a(n-5) -a(n-12) -385', 'a(n-4) -a(n-12) -440', 'a(n-3) -a(n-12) -495', 'a(n-2) -a(n-12) -550', 'a(n-12) -a(n-13) -55', 'a(n-11) -a(n-13) -110', 'a(n-10) -a(n-13) -165', 'a(n-9) -a(n-13) -220', 'a(n-8) -a(n-13) -275', 'a(n-7) -a(n-13) -330', 'a(n-6) -a(n-13) -385', 'a(n-5) -a(n-13) -440', 'a(n-4) -a(n-13) -495', 'a(n-3) -a(n-13) -550', 'a(n-13) -a(n-14) -55', 'a(n-12) -a(n-14) -110', 'a(n-11) -a(n-14) -165', 'a(n-10) -a(n-14) -220', 'a(n-9) -a(n-14) -275', 'a(n-8) -a(n-14) -330', 'a(n-7) -a(n-14) -385', 'a(n-6) -a(n-14) -440', 'a(n-5) -a(n-14) -495', 'a(n-4) -a(n-14) -550', 'a(n-14) -a(n-15) -55', 'a(n-13) -a(n-15) -110', 'a(n-12) -a(n-15) -165', 'a(n-11) -a(n-15) -220', 'a(n-10) -a(n-15) -275', 'a(n-9) -a(n-15) -330', 'a(n-8) -a(n-15) -385', 'a(n-7) -a(n-15) -440', 'a(n-6) -a(n-15) -495', 'a(n-5) -a(n-15) -550', 'a(n-15) -a(n-16) -55', 'a(n-14) -a(n-16) -110', 'a(n-13) -a(n-16) -165', 'a(n-12) -a(n-16) -220', 'a(n-11) -a(n-16) -275', 'a(n-10) -a(n-16) -330', 'a(n-9) -a(n-16) -385', 'a(n-8) -a(n-16) -440', 'a(n-7) -a(n-16) -495', 'a(n-6) -a(n-16) -550', 'a(n-16) -a(n-17) -55', 'a(n-15) -a(n-17) -110', 'a(n-14) -a(n-17) -165', 'a(n-13) -a(n-17) -220', 'a(n-12) -a(n-17) -275', 'a(n-11) -a(n-17) -330', 'a(n-10) -a(n-17) -385', 'a(n-9) -a(n-17) -440', 'a(n-8) -a(n-17) -495', 'a(n-7) -a(n-17) -550', 'a(n-17) -a(n-18) -55', 'a(n-16) -a(n-18) -110', 'a(n-15) -a(n-18) -165', 'a(n-14) -a(n-18) -220', 'a(n-13) -a(n-18) -275', 'a(n-12) -a(n-18) -330', 'a(n-11) -a(n-18) -385', 'a(n-10) -a(n-18) -440', 'a(n-9) -a(n-18) -495', 'a(n-8) -a(n-18) -550', 'a(n-18) -a(n-19) -55', 'a(n-17) -a(n-19) -110', 'a(n-16) -a(n-19) -165', 'a(n-15) -a(n-19) -220', 'a(n-14) -a(n-19) -275', 'a(n-13) -a(n-19) -330', 'a(n-12) -a(n-19) -385', 'a(n-11) -a(n-19) -440', 'a(n-10) -a(n-19) -495', 'a(n-9) -a(n-19) -550', 'a(n-19) -a(n-20) -55', 'a(n-18) -a(n-20) -110', 'a(n-17) -a(n-20) -165', 'a(n-16) -a(n-20) -220', 'a(n-15) -a(n-20) -275', 'a(n-14) -a(n-20) -330', 'a(n-13) -a(n-20) -385', 'a(n-12) -a(n-20) -440', 'a(n-11) -a(n-20) -495', 'a(n-10) -a(n-20) -550']
A139611: 
MB not reconst
truth: 
a(n) = 2*a(n - 1) + -1*a(n - 2),  
a(0) = 11, a(1) = 66

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    


orders_used: [16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:8696/10000, seq_id:A054503, order:20 took:
 25.8 seconds, i.e. 0.43 minutes or 0.007 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 16.
eqs_explicit:
[]
non_linears:
['a(n-9)*a(n-14) +(-125/16)*a(n-9) +(-61/8)*a(n-10) +(-83/32)*a(n-11) +(-7/2)*a(n-12) +(-27/8)*a(n-13) +(11/8)*a(n-14) +(305/32)*a(n-15) +(405/32)*a(n-16) +805/32', 'a(n-16)^2 +(-50/71)*a(n-9) +(-42/71)*a(n-10) +(-60/71)*a(n-11) +(7/71)*a(n-12) +(-41/71)*a(n-13) +(68/71)*a(n-14) +(51/71)*a(n-15) +(-85/71)*a(n-16) +189/71', 'a(n-11)*a(n-15) +(23/71)*a(n-9) +(25/71)*a(n-10) +(-101/142)*a(n-11) +(55/71)*a(n-12) +(-127/142)*a(n-13) +(105/142)*a(n-14) +(-365/142)*a(n-15) +(-39/71)*a(n-16) -6/71', 'a(n-14)*a(n-15) +(-57/284)*a(n-9) +(-85/142)*a(n-10) +(133/568)*a(n-11) +(-45/142)*a(n-12) +(5/71)*a(n-13) +(-143/142)*a(n-14) +(-571/568)*a(n-15) +(573/568)*a(n-16) +1033/568', 'a(n-14)^2 +(-236/89)*a(n-11) +(-29/89)*a(n-12) +(-79/89)*a(n-13) +(-403/89)*a(n-14) +(45/89)*a(n-15) +(16/89)*a(n-16) +(400/89)*a(n-17) +593/89', 'a(n-11)^2 +(-254/89)*a(n-11) +(-38/89)*a(n-12) +(53/89)*a(n-13) +(9/89)*a(n-14) +(105/89)*a(n-15) +(-200/89)*a(n-16) +(-194/89)*a(n-17) +108/89', 'a(n-15)*a(n-17) +(13/178)*a(n-11) +(51/178)*a(n-12) +(-125/178)*a(n-13) +(49/89)*a(n-14) +(-81/89)*a(n-15) +(67/178)*a(n-16) +(-97/89)*a(n-17) +54/89', 'a(n-16)*a(n-17) +(-30/89)*a(n-11) +(-15/89)*a(n-12) +(42/89)*a(n-13) +(-21/178)*a(n-14) +(111/178)*a(n-15) +(-93/89)*a(n-16) +(-111/178)*a(n-17) +15/178', 'a(n-15)*a(n-16) +(-32/89)*a(n-11) +(57/178)*a(n-12) +(-35/178)*a(n-13) +(31/178)*a(n-14) +(-101/89)*a(n-15) +(-117/89)*a(n-16) +(113/178)*a(n-17) +97/89', 'a(n-11)*a(n-16) +(-103/89)*a(n-11) +(75/178)*a(n-12) +(57/178)*a(n-13) +(97/178)*a(n-14) +(17/89)*a(n-15) +(-257/89)*a(n-16) +(-123/178)*a(n-17) +48/89', 'a(n-11)*a(n-15) +(-59/89)*a(n-11) +(119/178)*a(n-12) +(-173/178)*a(n-13) +(199/178)*a(n-14) +(-189/89)*a(n-15) +(4/89)*a(n-16) +(-67/178)*a(n-17) +37/89', 'a(n-12)*a(n-15) +(77/178)*a(n-11) +(-92/89)*a(n-12) +(-45/89)*a(n-13) +(67/178)*a(n-14) +(-247/89)*a(n-15) +(123/178)*a(n-16) +(-129/178)*a(n-17) +224/89', 'a(n-3) +(447/178)*a(n-11) +(45/89)*a(n-12) +(15/178)*a(n-13) +(241/178)*a(n-14) +(23/178)*a(n-15) +(-255/89)*a(n-16) +(-323/89)*a(n-17) -690/89', 'a(n-2) +(-335/178)*a(n-11) +(-123/178)*a(n-12) +(12/89)*a(n-13) +(-95/178)*a(n-14) +(-124/89)*a(n-15) +(37/89)*a(n-16) +(302/89)*a(n-17) -161/178', 'a(n-17)*a(n-18) +(12/19)*a(n-14) +(9/38)*a(n-15) +(21/38)*a(n-16) +(-18/19)*a(n-17) +(-51/38)*a(n-18) -45/38', 'a(n-16)*a(n-17) +(1/2)*a(n-13) +(-1/38)*a(n-14) +(21/38)*a(n-15) +(-23/19)*a(n-16) +(-23/19)*a(n-17) +(-5/38)*a(n-18) -5/19', 'a(n-15)^2 +a(n-13) +(7/19)*a(n-14) +(-33/19)*a(n-15) +(-1/19)*a(n-16) +(18/19)*a(n-17) +(-22/19)*a(n-18) -63/19', 'a(n-12) +(1/2)*a(n-13) +(9/19)*a(n-14) +(20/19)*a(n-15) +(-4/19)*a(n-16) +(11/38)*a(n-17) +(-81/38)*a(n-18) -143/38', 'a(n-16)*a(n-18) +(1/4)*a(n-13) +(-14/19)*a(n-14) +(9/19)*a(n-15) +(-17/19)*a(n-16) +(27/76)*a(n-17) +(-71/76)*a(n-18) +67/76', 'a(n-18)^2 +(-2/3)*a(n-13) +(23/57)*a(n-14) +(-9/19)*a(n-15) +(32/57)*a(n-16) +(-25/57)*a(n-17) +(-113/57)*a(n-18) +59/57', 'a(n-13)*a(n-16) +(-5/4)*a(n-13) +(-27/38)*a(n-14) +(-3/38)*a(n-15) +(-51/19)*a(n-16) +(43/76)*a(n-17) +(15/76)*a(n-18) +315/76', 'a(n-14)*a(n-15) +(1/2)*a(n-13) +(-39/38)*a(n-14) +(-18/19)*a(n-15) +(11/38)*a(n-16) +(15/19)*a(n-17) +(-12/19)*a(n-18) -29/38', 'a(n-3) +(1/4)*a(n-13) +(39/38)*a(n-14) +(55/38)*a(n-15) +(-34/19)*a(n-16) +(73/76)*a(n-17) +(-47/76)*a(n-18) -607/76', 'a(n-2) +(1/6)*a(n-13) +(-8/57)*a(n-14) +(-39/19)*a(n-15) +(-26/57)*a(n-16) +(5/114)*a(n-17) +(-23/114)*a(n-18) -217/114', 'a(n-14) +2*a(n-15) +2*a(n-17) -a(n-18) +a(n-19) -7', 'a(n-12) +(7/19)*a(n-15) +(-14/19)*a(n-16) +(-1/19)*a(n-17) +(-39/19)*a(n-18) +(16/19)*a(n-19) -6/19', 'a(n-3) +(-9/19)*a(n-15) +(-39/19)*a(n-16) +(-15/19)*a(n-17) +(4/19)*a(n-18) +(-7/19)*a(n-19) -14/19', 'a(n-11) +(-17/19)*a(n-15) +(-4/19)*a(n-16) +(-41/19)*a(n-17) +(16/19)*a(n-18) +(-9/19)*a(n-19) +20/19', 'a(n-10) +(-17/38)*a(n-15) +(-61/38)*a(n-16) +(8/19)*a(n-17) +(-3/38)*a(n-18) +(24/19)*a(n-19) -37/38', 'a(n-1) +(8/19)*a(n-15) +(22/19)*a(n-16) +(7/19)*a(n-17) +(7/19)*a(n-18) +(40/19)*a(n-19) -186/19', 'a(n-16)*a(n-19) +(9/38)*a(n-15) +(-9/19)*a(n-16) +(15/38)*a(n-17) +(15/38)*a(n-18) +(-69/38)*a(n-19) -12/19', 'a(n-15)*a(n-18) +(-47/38)*a(n-15) +(9/19)*a(n-16) +(-15/38)*a(n-17) +(-53/38)*a(n-18) +(-7/38)*a(n-19) +31/19', 'a(n-13) +(-10/19)*a(n-15) +(20/19)*a(n-16) +(-23/19)*a(n-17) +(15/19)*a(n-18) +(-50/19)*a(n-19) -5/19', 'a(n-9) +(25/19)*a(n-15) +(-5/38)*a(n-16) +(115/38)*a(n-17) +(-9/19)*a(n-18) +(3/38)*a(n-19) -317/38', 'a(n-20)^2 -a(n-20)', 'a(n-17)*a(n-18) +(-3/2)*a(n-17) +(-3/2)*a(n-18) +(3/2)*a(n-20) +3/2', 'n +(-1/2)*a(n-17) +(-1/2)*a(n-18) -a(n-19) +(-1/2)*a(n-20) -39/2', 'a(n-12) +(-5/11)*a(n-17) +(-13/11)*a(n-18) +(3/11)*a(n-19) +(-7/11)*a(n-20) -9/11', 'a(n-19)*a(n-20) +(9/22)*a(n-17) +(-3/22)*a(n-18) +(-6/11)*a(n-19) +(-27/22)*a(n-20) +3/22', 'a(n-18)*a(n-20) +(3/22)*a(n-17) +(-1/22)*a(n-18) +(-2/11)*a(n-19) +(-31/22)*a(n-20) +1/22', 'a(n-17)*a(n-20) +(-9/22)*a(n-17) +(3/22)*a(n-18) +(6/11)*a(n-19) +(-39/22)*a(n-20) -3/22', 'a(n-16) +(-3/11)*a(n-17) +(12/11)*a(n-18) +(-7/11)*a(n-19) +(-2/11)*a(n-20) -23/11', 'a(n-15) +(6/11)*a(n-17) +(-2/11)*a(n-18) +(3/11)*a(n-19) +(15/11)*a(n-20) -31/11', 'a(n-13) +(-7/11)*a(n-17) +(-5/11)*a(n-18) +(-20/11)*a(n-19) +(10/11)*a(n-20) +5/11']
A054503: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    


orders_used: [1, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:3779/10000, seq_id:A029347, order:20 took:
 19.5 seconds, i.e. 0.32 minutes or 0.005 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
eqs_explicit:
['a(n) = (2*n - a(n-5)^2/2 - 3*a(n-5)/2 - a(n-4) - 4*a(n-3) - 3*a(n-2) - a(n-1) - 7)/(a(n-5) + 2)']
non_linears:
['a(n)^2*a(n-1) -a(n)^2 -a(n)*a(n-1) +a(n)', 'a(n-1)^2*a(n-2) -a(n-1)^2 -a(n-1)*a(n-2) +a(n-1)', 'a(n-2)*a(n-3)^2 -a(n-2)*a(n-3)', 'a(n-3)^3 -3*a(n-3)^2 +2*a(n-3)', 'a(n-1)*a(n-3)^2 -a(n-1)*a(n-3) -a(n-3)^2 +a(n-3)', 'a(n)*a(n-3)^2 -a(n)*a(n-3) -a(n-3)^2 +a(n-3)', 'n*a(n-3)^2 -n*a(n-3) -11*a(n-3)^2 +11*a(n-3)', 'a(n-2)^2 +(-40/23)*a(n)*a(n-3) +(14/23)*n*a(n-3) +(-16/23)*a(n-1)*a(n-3) +(-52/23)*a(n-2)*a(n-3) +(-56/23)*a(n-3)^2 -a(n-2) +(14/23)*a(n-3)', 'a(n-3)*a(n-4)^2 -a(n-3)*a(n-4)', 'a(n-4)^3 -3*a(n-4)^2 +2*a(n-4)', 'a(n-2)*a(n-4)^2 -a(n-2)*a(n-4) -a(n-4)^2 +a(n-4)', 'a(n-1)*a(n-4)^2 -a(n-1)*a(n-4) -a(n-4)^2 +a(n-4)', 'a(n-3)^2 +(-2/5)*a(n-1)*a(n-4) +(2/5)*a(n-2)*a(n-4) +(-4/5)*a(n-3)*a(n-4) -a(n-3)', 'n*a(n-4) +(-11/5)*a(n-1)*a(n-4) +(-9/5)*a(n-2)*a(n-4) +(-12/5)*a(n-3)*a(n-4) -4*a(n-4)^2', 'a(n-4)*a(n-5)^2 -a(n-4)*a(n-5)', 'a(n-5)^3 -3*a(n-5)^2 +2*a(n-5)', 'a(n)*a(n-5) +(1/2)*a(n-5)^2 +2*a(n) -2*n +a(n-1) +3*a(n-2) +4*a(n-3) +a(n-4) +(3/2)*a(n-5) +7']
A029347: 
a(n) = (2*n - a(n-5)^2/2 - 3*a(n-5)/2 - a(n-4) - 4*a(n-3) - 3*a(n-2) - a(n-1) - 7)/(a(n-5) + 2)
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

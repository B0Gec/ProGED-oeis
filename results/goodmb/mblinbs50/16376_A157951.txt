
orders_used: [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
While total time consumed by now, scale:16377/27236, seq_id:A157951, order:20 took:
 52.5 seconds, i.e. 0.87 minutes or 0.015 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
non_linears:
['a(n) -a(n-1) -128', 'a(n-1) -a(n-2) -128', 'a(n) -a(n-2) -256', 'a(n-2) -a(n-3) -128', 'a(n-1) -a(n-3) -256', 'a(n) -a(n-3) -384', 'a(n-3) -a(n-4) -128', 'a(n-2) -a(n-4) -256', 'a(n-1) -a(n-4) -384', 'a(n) -a(n-4) -512', 'a(n-4) -a(n-5) -128', 'a(n-3) -a(n-5) -256', 'a(n-2) -a(n-5) -384', 'a(n-1) -a(n-5) -512', 'a(n) -a(n-5) -640', 'a(n-5) -a(n-6) -128', 'a(n-4) -a(n-6) -256', 'a(n-3) -a(n-6) -384', 'a(n-2) -a(n-6) -512', 'a(n-1) -a(n-6) -640', 'a(n) -a(n-6) -768', 'a(n-6) -a(n-7) -128', 'a(n-5) -a(n-7) -256', 'a(n-4) -a(n-7) -384', 'a(n-3) -a(n-7) -512', 'a(n-2) -a(n-7) -640', 'a(n-1) -a(n-7) -768', 'a(n) -a(n-7) -896', 'a(n-7) -a(n-8) -128', 'a(n-6) -a(n-8) -256', 'a(n-5) -a(n-8) -384', 'a(n-4) -a(n-8) -512', 'a(n-3) -a(n-8) -640', 'a(n-2) -a(n-8) -768', 'a(n-1) -a(n-8) -896', 'a(n) -a(n-8) -1024', 'a(n-8) -a(n-9) -128', 'a(n-7) -a(n-9) -256', 'a(n-6) -a(n-9) -384', 'a(n-5) -a(n-9) -512', 'a(n-4) -a(n-9) -640', 'a(n-3) -a(n-9) -768', 'a(n-2) -a(n-9) -896', 'a(n-1) -a(n-9) -1024', 'a(n) -a(n-9) -1152', 'a(n-9) -a(n-10) -128', 'a(n-8) -a(n-10) -256', 'a(n-7) -a(n-10) -384', 'a(n-6) -a(n-10) -512', 'a(n-5) -a(n-10) -640', 'a(n-4) -a(n-10) -768', 'a(n-3) -a(n-10) -896', 'a(n-2) -a(n-10) -1024', 'a(n-1) -a(n-10) -1152', 'a(n) -a(n-10) -1280', 'a(n-10) -a(n-11) -128', 'a(n-9) -a(n-11) -256', 'a(n-8) -a(n-11) -384', 'a(n-7) -a(n-11) -512', 'a(n-6) -a(n-11) -640', 'a(n-5) -a(n-11) -768', 'a(n-4) -a(n-11) -896', 'a(n-3) -a(n-11) -1024', 'a(n-2) -a(n-11) -1152', 'a(n-1) -a(n-11) -1280', 'a(n-11) -a(n-12) -128', 'a(n-10) -a(n-12) -256', 'a(n-9) -a(n-12) -384', 'a(n-8) -a(n-12) -512', 'a(n-7) -a(n-12) -640', 'a(n-6) -a(n-12) -768', 'a(n-5) -a(n-12) -896', 'a(n-4) -a(n-12) -1024', 'a(n-3) -a(n-12) -1152', 'a(n-2) -a(n-12) -1280', 'a(n-12) -a(n-13) -128', 'a(n-11) -a(n-13) -256', 'a(n-10) -a(n-13) -384', 'a(n-9) -a(n-13) -512', 'a(n-8) -a(n-13) -640', 'a(n-7) -a(n-13) -768', 'a(n-6) -a(n-13) -896', 'a(n-5) -a(n-13) -1024', 'a(n-4) -a(n-13) -1152', 'a(n-3) -a(n-13) -1280', 'a(n-13) -a(n-14) -128', 'a(n-12) -a(n-14) -256', 'a(n-11) -a(n-14) -384', 'a(n-10) -a(n-14) -512', 'a(n-9) -a(n-14) -640', 'a(n-8) -a(n-14) -768', 'a(n-7) -a(n-14) -896', 'a(n-6) -a(n-14) -1024', 'a(n-5) -a(n-14) -1152', 'a(n-4) -a(n-14) -1280', 'a(n-14) -a(n-15) -128', 'a(n-13) -a(n-15) -256', 'a(n-12) -a(n-15) -384', 'a(n-11) -a(n-15) -512', 'a(n-10) -a(n-15) -640', 'a(n-9) -a(n-15) -768', 'a(n-8) -a(n-15) -896', 'a(n-7) -a(n-15) -1024', 'a(n-6) -a(n-15) -1152', 'a(n-5) -a(n-15) -1280', 'a(n-15) -a(n-16) -128', 'a(n-14) -a(n-16) -256', 'a(n-13) -a(n-16) -384', 'a(n-12) -a(n-16) -512', 'a(n-11) -a(n-16) -640', 'a(n-10) -a(n-16) -768', 'a(n-9) -a(n-16) -896', 'a(n-8) -a(n-16) -1024', 'a(n-7) -a(n-16) -1152', 'a(n-6) -a(n-16) -1280', 'a(n-16) -a(n-17) -128', 'a(n-15) -a(n-17) -256', 'a(n-14) -a(n-17) -384', 'a(n-13) -a(n-17) -512', 'a(n-12) -a(n-17) -640', 'a(n-11) -a(n-17) -768', 'a(n-10) -a(n-17) -896', 'a(n-9) -a(n-17) -1024', 'a(n-8) -a(n-17) -1152', 'a(n-7) -a(n-17) -1280', 'a(n-17) -a(n-18) -128', 'a(n-16) -a(n-18) -256', 'a(n-15) -a(n-18) -384', 'a(n-14) -a(n-18) -512', 'a(n-13) -a(n-18) -640', 'a(n-12) -a(n-18) -768', 'a(n-11) -a(n-18) -896', 'a(n-10) -a(n-18) -1024', 'a(n-9) -a(n-18) -1152', 'a(n-8) -a(n-18) -1280', 'a(n-18) -a(n-19) -128', 'a(n-17) -a(n-19) -256', 'a(n-16) -a(n-19) -384', 'a(n-15) -a(n-19) -512', 'a(n-14) -a(n-19) -640', 'a(n-13) -a(n-19) -768', 'a(n-12) -a(n-19) -896', 'a(n-11) -a(n-19) -1024', 'a(n-10) -a(n-19) -1152', 'a(n-9) -a(n-19) -1280', 'a(n-19) -a(n-20) -128', 'a(n-18) -a(n-20) -256', 'a(n-17) -a(n-20) -384', 'a(n-16) -a(n-20) -512', 'a(n-15) -a(n-20) -640', 'a(n-14) -a(n-20) -768', 'a(n-13) -a(n-20) -896', 'a(n-12) -a(n-20) -1024', 'a(n-11) -a(n-20) -1152', 'a(n-10) -a(n-20) -1280']
A157951: 
MB not reconst
truth: 
a(n) = 2*a(n - 1) + -1*a(n - 2),  
a(0) = 129, a(1) = 257

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

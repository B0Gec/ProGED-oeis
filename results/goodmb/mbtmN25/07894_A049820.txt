
orders_used: [15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:7895/10000, seq_id:A049820, order:20 took:
 45.7 seconds, i.e. 0.76 minutes or 0.013 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 15.
eqs_explicit:
[]
non_linears:
['n +(-1/2)*a(n-7) -a(n-8) +(-3/2)*a(n-9) -a(n-10) +(1/2)*a(n-11) +(3/2)*a(n-12) +(3/2)*a(n-13) +(-1/2)*a(n-15) -3', 'a(n-10)*a(n-16) -8*a(n-9) +a(n-10) +7*a(n-11) +18*a(n-12) +10*a(n-13) -10*a(n-14) -6*a(n-15) -25*a(n-16) -41', 'a(n-11)*a(n-14) -9*a(n-9) -2*a(n-10) +9*a(n-11) +31*a(n-12) +21*a(n-13) -27*a(n-14) -25*a(n-15) -12*a(n-16) -61', 'a(n-11)*a(n-15) +3*a(n-9) +14*a(n-10) +23*a(n-11) +20*a(n-12) -7*a(n-13) -36*a(n-14) -32*a(n-15) +a(n-16) -145', 'a(n-14)*a(n-15) +(-17/2)*a(n-9) +(5/2)*a(n-10) +12*a(n-11) +26*a(n-12) +(29/2)*a(n-13) -22*a(n-14) +(-41/2)*a(n-15) +(-29/2)*a(n-16) -73', 'n +(-1/34)*a(n-9) +(-7/34)*a(n-10) +(-7/17)*a(n-11) +(-9/17)*a(n-12) +(-11/34)*a(n-13) +(1/17)*a(n-14) +(7/34)*a(n-15) +(5/34)*a(n-16) -207/17', 'a(n-1) +(-24/17)*a(n-9) +(2/17)*a(n-10) +(4/17)*a(n-11) +(27/17)*a(n-12) +(-9/17)*a(n-13) +(-3/17)*a(n-14) +(15/17)*a(n-15) +(-33/17)*a(n-16) -178/17', 'a(n-4) +(33/17)*a(n-9) +(-7/17)*a(n-10) +(-31/17)*a(n-11) +(-52/17)*a(n-12) +(-11/17)*a(n-13) +(70/17)*a(n-14) +(7/17)*a(n-15) +(-29/17)*a(n-16) -125/17', 'a(n-3) +(-21/17)*a(n-9) +(-62/17)*a(n-10) +(-56/17)*a(n-11) +(-4/17)*a(n-12) +(75/17)*a(n-13) +(76/17)*a(n-14) +(-23/17)*a(n-15) +(3/17)*a(n-16) +197/17', 'a(n-8) +(33/17)*a(n-9) +(44/17)*a(n-10) +(20/17)*a(n-11) +(-35/17)*a(n-12) +(-62/17)*a(n-13) +(-49/17)*a(n-14) +(7/17)*a(n-15) +(22/17)*a(n-16) -278/17', 'a(n-6) +(-45/34)*a(n-9) +(-43/34)*a(n-10) +(25/17)*a(n-11) +(20/17)*a(n-12) +(49/34)*a(n-13) +(-40/17)*a(n-14) +(-59/34)*a(n-15) +(55/34)*a(n-16) -50/17', 'a(n-11)^2 +a(n-11) +14*a(n-12) +10*a(n-13) -10*a(n-14) -16*a(n-15) -2*a(n-16) -16*a(n-17) -62', 'n +(-4/23)*a(n-11) +(-9/23)*a(n-12) +(-13/23)*a(n-13) +(-9/23)*a(n-14) +(1/23)*a(n-15) +(5/23)*a(n-16) +(4/23)*a(n-17) -306/23', 'a(n-9) +(11/23)*a(n-11) +(-4/23)*a(n-12) +(7/23)*a(n-13) +(19/23)*a(n-14) +(-43/23)*a(n-15) +(-8/23)*a(n-16) +(-11/23)*a(n-17) -182/23', 'a(n-10) +(25/23)*a(n-11) +(16/23)*a(n-12) +(-28/23)*a(n-13) +(-53/23)*a(n-14) +(-12/23)*a(n-15) +(9/23)*a(n-16) +(21/23)*a(n-17) -100/23', 'a(n-7) +(4/23)*a(n-11) +(55/23)*a(n-12) +(-10/23)*a(n-13) +(-37/23)*a(n-14) +(-70/23)*a(n-15) +(-28/23)*a(n-16) +(65/23)*a(n-17) -200/23', 'a(n-5) +(-58/23)*a(n-11) +(-73/23)*a(n-12) +(-16/23)*a(n-13) +(88/23)*a(n-14) +(118/23)*a(n-15) +(-8/23)*a(n-16) +(-80/23)*a(n-17) +25/23', 'a(n-2) +(38/23)*a(n-11) +(28/23)*a(n-12) +(-3/23)*a(n-13) +(-87/23)*a(n-14) +(-21/23)*a(n-15) +(33/23)*a(n-16) +(-15/23)*a(n-17) -382/23', 'a(n-1) +(18/23)*a(n-11) +(29/23)*a(n-12) +(1/23)*a(n-13) +(29/23)*a(n-14) +(-39/23)*a(n-15) +(-57/23)*a(n-16) +(-18/23)*a(n-17) -486/23', 'a(n-6) +(80/23)*a(n-11) +(42/23)*a(n-12) +(7/23)*a(n-13) +(-96/23)*a(n-14) +(-112/23)*a(n-15) +(38/23)*a(n-16) +(12/23)*a(n-17) -435/23', 'a(n-4) +(-53/23)*a(n-11) +(-56/23)*a(n-12) +(-40/23)*a(n-13) +(36/23)*a(n-14) +(88/23)*a(n-15) +(-20/23)*a(n-16) +(30/23)*a(n-17) +143/23', 'a(n-16)*a(n-17) -4*a(n-13) +9*a(n-15) +8*a(n-16) -7*a(n-17) -13*a(n-18) -9', 'a(n-17)*a(n-18) +(-13/3)*a(n-13) +(-8/3)*a(n-14) +6*a(n-15) +(32/3)*a(n-16) +(-5/3)*a(n-17) +(-38/3)*a(n-18)', 'a(n-7) +(-14/3)*a(n-13) +(-13/3)*a(n-14) +(16/3)*a(n-16) +(14/3)*a(n-17) +(-4/3)*a(n-18) +11', 'a(n-11) +(-4/3)*a(n-13) +(-8/3)*a(n-14) -a(n-15) +(8/3)*a(n-16) +(4/3)*a(n-17) +(1/3)*a(n-18) +5', 'a(n-2) +(-1/5)*a(n-13) -a(n-14) +(11/5)*a(n-15) +(3/5)*a(n-16) +(-9/5)*a(n-17) +(-6/5)*a(n-18) -72/5', 'a(n-15)*a(n-18) +(-10/3)*a(n-13) +(-5/3)*a(n-14) +5*a(n-15) +(29/3)*a(n-16) +(-5/3)*a(n-17) +(-44/3)*a(n-18) -3', 'a(n-13)*a(n-18) +(2/3)*a(n-13) +(16/3)*a(n-14) +6*a(n-15) +(-4/3)*a(n-16) +(-26/3)*a(n-17) +(-32/3)*a(n-18) -22', 'a(n-13)*a(n-14) +(-8/3)*a(n-13) +(8/3)*a(n-14) +10*a(n-15) +(-2/3)*a(n-16) +(-40/3)*a(n-17) +(-28/3)*a(n-18) -18', 'a(n-14)*a(n-16) +(-26/3)*a(n-13) +(-25/3)*a(n-14) +7*a(n-15) +(43/3)*a(n-16) +(14/3)*a(n-17) +(-55/3)*a(n-18) +18', 'a(n-14)*a(n-15) +(-23/5)*a(n-13) -4*a(n-14) +(28/5)*a(n-15) +(64/5)*a(n-16) +(-22/5)*a(n-17) +(-83/5)*a(n-18) -1/5', 'a(n-12) -a(n-15) +(-3/2)*a(n-16) +(-1/2)*a(n-17) +(5/2)*a(n-19) +1', 'a(n-4) +(-5/2)*a(n-16) +(-1/2)*a(n-17) +a(n-18) +(3/2)*a(n-19) -8', 'a(n-10) +(3/4)*a(n-15) +(-9/8)*a(n-16) +(7/8)*a(n-17) +(-17/8)*a(n-19) -8', 'n +(-1/4)*a(n-15) +(-5/8)*a(n-16) +(-5/8)*a(n-17) +(3/8)*a(n-19) -17', 'a(n-8) +(3/2)*a(n-15) +(-7/4)*a(n-16) +(-23/4)*a(n-17) +(25/4)*a(n-19) -3', 'a(n-15)^2 +(-5/2)*a(n-15) +(13/4)*a(n-16) +(-19/4)*a(n-17) -4*a(n-18) +(-3/4)*a(n-19)', 'a(n-11) +a(n-15) +a(n-16) -3*a(n-17) -a(n-18) +a(n-19) -7', 'a(n-16)*a(n-17) +5*a(n-15) +6*a(n-16) -a(n-17) -9*a(n-18) -10*a(n-19) -21', 'a(n-13) -a(n-15) +(-1/2)*a(n-16) +(3/2)*a(n-17) +a(n-18) +(-5/2)*a(n-19) -3', 'a(n-6) -a(n-15) +(-1/2)*a(n-16) +(3/2)*a(n-17) -a(n-18) +(-1/2)*a(n-19) -8', 'a(n-6) -3*a(n-18) +2*a(n-20) -8', 'a(n-17)*a(n-20) +3*a(n-18) -8*a(n-20) -3', 'a(n-13) -a(n-18) -2*a(n-19) +2*a(n-20) -3', 'a(n-18)*a(n-19) +a(n-18) -a(n-19) -4*a(n-20) -1', 'a(n-20)^2 +(-3/2)*a(n-17) +(3/2)*a(n-18) +3*a(n-19) +(-11/2)*a(n-20)', 'a(n-14) +a(n-17) +a(n-18) -a(n-19) -3*a(n-20) -7', 'a(n-9) -4*a(n-17) -5*a(n-18) +3*a(n-19) +7*a(n-20) +3', 'a(n-18)*a(n-20) -2*a(n-17) +a(n-18) +4*a(n-19) -7*a(n-20) +1', 'a(n-17)^2 -a(n-17) +6*a(n-18) -6*a(n-19) -8*a(n-20) -6', 'a(n-7) +a(n-17) +a(n-18) -3*a(n-19) -a(n-20) -12']
A049820: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

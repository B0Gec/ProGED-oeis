
orders_used: [9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:6411/10000, seq_id:A040714, order:20 took:
 29.3 seconds, i.e. 0.49 minutes or 0.008 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 9.
eqs_explicit:
[]
non_linears:
['a(n-2) +(-63/2417)*a(n-5) +(-1800/2417)*a(n-6) +(-1848/2417)*a(n-7) +(1053/2417)*a(n-8) +(-404/2417)*a(n-9) +3486/2417', 'a(n-1) +(-570/2417)*a(n-5) +(288/2417)*a(n-6) +(2616/2417)*a(n-7) +(895/2417)*a(n-8) +(258/2417)*a(n-9) -24051/2417', 'a(n-4) +(6152/2417)*a(n-5) +(7272/2417)*a(n-6) +(5629/2417)*a(n-7) +(3867/2417)*a(n-8) +(472/2417)*a(n-9) -107573/2417', 'a(n-6)^2 +(5011/4834)*a(n-5) +(-19915/2417)*a(n-6) +(-2238/2417)*a(n-7) +(6019/4834)*a(n-8) +(-131/4834)*a(n-9) +16793/4834', 'a(n-4) +(3967/4027)*a(n-7) +(1073/4027)*a(n-8) +(40/4027)*a(n-9) +(1208/4027)*a(n-10) -46135/4027', 'a(n-3) +(-2808/4027)*a(n-7) +(-2940/4027)*a(n-8) +(1872/4027)*a(n-9) +(-649/4027)*a(n-10) +3381/4027', 'a(n-1) +(1944/4027)*a(n-7) +(-133/4027)*a(n-8) +(-1296/4027)*a(n-9) +(-480/4027)*a(n-10) -15351/4027', 'a(n-6) +(7328/4027)*a(n-7) +(5332/4027)*a(n-8) +(4511/4027)*a(n-9) +(925/4027)*a(n-10) -93115/4027', 'a(n-2) +(2208/4027)*a(n-7) +(5616/4027)*a(n-8) +(2555/4027)*a(n-9) +(648/4027)*a(n-10) -62031/4027', 'n +(-2010/4027)*a(n-7) +(-2311/4027)*a(n-8) +(-2687/4027)*a(n-9) +(198/4027)*a(n-10) -21303/4027', 'a(n-5) +(-6536/4027)*a(n-7) +(-4193/4027)*a(n-8) +(-5039/4027)*a(n-9) +(-1568/4027)*a(n-10) +57777/4027', 'a(n-8)*a(n-9) +(4671/4027)*a(n-7) +(-14470/4027)*a(n-8) +(-7141/4027)*a(n-9) +(189/4027)*a(n-10) +10600/4027', 'a(n-7)*a(n-8) +(-14926/4027)*a(n-7) +(-7849/4027)*a(n-8) +(7266/4027)*a(n-9) +(-441/4027)*a(n-10) +16879/4027', 'a(n-9)*a(n-10) +(1557/4027)*a(n-7) +(546/4027)*a(n-8) +(-17146/4027)*a(n-9) +(-16045/4027)*a(n-10) +62596/4027', 'a(n-4) +(-12/47)*a(n-9) +(72/47)*a(n-10) +(-5/47)*a(n-11) -375/47', 'a(n-7) +(4/47)*a(n-9) +(-1017/611)*a(n-10) +(53/611)*a(n-11) -67/611', 'n +(-11/47)*a(n-9) +(59/611)*a(n-10) +(54/611)*a(n-11) -7700/611', 'a(n-8) +(32/47)*a(n-9) +(935/611)*a(n-10) +(48/611)*a(n-11) -7727/611', 'a(n-6) +(3/47)*a(n-9) +(753/611)*a(n-10) +(-160/611)*a(n-11) -3775/611', 'a(n-5) +(-19/47)*a(n-9) +(-915/611)*a(n-10) +(136/611)*a(n-11) +612/611', 'a(n-3) +(48/47)*a(n-9) +(-125/611)*a(n-10) +(72/611)*a(n-11) -5175/611', 'a(n-2) +(-17/47)*a(n-9) +(-648/611)*a(n-10) +(-96/611)*a(n-11) +1401/611', 'a(n-1) +(-16/47)*a(n-9) +(449/611)*a(n-10) +(-24/611)*a(n-11) -2552/611', 'a(n-10)^2 +(24/47)*a(n-9) +(-3423/611)*a(n-10) +(36/611)*a(n-11) +1384/611', 'a(n-10) +(5/7)*a(n-11) +(-1/7)*a(n-12) -4', 'a(n-5) +(12/7)*a(n-11) +(-1/7)*a(n-12) -9', 'a(n-8) +(-157/91)*a(n-11) +(9/91)*a(n-12) +3/13', 'a(n-2) +(89/91)*a(n-11) +(-8/91)*a(n-12) -72/13', 'a(n-6) +(-110/91)*a(n-11) +(15/91)*a(n-12) -8/13', 'a(n-4) +(-85/91)*a(n-11) +(24/91)*a(n-12) -57/13', 'a(n-3) +(-73/91)*a(n-11) +(-19/91)*a(n-12) +11/13', 'a(n-1) +(-19/91)*a(n-11) +(15/91)*a(n-12) -60/13', 'n +(24/91)*a(n-11) +(5/91)*a(n-12) -189/13', 'a(n-9) +(95/91)*a(n-11) +(16/91)*a(n-12) -129/13', 'a(n-13)^2 -31*a(n-13) +108', 'a(n-11) +(-4/23)*a(n-13) -7/23', 'a(n-8) +(-7/23)*a(n-13) +5/23', 'a(n-6) +(-5/23)*a(n-13) -3/23', 'a(n-4) +(-4/23)*a(n-13) -76/23', 'a(n-3) +(-3/23)*a(n-13) -11/23', 'a(n-1) +(-1/23)*a(n-13) -88/23', 'a(n-12) +(1/23)*a(n-13) -119/23', 'a(n-10) +(3/23)*a(n-13) -104/23', 'a(n-9) +(4/23)*a(n-13) -200/23']
A040714: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

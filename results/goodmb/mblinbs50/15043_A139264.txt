
orders_used: [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
While total time consumed by now, scale:15044/27236, seq_id:A139264, order:20 took:
 51.2 seconds, i.e. 0.85 minutes or 0.014 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
non_linears:
['a(n) -a(n-1) -70', 'a(n-1) -a(n-2) -70', 'a(n) -a(n-2) -140', 'a(n-2) -a(n-3) -70', 'a(n-1) -a(n-3) -140', 'a(n) -a(n-3) -210', 'a(n-3) -a(n-4) -70', 'a(n-2) -a(n-4) -140', 'a(n-1) -a(n-4) -210', 'a(n) -a(n-4) -280', 'a(n-4) -a(n-5) -70', 'a(n-3) -a(n-5) -140', 'a(n-2) -a(n-5) -210', 'a(n-1) -a(n-5) -280', 'a(n) -a(n-5) -350', 'a(n-5) -a(n-6) -70', 'a(n-4) -a(n-6) -140', 'a(n-3) -a(n-6) -210', 'a(n-2) -a(n-6) -280', 'a(n-1) -a(n-6) -350', 'a(n) -a(n-6) -420', 'a(n-6) -a(n-7) -70', 'a(n-5) -a(n-7) -140', 'a(n-4) -a(n-7) -210', 'a(n-3) -a(n-7) -280', 'a(n-2) -a(n-7) -350', 'a(n-1) -a(n-7) -420', 'a(n) -a(n-7) -490', 'a(n-7) -a(n-8) -70', 'a(n-6) -a(n-8) -140', 'a(n-5) -a(n-8) -210', 'a(n-4) -a(n-8) -280', 'a(n-3) -a(n-8) -350', 'a(n-2) -a(n-8) -420', 'a(n-1) -a(n-8) -490', 'a(n) -a(n-8) -560', 'a(n-8) -a(n-9) -70', 'a(n-7) -a(n-9) -140', 'a(n-6) -a(n-9) -210', 'a(n-5) -a(n-9) -280', 'a(n-4) -a(n-9) -350', 'a(n-3) -a(n-9) -420', 'a(n-2) -a(n-9) -490', 'a(n-1) -a(n-9) -560', 'a(n) -a(n-9) -630', 'a(n-9) -a(n-10) -70', 'a(n-8) -a(n-10) -140', 'a(n-7) -a(n-10) -210', 'a(n-6) -a(n-10) -280', 'a(n-5) -a(n-10) -350', 'a(n-4) -a(n-10) -420', 'a(n-3) -a(n-10) -490', 'a(n-2) -a(n-10) -560', 'a(n-1) -a(n-10) -630', 'a(n) -a(n-10) -700', 'a(n-10) -a(n-11) -70', 'a(n-9) -a(n-11) -140', 'a(n-8) -a(n-11) -210', 'a(n-7) -a(n-11) -280', 'a(n-6) -a(n-11) -350', 'a(n-5) -a(n-11) -420', 'a(n-4) -a(n-11) -490', 'a(n-3) -a(n-11) -560', 'a(n-2) -a(n-11) -630', 'a(n-1) -a(n-11) -700', 'a(n-11) -a(n-12) -70', 'a(n-10) -a(n-12) -140', 'a(n-9) -a(n-12) -210', 'a(n-8) -a(n-12) -280', 'a(n-7) -a(n-12) -350', 'a(n-6) -a(n-12) -420', 'a(n-5) -a(n-12) -490', 'a(n-4) -a(n-12) -560', 'a(n-3) -a(n-12) -630', 'a(n-2) -a(n-12) -700', 'a(n-12) -a(n-13) -70', 'a(n-11) -a(n-13) -140', 'a(n-10) -a(n-13) -210', 'a(n-9) -a(n-13) -280', 'a(n-8) -a(n-13) -350', 'a(n-7) -a(n-13) -420', 'a(n-6) -a(n-13) -490', 'a(n-5) -a(n-13) -560', 'a(n-4) -a(n-13) -630', 'a(n-3) -a(n-13) -700', 'a(n-13) -a(n-14) -70', 'a(n-12) -a(n-14) -140', 'a(n-11) -a(n-14) -210', 'a(n-10) -a(n-14) -280', 'a(n-9) -a(n-14) -350', 'a(n-8) -a(n-14) -420', 'a(n-7) -a(n-14) -490', 'a(n-6) -a(n-14) -560', 'a(n-5) -a(n-14) -630', 'a(n-4) -a(n-14) -700', 'a(n-14) -a(n-15) -70', 'a(n-13) -a(n-15) -140', 'a(n-12) -a(n-15) -210', 'a(n-11) -a(n-15) -280', 'a(n-10) -a(n-15) -350', 'a(n-9) -a(n-15) -420', 'a(n-8) -a(n-15) -490', 'a(n-7) -a(n-15) -560', 'a(n-6) -a(n-15) -630', 'a(n-5) -a(n-15) -700', 'a(n-15) -a(n-16) -70', 'a(n-14) -a(n-16) -140', 'a(n-13) -a(n-16) -210', 'a(n-12) -a(n-16) -280', 'a(n-11) -a(n-16) -350', 'a(n-10) -a(n-16) -420', 'a(n-9) -a(n-16) -490', 'a(n-8) -a(n-16) -560', 'a(n-7) -a(n-16) -630', 'a(n-6) -a(n-16) -700', 'a(n-16) -a(n-17) -70', 'a(n-15) -a(n-17) -140', 'a(n-14) -a(n-17) -210', 'a(n-13) -a(n-17) -280', 'a(n-12) -a(n-17) -350', 'a(n-11) -a(n-17) -420', 'a(n-10) -a(n-17) -490', 'a(n-9) -a(n-17) -560', 'a(n-8) -a(n-17) -630', 'a(n-7) -a(n-17) -700', 'a(n-17) -a(n-18) -70', 'a(n-16) -a(n-18) -140', 'a(n-15) -a(n-18) -210', 'a(n-14) -a(n-18) -280', 'a(n-13) -a(n-18) -350', 'a(n-12) -a(n-18) -420', 'a(n-11) -a(n-18) -490', 'a(n-10) -a(n-18) -560', 'a(n-9) -a(n-18) -630', 'a(n-8) -a(n-18) -700', 'a(n-18) -a(n-19) -70', 'a(n-17) -a(n-19) -140', 'a(n-16) -a(n-19) -210', 'a(n-15) -a(n-19) -280', 'a(n-14) -a(n-19) -350', 'a(n-13) -a(n-19) -420', 'a(n-12) -a(n-19) -490', 'a(n-11) -a(n-19) -560', 'a(n-10) -a(n-19) -630', 'a(n-9) -a(n-19) -700', 'a(n-19) -a(n-20) -70', 'a(n-18) -a(n-20) -140', 'a(n-17) -a(n-20) -210', 'a(n-16) -a(n-20) -280', 'a(n-15) -a(n-20) -350', 'a(n-14) -a(n-20) -420', 'a(n-13) -a(n-20) -490', 'a(n-12) -a(n-20) -560', 'a(n-11) -a(n-20) -630', 'a(n-10) -a(n-20) -700']
A139264: 
MB not reconst
truth: 
a(n) = 2*a(n - 1) + -1*a(n - 2),  
a(0) = 7, a(1) = 77

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

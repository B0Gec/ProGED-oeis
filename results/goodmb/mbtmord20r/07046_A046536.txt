
orders_used: [2, 3, 2, 3, 3, 4, 4, 3, 2, 4, 4, 4, 4, 4, 4, 5, 5, 4, 4, 3, 2, 5, 5, 5, 5, 6, 6, 6, 5, 5, 4, 4, 3, 2, 7, 7, 7, 6, 6, 6, 5, 5, 4, 4, 8, 8, 8, 7, 7, 6, 6, 5, 4, 8, 9, 9, 8, 8, 7, 6, 9, 9, 9, 9, 10, 10, 10, 10, 9, 8, 10, 10, 10, 10, 11, 11, 11, 11, 9, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:7047/10000, seq_id:A046536, order:20 took:
 53.3 seconds, i.e. 0.89 minutes or 0.015 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 2.
eqs_explicit:
[]
non_linears:
['a(n-1)*a(n-2) -3*a(n-1) -3*a(n-2) +9', 'a(n-2)*a(n-3) -3*a(n-2) -3*a(n-3) +9', 'a(n-1)*a(n-2) -3*a(n-1) -3*a(n-2) +9', 'a(n)*a(n-3)^2 -13*a(n)*a(n-3) -3*a(n-3)^2 +30*a(n) +39*a(n-3) -90', 'a(n)*a(n-1) +(-2/7)*a(n)*a(n-3) +(-15/7)*a(n) -3*a(n-1) +(6/7)*a(n-3) +45/7', 'a(n-3)*a(n-4) -3*a(n-3) -3*a(n-4) +9', 'a(n-1)*a(n-4) -3*a(n-1) -3*a(n-4) +9', 'a(n-2)*a(n-3) -3*a(n-2) -3*a(n-3) +9', 'a(n-1)*a(n-2) -3*a(n-1) -3*a(n-2) +9', 'a(n-4)^3 +(-45/61)*n*a(n-4) +(110/61)*a(n-2)*a(n-4) +(-934/61)*a(n-4)^2 +(135/61)*n +(-410/61)*a(n-2) +(4146/61)*a(n-4) -5439/61', 'a(n)^2 +(-50/61)*n*a(n-4) +(251/61)*a(n-2)*a(n-4) +(-116/61)*a(n-4)^2 -8*a(n) +(150/61)*n +(-1113/61)*a(n-2) +(-70/61)*a(n-4) +3249/61', 'n*a(n-2) +(-197/122)*n*a(n-4) +(-71/61)*a(n-2)*a(n-4) +(253/122)*a(n-4)^2 +(225/122)*n +(-118/61)*a(n-2) +(-83/61)*a(n-4) +207/122', 'a(n-2)*a(n-4)^2 +(-36/61)*n*a(n-4) +(-583/61)*a(n-2)*a(n-4) +(-247/61)*a(n-4)^2 +(108/61)*n +(1380/61)*a(n-2) +(2353/61)*a(n-4) -5376/61', 'n*a(n-4)^2 +(-679/61)*n*a(n-4) +(128/61)*a(n-2)*a(n-4) +(-387/61)*a(n-4)^2 +(1488/61)*n +(-344/61)*a(n-2) +(3417/61)*a(n-4) -6888/61', 'a(n)*a(n-4) +(-13/122)*n*a(n-4) +(104/61)*a(n-2)*a(n-4) +(-120/61)*a(n-4)^2 -3*a(n) +(39/122)*n +(-432/61)*a(n-2) +(299/122)*a(n-4) +1983/122', 'a(n-4)*a(n-5) -3*a(n-4) -3*a(n-5) +9', 'a(n-2)*a(n-5) -3*a(n-2) -3*a(n-5) +9', 'a(n-3)*a(n-4) -3*a(n-3) -3*a(n-4) +9', 'a(n-1)*a(n-4) -3*a(n-1) -3*a(n-4) +9', 'a(n-2)*a(n-3) -3*a(n-2) -3*a(n-3) +9', 'a(n-1)*a(n-2) -3*a(n-1) -3*a(n-2) +9', 'a(n-1)^2 +(-3/7)*a(n-3)*a(n-5) +(-22/7)*a(n-5)^2 +(-96/7)*a(n-1) +(9/7)*a(n-3) +(270/7)*a(n-5) -387/7', 'a(n-1)*a(n-3) +(27/7)*a(n-3)*a(n-5) +(-31/14)*a(n-5)^2 +(-4/7)*a(n-1) +(-172/7)*a(n-3) +(-51/14)*a(n-5) +438/7', 'a(n-5)^3 +(-16/7)*a(n-3)*a(n-5) +(-115/7)*a(n-5)^2 +(-36/7)*a(n-1) +(76/7)*a(n-3) +(726/7)*a(n-5) -1308/7', 'a(n)*a(n-3) +(-71/15)*a(n-3)*a(n-5) +(11/30)*a(n-5)^2 -3*a(n) +(-27/5)*a(n-1) +(266/15)*a(n-3) +(943/30)*a(n-5) -92', 'a(n-5)*a(n-6) -3*a(n-5) -3*a(n-6) +9', 'a(n-3)*a(n-6) -3*a(n-3) -3*a(n-6) +9', 'a(n-1)*a(n-6) -3*a(n-1) -3*a(n-6) +9', 'a(n-4)*a(n-5) -3*a(n-4) -3*a(n-5) +9', 'a(n-2)*a(n-5) -3*a(n-2) -3*a(n-5) +9', 'a(n-3)*a(n-4) -3*a(n-3) -3*a(n-4) +9', 'a(n-1)*a(n-4) -3*a(n-1) -3*a(n-4) +9', 'a(n-2)*a(n-3) -3*a(n-2) -3*a(n-3) +9', 'a(n-1)*a(n-2) -3*a(n-1) -3*a(n-2) +9', 'a(n-6)*a(n-7) -3*a(n-6) -3*a(n-7) +9', 'a(n-4)*a(n-7) -3*a(n-4) -3*a(n-7) +9', 'a(n-2)*a(n-7) -3*a(n-2) -3*a(n-7) +9', 'a(n-5)*a(n-6) -3*a(n-5) -3*a(n-6) +9', 'a(n-3)*a(n-6) -3*a(n-3) -3*a(n-6) +9', 'a(n-1)*a(n-6) -3*a(n-1) -3*a(n-6) +9', 'a(n-4)*a(n-5) -3*a(n-4) -3*a(n-5) +9', 'a(n-2)*a(n-5) -3*a(n-2) -3*a(n-5) +9', 'a(n-3)*a(n-4) -3*a(n-3) -3*a(n-4) +9', 'a(n-1)*a(n-4) -3*a(n-1) -3*a(n-4) +9', 'a(n-7)*a(n-8) -3*a(n-7) -3*a(n-8) +9', 'a(n-5)*a(n-8) -3*a(n-5) -3*a(n-8) +9', 'a(n-3)*a(n-8) -3*a(n-3) -3*a(n-8) +9', 'a(n-6)*a(n-7) -3*a(n-6) -3*a(n-7) +9', 'a(n-4)*a(n-7) -3*a(n-4) -3*a(n-7) +9', 'a(n-5)*a(n-6) -3*a(n-5) -3*a(n-6) +9', 'a(n-3)*a(n-6) -3*a(n-3) -3*a(n-6) +9', 'a(n-4)*a(n-5) -3*a(n-4) -3*a(n-5) +9', 'a(n-3)*a(n-4) -3*a(n-3) -3*a(n-4) +9', 'a(n-2) +(-38/37)*a(n-4) +(25/37)*a(n-6) +(-58/37)*a(n-8) +102/37', 'a(n-8)*a(n-9) -3*a(n-8) -3*a(n-9) +9', 'a(n-6)*a(n-9) -3*a(n-6) -3*a(n-9) +9', 'a(n-7)*a(n-8) -3*a(n-7) -3*a(n-8) +9', 'a(n-5)*a(n-8) -3*a(n-5) -3*a(n-8) +9', 'a(n-6)*a(n-7) -3*a(n-6) -3*a(n-7) +9', 'a(n-5)*a(n-6) -3*a(n-5) -3*a(n-6) +9', 'a(n-1) +(-45/37)*a(n-5) +(-22/37)*a(n-7) +(54/37)*a(n-9) -72/37', 'a(n-3) +(-38/37)*a(n-5) +(25/37)*a(n-7) +(-58/37)*a(n-9) +102/37', 'a(n-9)^2 +(36/37)*a(n-5) +(-12/37)*a(n-7) +(-391/37)*a(n-9) +768/37', 'a(n-7)^2 +(48/37)*a(n-5) +(-423/37)*a(n-7) +(-28/37)*a(n-9) +876/37', 'a(n-10)^2 -7*a(n-10) +12', 'a(n-2) -a(n-8) -3*a(n-10) +9', 'a(n-9)*a(n-10) -3*a(n-9) -3*a(n-10) +9', 'a(n-7)*a(n-10) -3*a(n-7) -3*a(n-10) +9', 'a(n-8)*a(n-9) -3*a(n-8) -3*a(n-9) +9', 'a(n-7)*a(n-8) -3*a(n-7) -3*a(n-8) +9', 'a(n-8)*a(n-10) -4*a(n-8) -3*a(n-10) +12', 'a(n-9)^2 -11*a(n-9) -4*a(n-10) +40', 'a(n-8)^2 -11*a(n-8) +4*a(n-10) +12', 'a(n-6) +(-1/3)*a(n-8) +(-11/3)*a(n-10) +9', 'a(n-10) +a(n-11) -7', 'a(n-11)^2 -7*a(n-11) +12', 'a(n-3) -a(n-9) -3*a(n-11) +9', 'a(n-8)*a(n-11) -3*a(n-8) -3*a(n-11) +9', 'a(n-8)*a(n-9) -3*a(n-8) -3*a(n-9) +9', 'a(n-2) -a(n-8) +3*a(n-11) -12', 'a(n-9)*a(n-11) -4*a(n-9) -3*a(n-11) +12', 'a(n-9)^2 -11*a(n-9) +4*a(n-11) +12', 'a(n-8)^2 -11*a(n-8) -4*a(n-11) +40', 'a(n-7) +(-1/3)*a(n-9) +(-11/3)*a(n-11) +9', 'a(n-10) -a(n-12)', 'a(n-11) +a(n-12) -7', 'a(n-8) -4*a(n-12) +9', 'a(n-4) -4*a(n-12) +9', 'a(n-6) -5*a(n-12) +12', 'a(n-2) -7*a(n-12) +18', 'a(n-12)^2 -7*a(n-12) +12', 'a(n-9)*a(n-12) -3*a(n-9) -3*a(n-12) +9', 'a(n-3) -a(n-9) +3*a(n-12) -12', 'a(n-9)^2 -11*a(n-9) -4*a(n-12) +40', 'a(n-11) -a(n-13)', 'a(n-12) +a(n-13) -7', 'a(n-10) +a(n-13) -7', 'a(n-9) -4*a(n-13) +9', 'a(n-5) -4*a(n-13) +9', 'a(n-1) -2*a(n-13) +3', 'a(n-8) +4*a(n-13) -19', 'a(n-7) -5*a(n-13) +12', 'a(n-6) +5*a(n-13) -23', 'a(n-14) -3']
A046536: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

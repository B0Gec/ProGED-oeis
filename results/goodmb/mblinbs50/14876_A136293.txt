
orders_used: [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
While total time consumed by now, scale:14877/27236, seq_id:A136293, order:20 took:
 36.7 seconds, i.e. 0.61 minutes or 0.01 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
non_linears:
['a(n) -a(n-1) -76', 'a(n-1) -a(n-2) -76', 'a(n) -a(n-2) -152', 'a(n-2) -a(n-3) -76', 'a(n-1) -a(n-3) -152', 'a(n) -a(n-3) -228', 'a(n-3) -a(n-4) -76', 'a(n-2) -a(n-4) -152', 'a(n-1) -a(n-4) -228', 'a(n) -a(n-4) -304', 'a(n-4) -a(n-5) -76', 'a(n-3) -a(n-5) -152', 'a(n-2) -a(n-5) -228', 'a(n-1) -a(n-5) -304', 'a(n) -a(n-5) -380', 'a(n-5) -a(n-6) -76', 'a(n-4) -a(n-6) -152', 'a(n-3) -a(n-6) -228', 'a(n-2) -a(n-6) -304', 'a(n-1) -a(n-6) -380', 'a(n) -a(n-6) -456', 'a(n-6) -a(n-7) -76', 'a(n-5) -a(n-7) -152', 'a(n-4) -a(n-7) -228', 'a(n-3) -a(n-7) -304', 'a(n-2) -a(n-7) -380', 'a(n-1) -a(n-7) -456', 'a(n) -a(n-7) -532', 'a(n-7) -a(n-8) -76', 'a(n-6) -a(n-8) -152', 'a(n-5) -a(n-8) -228', 'a(n-4) -a(n-8) -304', 'a(n-3) -a(n-8) -380', 'a(n-2) -a(n-8) -456', 'a(n-1) -a(n-8) -532', 'a(n) -a(n-8) -608', 'a(n-8) -a(n-9) -76', 'a(n-7) -a(n-9) -152', 'a(n-6) -a(n-9) -228', 'a(n-5) -a(n-9) -304', 'a(n-4) -a(n-9) -380', 'a(n-3) -a(n-9) -456', 'a(n-2) -a(n-9) -532', 'a(n-1) -a(n-9) -608', 'a(n) -a(n-9) -684', 'a(n-9) -a(n-10) -76', 'a(n-8) -a(n-10) -152', 'a(n-7) -a(n-10) -228', 'a(n-6) -a(n-10) -304', 'a(n-5) -a(n-10) -380', 'a(n-4) -a(n-10) -456', 'a(n-3) -a(n-10) -532', 'a(n-2) -a(n-10) -608', 'a(n-1) -a(n-10) -684', 'a(n) -a(n-10) -760', 'a(n-10) -a(n-11) -76', 'a(n-9) -a(n-11) -152', 'a(n-8) -a(n-11) -228', 'a(n-7) -a(n-11) -304', 'a(n-6) -a(n-11) -380', 'a(n-5) -a(n-11) -456', 'a(n-4) -a(n-11) -532', 'a(n-3) -a(n-11) -608', 'a(n-2) -a(n-11) -684', 'a(n-1) -a(n-11) -760', 'a(n-11) -a(n-12) -76', 'a(n-10) -a(n-12) -152', 'a(n-9) -a(n-12) -228', 'a(n-8) -a(n-12) -304', 'a(n-7) -a(n-12) -380', 'a(n-6) -a(n-12) -456', 'a(n-5) -a(n-12) -532', 'a(n-4) -a(n-12) -608', 'a(n-3) -a(n-12) -684', 'a(n-2) -a(n-12) -760', 'a(n-12) -a(n-13) -76', 'a(n-11) -a(n-13) -152', 'a(n-10) -a(n-13) -228', 'a(n-9) -a(n-13) -304', 'a(n-8) -a(n-13) -380', 'a(n-7) -a(n-13) -456', 'a(n-6) -a(n-13) -532', 'a(n-5) -a(n-13) -608', 'a(n-4) -a(n-13) -684', 'a(n-3) -a(n-13) -760', 'a(n-13) -a(n-14) -76', 'a(n-12) -a(n-14) -152', 'a(n-11) -a(n-14) -228', 'a(n-10) -a(n-14) -304', 'a(n-9) -a(n-14) -380', 'a(n-8) -a(n-14) -456', 'a(n-7) -a(n-14) -532', 'a(n-6) -a(n-14) -608', 'a(n-5) -a(n-14) -684', 'a(n-4) -a(n-14) -760', 'a(n-14) -a(n-15) -76', 'a(n-13) -a(n-15) -152', 'a(n-12) -a(n-15) -228', 'a(n-11) -a(n-15) -304', 'a(n-10) -a(n-15) -380', 'a(n-9) -a(n-15) -456', 'a(n-8) -a(n-15) -532', 'a(n-7) -a(n-15) -608', 'a(n-6) -a(n-15) -684', 'a(n-5) -a(n-15) -760', 'a(n-15) -a(n-16) -76', 'a(n-14) -a(n-16) -152', 'a(n-13) -a(n-16) -228', 'a(n-12) -a(n-16) -304', 'a(n-11) -a(n-16) -380', 'a(n-10) -a(n-16) -456', 'a(n-9) -a(n-16) -532', 'a(n-8) -a(n-16) -608', 'a(n-7) -a(n-16) -684', 'a(n-6) -a(n-16) -760', 'a(n-16) -a(n-17) -76', 'a(n-15) -a(n-17) -152', 'a(n-14) -a(n-17) -228', 'a(n-13) -a(n-17) -304', 'a(n-12) -a(n-17) -380', 'a(n-11) -a(n-17) -456', 'a(n-10) -a(n-17) -532', 'a(n-9) -a(n-17) -608', 'a(n-8) -a(n-17) -684', 'a(n-7) -a(n-17) -760', 'a(n-17) -a(n-18) -76', 'a(n-16) -a(n-18) -152', 'a(n-15) -a(n-18) -228', 'a(n-14) -a(n-18) -304', 'a(n-13) -a(n-18) -380', 'a(n-12) -a(n-18) -456', 'a(n-11) -a(n-18) -532', 'a(n-10) -a(n-18) -608', 'a(n-9) -a(n-18) -684', 'a(n-8) -a(n-18) -760', 'a(n-18) -a(n-19) -76', 'a(n-17) -a(n-19) -152', 'a(n-16) -a(n-19) -228', 'a(n-15) -a(n-19) -304', 'a(n-14) -a(n-19) -380', 'a(n-13) -a(n-19) -456', 'a(n-12) -a(n-19) -532', 'a(n-11) -a(n-19) -608', 'a(n-10) -a(n-19) -684', 'a(n-9) -a(n-19) -760', 'a(n-19) -a(n-20) -76', 'a(n-18) -a(n-20) -152', 'a(n-17) -a(n-20) -228', 'a(n-16) -a(n-20) -304', 'a(n-15) -a(n-20) -380', 'a(n-14) -a(n-20) -456', 'a(n-13) -a(n-20) -532', 'a(n-12) -a(n-20) -608', 'a(n-11) -a(n-20) -684', 'a(n-10) -a(n-20) -760']
A136293: 
MB not reconst
truth: 
a(n) = 2*a(n - 1) + -1*a(n - 2),  
a(0) = 26, a(1) = 102

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

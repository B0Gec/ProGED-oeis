
orders_used: [2, 3, 2, 4, 3, 2, 5, 4, 3, 2, 6, 6, 5, 4, 3, 2, 7, 7, 6, 6, 5, 4, 3, 2, 8, 8, 7, 7, 6, 6, 5, 4, 3, 2, 9, 9, 8, 8, 7, 7, 6, 6, 5, 4, 10, 10, 10, 9, 9, 8, 8, 7, 7, 6, 11, 11, 11, 10, 10, 10, 9, 9, 8, 8, 12, 12, 12, 11, 11, 11, 10, 10, 9, 9, 13, 13, 13, 12, 12, 11, 11, 10, 10, 9, 14, 14, 13, 13, 12, 12, 11, 11, 10, 9, 15, 15, 14, 14, 13, 13, 12, 11, 10, 9, 16, 16, 15, 15, 14, 13, 12, 11, 16, 16, 17, 17, 16, 15, 14, 13, 17, 17, 17, 17, 18, 17, 16, 15, 18, 18, 18, 18, 18, 18, 19, 18, 17, 19, 19, 19]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:738/10000, seq_id:A004025, order:20 took:
 71.2 seconds, i.e. 1.19 minutes or 0.02 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 2.
eqs_explicit:
['a(n) = -4*a(n-19) + 4*a(n-18) + a(n-17) + 5*a(n-16) + 4*a(n-15) - 40']
non_linears:
['a(n)*a(n-2)', 'a(n-1)*a(n-3)', 'a(n)*a(n-2)', 'a(n-2)*a(n-4)', 'a(n-1)*a(n-3)', 'a(n)*a(n-2)', 'a(n-3)*a(n-5)', 'a(n-2)*a(n-4)', 'a(n-1)*a(n-3)', 'a(n)*a(n-2)', 'a(n-4)*a(n-6)', 'a(n)*a(n-6)', 'a(n-3)*a(n-5)', 'a(n-2)*a(n-4)', 'a(n-1)*a(n-3)', 'a(n)*a(n-2)', 'a(n-5)*a(n-7)', 'a(n-1)*a(n-7)', 'a(n-4)*a(n-6)', 'a(n)*a(n-6)', 'a(n-3)*a(n-5)', 'a(n-2)*a(n-4)', 'a(n-1)*a(n-3)', 'a(n)*a(n-2)', 'a(n-6)*a(n-8)', 'a(n-2)*a(n-8)', 'a(n-5)*a(n-7)', 'a(n-1)*a(n-7)', 'a(n-4)*a(n-6)', 'a(n)*a(n-6)', 'a(n-3)*a(n-5)', 'a(n-2)*a(n-4)', 'a(n-1)*a(n-3)', 'a(n)*a(n-2)', 'a(n-7)*a(n-9)', 'a(n-3)*a(n-9)', 'a(n-6)*a(n-8)', 'a(n-2)*a(n-8)', 'a(n-5)*a(n-7)', 'a(n-1)*a(n-7)', 'a(n-4)*a(n-6)', 'a(n)*a(n-6)', 'a(n-3)*a(n-5)', 'a(n-2)*a(n-4)', 'a(n-8)*a(n-10)', 'a(n-4)*a(n-10)', 'a(n)*a(n-10)', 'a(n-7)*a(n-9)', 'a(n-3)*a(n-9)', 'a(n-6)*a(n-8)', 'a(n-2)*a(n-8)', 'a(n-5)*a(n-7)', 'a(n-1)*a(n-7)', 'a(n-4)*a(n-6)', 'a(n-9)*a(n-11)', 'a(n-5)*a(n-11)', 'a(n-1)*a(n-11)', 'a(n-8)*a(n-10)', 'a(n-4)*a(n-10)', 'a(n)*a(n-10)', 'a(n-7)*a(n-9)', 'a(n-3)*a(n-9)', 'a(n-6)*a(n-8)', 'a(n-2)*a(n-8)', 'a(n-10)*a(n-12)', 'a(n-6)*a(n-12)', 'a(n-2)*a(n-12)', 'a(n-9)*a(n-11)', 'a(n-5)*a(n-11)', 'a(n-1)*a(n-11)', 'a(n-8)*a(n-10)', 'a(n-4)*a(n-10)', 'a(n-7)*a(n-9)', 'a(n-3)*a(n-9)', 'a(n-11)*a(n-13)', 'a(n-7)*a(n-13)', 'a(n-3)*a(n-13)', 'a(n-10)*a(n-12)', 'a(n-6)*a(n-12)', 'a(n-9)*a(n-11)', 'a(n-5)*a(n-11)', 'a(n-8)*a(n-10)', 'a(n-4)*a(n-10)', 'a(n-7)*a(n-9)', 'a(n-12)*a(n-14)', 'a(n-8)*a(n-14)', 'a(n-11)*a(n-13)', 'a(n-7)*a(n-13)', 'a(n-10)*a(n-12)', 'a(n-6)*a(n-12)', 'a(n-9)*a(n-11)', 'a(n-5)*a(n-11)', 'a(n-8)*a(n-10)', 'a(n-7)*a(n-9)', 'a(n-13)*a(n-15)', 'a(n-9)*a(n-15)', 'a(n-12)*a(n-14)', 'a(n-8)*a(n-14)', 'a(n-11)*a(n-13)', 'a(n-7)*a(n-13)', 'a(n-10)*a(n-12)', 'a(n-9)*a(n-11)', 'a(n-8)*a(n-10)', 'a(n-7)*a(n-9)', 'a(n-14)*a(n-16)', 'a(n-10)*a(n-16)', 'a(n-13)*a(n-15)', 'a(n-9)*a(n-15)', 'a(n-12)*a(n-14)', 'a(n-11)*a(n-13)', 'a(n-10)*a(n-12)', 'a(n-9)*a(n-11)', 'a(n-10)*a(n-15) +112*a(n-9) -48*a(n-10) -272*a(n-11) -752*a(n-12) -560*a(n-13) -496*a(n-14) -128*a(n-15) +336*a(n-16) +8032', 'a(n-7) +(19/87)*a(n-9) +(-83/87)*a(n-10) +(-23/87)*a(n-11) +(-89/29)*a(n-12) +(7/29)*a(n-13) +(-53/29)*a(n-14) +(-13/29)*a(n-15) +(-1/87)*a(n-16) +594/29', 'a(n-15)*a(n-17)', 'a(n-11)*a(n-17)', 'a(n-14)*a(n-16)', 'a(n-13)*a(n-15)', 'a(n-12)*a(n-14)', 'a(n-11)*a(n-13)', 'a(n-5) +(80/41)*a(n-11) +(184/41)*a(n-12) +(96/41)*a(n-13) +(74/41)*a(n-14) +(80/41)*a(n-15) +(-136/41)*a(n-16) +(4/41)*a(n-17) -2032/41', 'a(n-6) +(-20/41)*a(n-11) +(36/41)*a(n-12) +(140/41)*a(n-13) +(84/41)*a(n-14) +(62/41)*a(n-15) +(116/41)*a(n-16) +(-124/41)*a(n-17) -1624/41', 'a(n-3) +(56/41)*a(n-11) +(178/41)*a(n-12) +(264/41)*a(n-13) +(224/41)*a(n-14) +(56/41)*a(n-15) +(36/41)*a(n-16) +(-112/41)*a(n-17) -3456/41', 'a(n-13)*a(n-17) +(96/41)*a(n-11) +(352/41)*a(n-12) +(312/41)*a(n-13) +(384/41)*a(n-14) +(96/41)*a(n-15) +(-32/41)*a(n-16) +(-520/41)*a(n-17) -4800/41', 'a(n-16)*a(n-18)', 'a(n-15)*a(n-17)', 'a(n-14)*a(n-16)', 'a(n-13)*a(n-15)', 'a(n-4) +2*a(n-13) +(8/3)*a(n-14) +(8/3)*a(n-15) +(2/3)*a(n-17) +(-4/3)*a(n-18) -112/3', 'a(n-10) +(-22/7)*a(n-13) +(-2/7)*a(n-14) +(-8/7)*a(n-15) +(39/14)*a(n-17) +(-10/7)*a(n-18) +64/7', 'a(n-14)*a(n-18) +(32/7)*a(n-13) +(8/7)*a(n-14) +(32/7)*a(n-15) +(-8/7)*a(n-17) +(-72/7)*a(n-18) -256/7', 'a(n-13)*a(n-18) +16*a(n-13) +(16/3)*a(n-14) +(64/3)*a(n-15) +(4/3)*a(n-17) +(-32/3)*a(n-18) -512/3', 'a(n-18)^2 +(4/7)*a(n-13) +(36/7)*a(n-14) +(32/7)*a(n-15) +(27/7)*a(n-17) +(-100/7)*a(n-18) -256/7', 'a(n-14)^2 +(40/7)*a(n-13) +(-46/7)*a(n-14) +(40/7)*a(n-15) +(-10/7)*a(n-17) +(-20/7)*a(n-18) -320/7', 'a(n-17)*a(n-19)', 'a(n-16)*a(n-18)', 'a(n-15)*a(n-17)', 'a(n-15)*a(n-19) -8*a(n-15) -8*a(n-17) -8*a(n-19) +64', 'a(n-4) +(-4/3)*a(n-15) +(-10/3)*a(n-16) +(-11/6)*a(n-18) +(5/3)*a(n-19) +44/3', 'a(n) -4*a(n-15) -5*a(n-16) -a(n-17) -4*a(n-18) +4*a(n-19) +40']
A004025: 
a(n) = -4*a(n-19) + 4*a(n-18) + a(n-17) + 5*a(n-16) + 4*a(n-15) - 40
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    


orders_used: [9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:6340/10000, seq_id:A040643, order:20 took:
 42.2 seconds, i.e. 0.7 minutes or 0.012 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 9.
eqs_explicit:
['a(n) = a(n-13)/8 + 7/8']
non_linears:
['a(n-3) +(29/773)*a(n-5) +(529/5411)*a(n-6) +(-1538/5411)*a(n-7) +(-1585/773)*a(n-8) +(-243/5411)*a(n-9) +2789/773', 'a(n-2) +(-23/773)*a(n-5) +(-1699/5411)*a(n-6) +(-9309/5411)*a(n-7) +(-129/773)*a(n-8) +(-447/5411)*a(n-9) +3279/773', 'a(n-8)^2 +(86/773)*a(n-5) +(1782/5411)*a(n-6) +(-3708/5411)*a(n-7) +(-6273/773)*a(n-8) +(-614/5411)*a(n-9) +10190/773', 'a(n-7)^2 +(606/773)*a(n-5) +(-5312/5411)*a(n-6) +(-59727/5411)*a(n-7) +(38/773)*a(n-8) +(2972/5411)*a(n-9) +13020/773', 'a(n-1) +(-587/3865)*a(n-5) +(-6617/3865)*a(n-6) +(-2761/3865)*a(n-7) +(203/3865)*a(n-8) +(478/3865)*a(n-9) +14956/3865', 'a(n-6)*a(n-8) +(-837/3865)*a(n-5) +(-12352/3865)*a(n-6) +(-1876/3865)*a(n-7) +(-8257/3865)*a(n-8) +(168/3865)*a(n-9) +33961/3865', 'a(n-7)*a(n-9) +(-1744/773)*a(n-5) +(-14727/5411)*a(n-6) +(-33960/5411)*a(n-7) +(-3732/773)*a(n-8) +(-33659/5411)*a(n-9) +44797/773', 'a(n-7)*a(n-8) +(-209/3865)*a(n-5) +(9062/27055)*a(n-6) +(-23994/27055)*a(n-7) +(-7289/3865)*a(n-8) +(72/27055)*a(n-9) +2237/3865', 'a(n-7)*a(n-9) +(-13/4)*a(n-7) +(-3/2)*a(n-8) -2*a(n-9) +(1/4)*a(n-10) +37/4', 'a(n-7)*a(n-8) +(-5/7)*a(n-7) +(13/189)*a(n-8) +(-4/27)*a(n-9) +(-71/189)*a(n-10) -13/9', 'a(n-2) +(-7/4)*a(n-7) +(-77/54)*a(n-8) +(4/27)*a(n-9) +(29/108)*a(n-10) +151/36', 'a(n-8)^2 +(-11/14)*a(n-7) +(-464/63)*a(n-8) +(-4/9)*a(n-9) +(-25/126)*a(n-10) +91/6', 'a(n-6) +(-1/4)*a(n-7) +(-253/54)*a(n-8) +(17/27)*a(n-9) +(103/108)*a(n-10) +77/36', 'a(n-7)*a(n-10) +(-8/7)*a(n-7) +(704/189)*a(n-8) +(16/27)*a(n-9) +(-472/189)*a(n-10) -74/9', 'a(n-5) +(23/14)*a(n-7) +(449/63)*a(n-8) +(10/9)*a(n-9) +(-131/126)*a(n-10) -145/6', 'a(n-4) +(3/28)*a(n-7) +(-41/378)*a(n-8) +(-56/27)*a(n-9) +(-61/756)*a(n-10) +127/36', 'a(n-3) +(-9/28)*a(n-7) +(-703/378)*a(n-8) +(-4/27)*a(n-9) +(-41/756)*a(n-10) +155/36', 'a(n-8)*a(n-9) +(9/28)*a(n-7) +(-431/378)*a(n-8) +(-50/27)*a(n-9) +(41/756)*a(n-10) +25/36', 'a(n-8) +(6/5)*a(n-9) +(-1/5)*a(n-11) -21/5', 'n +(-7/27)*a(n-9) +(13/27)*a(n-10) +(5/27)*a(n-11) -131/9', 'a(n-2) +(-157/27)*a(n-9) +(37/27)*a(n-10) +(35/27)*a(n-11) +1/9', 'a(n-10)*a(n-11) +(128/45)*a(n-9) +(-1/9)*a(n-10) +(-58/45)*a(n-11) -146/15', 'a(n-10)^2 +(-16/27)*a(n-9) +(-221/27)*a(n-10) +(-4/27)*a(n-11) +130/9', 'a(n-9)^2 +(-289/45)*a(n-9) +(-4/9)*a(n-10) +(-16/45)*a(n-11) +178/15', 'a(n-6) +(232/45)*a(n-9) +(10/9)*a(n-10) +(-32/45)*a(n-11) -259/15', 'a(n-5) +(-32/135)*a(n-9) +(-56/27)*a(n-10) +(-8/135)*a(n-11) +179/45', 'a(n-3) +(91/135)*a(n-9) +(4/27)*a(n-10) +(-11/135)*a(n-11) -142/45', 'a(n-4) +(-199/135)*a(n-9) +(-4/27)*a(n-10) +(-16/135)*a(n-11) +133/45', 'a(n-10) +(-20/71)*a(n-11) +(-16/71)*a(n-12) -6/71', 'a(n-8) +(-43/71)*a(n-11) +(-6/71)*a(n-12) +51/71', 'a(n-3) +(-19/71)*a(n-11) +(-1/71)*a(n-12) -27/71', 'a(n-9) +(24/71)*a(n-11) +(5/71)*a(n-12) -291/71', 'a(n-4) +(24/71)*a(n-11) +(5/71)*a(n-12) -220/71', 'a(n-1) +(-137/71)*a(n-11) +(4/71)*a(n-12) -34/71', 'a(n-6) +(-152/71)*a(n-11) +(-8/71)*a(n-12) +281/71', 'a(n-5) +(-40/71)*a(n-11) +(-32/71)*a(n-12) +201/71', 'n +(29/71)*a(n-11) +(9/71)*a(n-12) -1106/71', 'a(n-11)*a(n-12) +(49/71)*a(n-11) +(-46/71)*a(n-12) -674/71', 'a(n-6) +(-1/3)*a(n-13) -2/3', 'a(n) +(-1/8)*a(n-13) -7/8']
A040643: 
a(n) = a(n-13)/8 + 7/8
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

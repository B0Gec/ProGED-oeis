
orders_used: [7, 7, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:1936/10000, seq_id:A011093, order:20 took:
 27.8 seconds, i.e. 0.46 minutes or 0.008 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 7.
eqs_explicit:
['a(n) = -3*a(n-12)/4 + 3*a(n-10)/2 - 3/4']
non_linears:
['a(n-1)*a(n-3) +(-1026/115)*a(n-1) +(39/23)*a(n-2) +(-672/115)*a(n-3) +(-93/23)*a(n-4) +(-19/5)*a(n-5) +(-229/115)*a(n-6) +(-4/115)*a(n-7) +9746/115', 'a(n-6)^2 +(-533/115)*a(n-1) +(13/115)*a(n-2) +(-192/115)*a(n-3) +(-767/115)*a(n-4) +(-24/5)*a(n-5) +(-1199/115)*a(n-6) +(-11/115)*a(n-7) +12047/115', 'a(n-6)*a(n-8) +(-4/3)*a(n-5) +(-169/33)*a(n-6) +(-10/33)*a(n-7) -6*a(n-8) +(-7/11)*a(n-9) +1349/33', 'a(n-1) +(71/87)*a(n-5) +(43/87)*a(n-6) +(55/87)*a(n-7) +(23/29)*a(n-8) +(33/29)*a(n-9) -1733/87', 'a(n-5)*a(n-8) +(-49/29)*a(n-5) +(-54/319)*a(n-6) +(140/319)*a(n-7) +(-124/29)*a(n-8) +(426/319)*a(n-9) -868/319', 'a(n-5)^2 +(-223/29)*a(n-5) +(4/319)*a(n-6) +(285/319)*a(n-7) +(50/29)*a(n-8) +(823/638)*a(n-9) -3853/638', 'a(n-6)*a(n-9) +(48/29)*a(n-5) +(-259/319)*a(n-6) +(128/319)*a(n-7) +(-4/29)*a(n-8) +(-1643/319)*a(n-9) -2261/319', 'a(n-9)^2 +(-56/29)*a(n-5) +(-128/319)*a(n-6) +(-188/319)*a(n-7) +(24/29)*a(n-8) +(-2322/319)*a(n-9) +5823/319', 'a(n-7)*a(n-9) +(-60/29)*a(n-5) +(-336/319)*a(n-6) +(-653/319)*a(n-7) +(92/29)*a(n-8) +(-1071/319)*a(n-9) +2645/319', 'a(n-7)^2 +(14/87)*a(n-5) +(2120/957)*a(n-6) +(-6217/957)*a(n-7) +(-2/29)*a(n-8) +(-140/319)*a(n-9) -5668/957', 'a(n-8)*a(n-9) +(48/29)*a(n-5) +(408/319)*a(n-6) +(360/319)*a(n-7) +(-149/29)*a(n-8) +(-1411/319)*a(n-9) +1915/319', 'a(n-5)*a(n-9) +(-137/29)*a(n-5) +(-48/319)*a(n-6) +(-230/319)*a(n-7) +(-20/29)*a(n-8) +(-2067/319)*a(n-9) +11953/319', 'a(n-2) +(-7/4)*a(n-7) -a(n-8) +(-1/8)*a(n-9) +(7/4)*a(n-10) +21/8', 'a(n-6) +(11/4)*a(n-7) +2*a(n-8) +(9/8)*a(n-9) +(-3/4)*a(n-10) -221/8', 'a(n-4) +(3/44)*a(n-7) +(1/22)*a(n-8) +(-1/8)*a(n-9) +(1/22)*a(n-10) -511/88', 'a(n-8)*a(n-9) +(-6/11)*a(n-7) +(-59/11)*a(n-8) -4*a(n-9) +(18/11)*a(n-10) +236/11', 'a(n-8)^2 +(39/22)*a(n-7) +(-75/11)*a(n-8) +(-1/4)*a(n-9) +(-7/22)*a(n-10) -65/44', 'a(n-7)*a(n-8) +(-47/11)*a(n-7) +(-35/11)*a(n-8) +2*a(n-9) +(-2/11)*a(n-10) +107/11', 'a(n-1) +(2/11)*a(n-7) +(21/22)*a(n-8) +(3/2)*a(n-9) +(31/44)*a(n-10) -707/44', 'a(n-10)^2 +(54/11)*a(n-7) +(36/11)*a(n-8) +3*a(n-9) +(-96/11)*a(n-10) -386/11', 'a(n-9)*a(n-10) +(-36/11)*a(n-7) +(-24/11)*a(n-8) -7*a(n-9) +(-35/11)*a(n-10) +569/11', 'a(n-7)*a(n-10) +(-59/11)*a(n-7) +(-32/11)*a(n-8) -2*a(n-9) +(-43/11)*a(n-10) +425/11', 'a(n-11)^2 -6*a(n-11) +5', 'a(n-10)*a(n-11) -5*a(n-10) -5*a(n-11) +25', 'a(n-10)^2 -8*a(n-10) -2*a(n-11) +17', 'a(n-5) +(-1/6)*a(n-10) +(1/12)*a(n-11) -21/4', 'a(n-9)*a(n-11) -a(n-9) +(8/3)*a(n-10) +(-7/3)*a(n-11) -11', 'a(n-9)^2 -8*a(n-9) +(-4/3)*a(n-10) +(2/3)*a(n-11) +13', 'a(n-9)*a(n-10) -5*a(n-9) +(-11/3)*a(n-10) +(4/3)*a(n-11) +17', 'a(n-7) +(1/6)*a(n-9) +(-5/9)*a(n-10) +(7/9)*a(n-11) -31/6', 'a(n-1) +(5/6)*a(n-9) +(2/9)*a(n-10) +(7/18)*a(n-11) -22/3', 'a(n-8) +(2/3)*a(n-9) +(11/18)*a(n-10) +(-5/9)*a(n-11) -49/6', 'a(n-11) +a(n-12) -6', 'a(n-12)^2 -6*a(n-12) +5', 'a(n-6) +(1/4)*a(n-12) -25/4', 'a(n-10)*a(n-12) -a(n-10) -5*a(n-12) +5', 'a(n-10)^2 -8*a(n-10) +2*a(n-12) +5', 'a(n-4) +(1/6)*a(n-10) +(-1/6)*a(n-12) -6', 'a(n-2) +(5/6)*a(n-10) +(1/6)*a(n-12) -6', 'a(n-9) +(2/3)*a(n-10) +(-7/6)*a(n-12) -9/2', 'a(n) +(-3/2)*a(n-10) +(3/4)*a(n-12) +3/4']
A011093: 
a(n) = -3*a(n-12)/4 + 3*a(n-10)/2 - 3/4
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    


orders_used: [2, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:5998/10000, seq_id:A040301, order:20 took:
 26.4 seconds, i.e. 0.44 minutes or 0.007 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 2.
eqs_explicit:
['a(n) = -73*a(n-11)/30 - 227*a(n-10)/30 + a(n-9)/10 + 160/3']
non_linears:
['a(n)*a(n-1)*a(n-2) -a(n)*a(n-1) -a(n)*a(n-2) -a(n-1)*a(n-2) +a(n) +a(n-1) +a(n-2) -1', 'a(n-1)*a(n-7) +(-72/23)*a(n-1) +(3/23)*a(n-2) +(-1/23)*a(n-3) +(39/23)*a(n-4) +(-1/23)*a(n-5) +(3/23)*a(n-6) +(-72/23)*a(n-7) +64/23', 'a(n-2)*a(n-6) +(-11/23)*a(n-1) +(-58/23)*a(n-2) +(4/23)*a(n-3) +(74/23)*a(n-4) +(4/23)*a(n-5) +(-58/23)*a(n-6) +(-11/23)*a(n-7) +20/23', 'a(n-4)^2 +(-16/23)*a(n-1) +(-30/23)*a(n-2) +(10/23)*a(n-3) +(-91/23)*a(n-4) +(10/23)*a(n-5) +(-30/23)*a(n-6) +(-16/23)*a(n-7) +280/23', 'a(n-3)*a(n-5) +(45/46)*a(n-1) +(1/46)*a(n-2) +(-169/46)*a(n-3) +(-125/46)*a(n-4) +(-169/46)*a(n-5) +(1/46)*a(n-6) +(45/46)*a(n-7) +627/46', 'a(n-1)^2 +(-907/92)*a(n-1) +(-243/92)*a(n-2) +(81/92)*a(n-3) +(383/92)*a(n-4) +(81/92)*a(n-5) +(-243/92)*a(n-6) +(-79/92)*a(n-7) +1969/92', 'a(n-7)^2 +(-501/23)*a(n-1) +(-465/23)*a(n-2) +(155/23)*a(n-3) +(1039/23)*a(n-4) +(155/23)*a(n-5) +(-465/23)*a(n-6) +(-708/23)*a(n-7) +2937/23', 'a(n-4)*a(n-5) +(192/283)*a(n-3) +(-1553/849)*a(n-4) +(-1469/849)*a(n-5) +(632/849)*a(n-6) +(8/849)*a(n-7) +(-50/849)*a(n-8) -601/849', 'a(n-4)*a(n-6) +(-32/283)*a(n-3) +(-747/283)*a(n-4) +(-280/283)*a(n-5) +(-947/283)*a(n-6) +(-252/283)*a(n-7) +(160/283)*a(n-8) +3791/283', 'a(n-4)^2 +(96/283)*a(n-3) +(-1721/283)*a(n-4) +(-292/283)*a(n-5) +(-272/283)*a(n-6) +(190/283)*a(n-7) +(86/283)*a(n-8) +2494/283', 'a(n-3)*a(n-4) +(-571/283)*a(n-3) +(-925/849)*a(n-4) +(1496/849)*a(n-5) +(184/849)*a(n-6) +(-578/849)*a(n-7) +(-208/849)*a(n-8) -89/849', 'a(n-1) +(-112/283)*a(n-3) +(-910/849)*a(n-4) +(1022/849)*a(n-5) +(952/849)*a(n-6) +(184/849)*a(n-7) +(-301/849)*a(n-8) -4484/849', 'a(n-7)*a(n-8) +(472/283)*a(n-3) +(1184/283)*a(n-4) +(-398/283)*a(n-5) +(738/283)*a(n-6) +(-1377/283)*a(n-7) +(-379/283)*a(n-8) -2501/283', 'a(n-4)*a(n-8) +(308/283)*a(n-3) +(-1601/849)*a(n-4) +(-971/849)*a(n-5) +(1061/849)*a(n-6) +(-223/849)*a(n-7) +(-941/849)*a(n-8) -1819/849', 'a(n-3)^2 +(-1913/283)*a(n-3) +(-1004/849)*a(n-4) +(-1328/849)*a(n-5) +(554/849)*a(n-6) +(50/849)*a(n-7) +(112/849)*a(n-8) +11738/849', 'a(n-7)^2 +(256/283)*a(n-3) +(382/849)*a(n-4) +(-2336/849)*a(n-5) +(-2176/849)*a(n-6) +(-6121/849)*a(n-7) +(688/849)*a(n-8) +14858/849', 'a(n-4)*a(n-7) +(124/283)*a(n-3) +(-2530/849)*a(n-4) +(-1273/849)*a(n-5) +(-1337/849)*a(n-6) +(-2306/849)*a(n-7) +(404/849)*a(n-8) +10018/849', 'a(n-5)*a(n-8) +(-10/3)*a(n-5) +(-7/3)*a(n-6) +(-5/3)*a(n-7) +(-8/3)*a(n-8) +(2/3)*a(n-9) +46/3', 'a(n-4) +(25/31)*a(n-5) +(59/31)*a(n-6) +(13/62)*a(n-7) +(-7/62)*a(n-8) +(-27/62)*a(n-9) -250/31', 'a(n-5)*a(n-7) +(-79/31)*a(n-5) +(-24/31)*a(n-6) +(-103/31)*a(n-7) +(-28/31)*a(n-8) +(16/31)*a(n-9) +387/31', 'a(n-5)*a(n-6) +(-221/93)*a(n-5) +(-281/93)*a(n-6) +(56/93)*a(n-7) +(8/93)*a(n-8) +(22/93)*a(n-9) +443/93', 'a(n-5)^2 +(-197/31)*a(n-5) +(-52/31)*a(n-6) +(-32/31)*a(n-7) +(22/31)*a(n-8) +(14/31)*a(n-9) +358/31', 'a(n-2) +(-70/93)*a(n-5) +(182/93)*a(n-6) +(112/93)*a(n-7) +(16/93)*a(n-8) +(-49/93)*a(n-9) -788/93', 'a(n-8)*a(n-9) +(88/31)*a(n-5) +(-142/31)*a(n-6) +(70/31)*a(n-7) +(-145/31)*a(n-8) +(-19/31)*a(n-9) +143/31', 'a(n-5)*a(n-9) +(-257/93)*a(n-5) +(-299/93)*a(n-6) +(95/93)*a(n-7) +(-13/93)*a(n-8) +(-59/93)*a(n-9) +617/93', 'a(n-8)^2 +(-26/93)*a(n-5) +(-416/93)*a(n-6) +(-256/93)*a(n-7) +(-661/93)*a(n-8) +(112/93)*a(n-9) +2306/93', 'a(n-9)^2 +(-224/93)*a(n-5) +(3670/93)*a(n-6) +(284/93)*a(n-7) +(-172/93)*a(n-8) +(-2705/93)*a(n-9) -550/93', 'a(n-7)*a(n-8) +(6/37)*a(n-7) +(-69/37)*a(n-8) +(32/37)*a(n-9) +(-45/37)*a(n-10) +7/37', 'a(n-2) +(70/37)*a(n-7) +(9/37)*a(n-8) +(28/37)*a(n-9) +(-7/37)*a(n-10) -424/37', 'a(n-4) +(-125/74)*a(n-7) +(-12/37)*a(n-8) +(12/37)*a(n-9) +(31/74)*a(n-10) -2/37', 'a(n-6) +(43/148)*a(n-7) +(5/148)*a(n-8) +(-79/148)*a(n-9) +(-2/37)*a(n-10) -89/74', 'a(n-1) +(-227/74)*a(n-7) +(-35/74)*a(n-8) +(35/74)*a(n-9) +(28/37)*a(n-10) +31/37', 'a(n-3) +(161/74)*a(n-7) +(91/74)*a(n-8) +(-17/74)*a(n-9) +(-21/37)*a(n-10) -347/37', 'a(n-7)*a(n-10) +(169/37)*a(n-7) +(36/37)*a(n-8) +(-36/37)*a(n-9) +(-250/37)*a(n-10) +80/37', 'a(n-7)*a(n-9) +(-157/37)*a(n-7) +(48/37)*a(n-8) +(-85/37)*a(n-9) +(12/37)*a(n-10) +193/37', 'a(n-8)^2 +(-73/74)*a(n-7) +(-511/74)*a(n-8) +(-81/74)*a(n-9) +(-13/37)*a(n-10) +645/37', 'a(n-7)^2 +(-114/37)*a(n-7) +(16/37)*a(n-8) +(-16/37)*a(n-9) +(-33/37)*a(n-10) +126/37', 'a(n-1) +(2/5)*a(n-9) +(-14/15)*a(n-10) +(-1/15)*a(n-11) -4/3', 'a(n-3) +(-5/9)*a(n-9) +(14/27)*a(n-10) +(7/27)*a(n-11) -124/27', 'a(n-7) +(-4/45)*a(n-9) +(-77/135)*a(n-10) +(2/135)*a(n-11) -4/27', 'a(n-5) +(7/18)*a(n-9) +(29/54)*a(n-10) +(1/54)*a(n-11) -167/27', 'a(n-10)^2 +(-8/9)*a(n-9) +(-181/27)*a(n-10) +(4/27)*a(n-11) +230/27', 'n +(11/30)*a(n-9) +(43/90)*a(n-10) +(17/90)*a(n-11) -152/9', 'a(n) +(-1/10)*a(n-9) +(227/30)*a(n-10) +(73/30)*a(n-11) -160/3']
A040301: 
a(n) = -73*a(n-11)/30 - 227*a(n-10)/30 + a(n-9)/10 + 160/3
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

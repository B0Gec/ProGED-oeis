
orders_used: [1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 8, 8, 8, 9, 9, 9, 9, 9]
dasco's acc_1, acc_10: True, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:9020/10000, seq_id:A056524, order:20 took:
 47.9 seconds, i.e. 0.8 minutes or 0.013 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
eqs_explicit:
['a(n) = 10*a(n-9) + 891']
non_linears:
['n^2 +(-1/10)*n*a(n-1) +(1/1210)*a(n-1)^2 +(-9/10)*n +(9/110)*a(n-1)', 'n^2 +(-1/10)*n*a(n-2) +(1/1210)*a(n-2)^2 +(-29/10)*n +(2/11)*a(n-2) +19/10', 'n*a(n-1) -n*a(n-2) +(-1/11)*a(n-1)*a(n-2) +(1/11)*a(n-2)^2 -110*n -a(n-1) +11*a(n-2) +110', 'a(n-1)^2 -11*a(n-1)*a(n-2) +10*a(n-2)^2 -10890*n -22*a(n-1) +1111*a(n-2) +11011', 'a(n)*a(n-2) +(-17/9)*a(n-1)*a(n-2) +(8/9)*a(n-2)^2 -88*a(n) +(1210/9)*n +(1573/9)*a(n-1) +(-902/9)*a(n-2) -121', 'a(n)*n -n*a(n-2) +(-17/99)*a(n-1)*a(n-2) +(17/99)*a(n-2)^2 -9*a(n) +(-1870/9)*n +(143/9)*a(n-1) +(107/9)*a(n-2) +209', 'a(n)*a(n-1) +(-107/9)*a(n-1)*a(n-2) +(98/9)*a(n-2)^2 -99*a(n) +(-96800/9)*n +(484/9)*a(n-1) +(10087/9)*a(n-2) +12100', 'a(n-1)*a(n-2)^2 -a(n-2)^3 +1210*n*a(n-2) -110*a(n-1)*a(n-2) -11*a(n-2)^2 -119790*n +1089*a(n-1) +9801*a(n-2) +107811', 'a(n)^2 +(-187/9)*a(n-1)*a(n-2) +(178/9)*a(n-2)^2 -1111*a(n) +(-182710/9)*n +(17303/9)*a(n-1) +(10967/9)*a(n-2) +23111', 'n*a(n-2) -n*a(n-3) +(-1/11)*a(n-2)*a(n-3) +(1/11)*a(n-3)^2 -110*n -2*a(n-2) +12*a(n-3) +220', 'n^2 +(-1/10)*n*a(n-3) +(1/1210)*a(n-3)^2 +(-49/10)*n +(31/110)*a(n-3) +29/5', 'a(n-2)^2 -11*a(n-2)*a(n-3) +10*a(n-3)^2 -10890*n -22*a(n-2) +1111*a(n-3) +21901', 'a(n-1)*a(n-3) +(-17/9)*a(n-2)*a(n-3) +(8/9)*a(n-3)^2 +(1210/9)*n -88*a(n-1) +(1573/9)*a(n-2) +(-902/9)*a(n-3) -2299/9', 'n*a(n-1) -n*a(n-3) +(-17/99)*a(n-2)*a(n-3) +(17/99)*a(n-3)^2 +(-1870/9)*n -10*a(n-1) +(143/9)*a(n-2) +(116/9)*a(n-3) +3751/9', 'a(n-2)*a(n-3)^2 -a(n-3)^3 +1210*n*a(n-3) -110*a(n-2)*a(n-3) -11*a(n-3)^2 -119790*n +1089*a(n-2) +8591*a(n-3) +227601', 'a(n-1)*a(n-2) +(-107/9)*a(n-2)*a(n-3) +(98/9)*a(n-3)^2 +(-96800/9)*n -99*a(n-1) +(484/9)*a(n-2) +(10087/9)*a(n-3) +205700/9', 'a(n-1)^2 +(-187/9)*a(n-2)*a(n-3) +(178/9)*a(n-3)^2 +(-182710/9)*n -1111*a(n-1) +(17303/9)*a(n-2) +(10967/9)*a(n-3) +390709/9', 'a(n)*n -n*a(n-3) +(-217/891)*a(n-2)*a(n-3) +(217/891)*a(n-3)^2 -9*a(n) +(-23870/81)*n +(-10/9)*a(n-1) +(1855/81)*a(n-2) +(1108/81)*a(n-3) +48026/81', 'a(n)*a(n-3) +(-217/81)*a(n-2)*a(n-3) +(136/81)*a(n-3)^2 -77*a(n) +(31460/81)*n +(-110/9)*a(n-1) +(20405/81)*a(n-2) +(-16324/81)*a(n-3) -59774/81', 'a(n-3)^2 -11*a(n-3)*a(n-4) +10*a(n-4)^2 -10890*n -22*a(n-3) +1111*a(n-4) +32791', 'a(n-2)*a(n-4) +(-17/9)*a(n-3)*a(n-4) +(8/9)*a(n-4)^2 +(1210/9)*n -88*a(n-2) +(1573/9)*a(n-3) +(-902/9)*a(n-4) -3509/9', 'n*a(n-4) +(225/22)*a(n-3)*a(n-4) +(-227/22)*a(n-4)^2 +10274*n +(-2025/2)*a(n-3) -37*a(n-4) -39369/2', 'n*a(n-3) +(223/22)*a(n-3)*a(n-4) +(-225/22)*a(n-4)^2 +10164*n +(-2031/2)*a(n-3) -24*a(n-4) -38709/2', 'n^2 +(45/44)*a(n-3)*a(n-4) +(-499/484)*a(n-4)^2 +(2041/2)*n +(-405/4)*a(n-3) +(-73/22)*a(n-4) -7827/4', 'a(n-2)*a(n-3) +(-107/9)*a(n-3)*a(n-4) +(98/9)*a(n-4)^2 +(-96800/9)*n -99*a(n-2) +(484/9)*a(n-3) +(10087/9)*a(n-4) +302500/9', 'a(n-2)^2 +(-187/9)*a(n-3)*a(n-4) +(178/9)*a(n-4)^2 +(-182710/9)*n -1111*a(n-2) +(17303/9)*a(n-3) +(10967/9)*a(n-4) +573419/9', 'n*a(n-2) +(181/18)*a(n-3)*a(n-4) +(-2009/198)*a(n-4)^2 +(90596/9)*n -11*a(n-2) +(-17939/18)*a(n-3) +(-208/9)*a(n-4) -343079/18', 'a(n-3)*a(n-4)^2 -a(n-4)^3 -12485*a(n-3)*a(n-4) +12474*a(n-4)^2 -12551330*n +1226214*a(n-3) +52151*a(n-4) +24165636', 'a(n-1)*a(n-4) +(-217/81)*a(n-3)*a(n-4) +(136/81)*a(n-4)^2 +(31460/81)*n -77*a(n-1) +(-110/9)*a(n-2) +(20405/81)*a(n-3) +(-16324/81)*a(n-4) -91234/81', 'n*a(n-5) +(-1/11)*a(n-5)^2 -1001*n +87*a(n-5) +4004', 'n^2 +(-1/121)*a(n-5)^2 -109*n +(101/11)*a(n-5) +420', 'a(n-4)*a(n-5) -a(n-5)^2 +(9922/9)*n -99*a(n-4) +(-110/9)*a(n-5) -29887/9', 'n*a(n-4) +(-1/11)*a(n-5)^2 +(-9097/9)*n -13*a(n-4) +(899/9)*a(n-5) +37279/9', 'a(n-4)^2 -a(n-5)^2 +(11132/9)*n -1111*a(n-4) +(8789/9)*a(n-5) +64372/9', 'a(n-3)*a(n-5) -a(n-5)^2 +(179564/81)*n -88*a(n-3) +(-110/9)*a(n-4) +(-9988/81)*a(n-5) -550550/81', 'n*a(n-3) +(-1/11)*a(n-5)^2 +(-82577/81)*n -12*a(n-3) +(-10/9)*a(n-4) +(8083/81)*a(n-5) +345554/81', 'a(n-3)*a(n-4) -a(n-5)^2 +(190454/81)*n -99*a(n-3) +(-10109/9)*a(n-4) +(79013/81)*a(n-5) +395791/81', 'a(n-3)^2 -a(n-5)^2 +(211024/81)*n -1111*a(n-3) +(-1210/9)*a(n-4) +(78133/81)*a(n-5) +1216292/81', 'n*a(n-2) +(-1/11)*a(n-5)^2 +(-748825/729)*n -11*a(n-2) +(-10/9)*a(n-3) +(-98/81)*a(n-4) +(72683/729)*a(n-5) +3191221/729', 'n +(-1/11)*a(n-6) -5', 'a(n-5)*a(n-6) -a(n-6)^2 -99*a(n-5) +88*a(n-6) +1089', 'a(n-5)^2 -a(n-6)^2 -1111*a(n-5) +1089*a(n-6) +12100', 'a(n-4)*a(n-6) -a(n-6)^2 -88*a(n-4) +(-110/9)*a(n-5) +(704/9)*a(n-6) +18634/9', 'a(n-4)*a(n-5) -a(n-6)^2 -99*a(n-4) +(-10109/9)*a(n-5) +(10703/9)*a(n-6) +128623/9', 'a(n-4)^2 -a(n-6)^2 -1111*a(n-4) +(-1210/9)*a(n-5) +(10813/9)*a(n-6) +228932/9', 'a(n-3)*a(n-6) -a(n-6)^2 -77*a(n-3) +(-110/9)*a(n-4) +(-1078/81)*a(n-5) +(5632/81)*a(n-6) +239459/81', 'a(n-3)*a(n-5) -a(n-6)^2 -88*a(n-3) +(-110/9)*a(n-4) +(-99979/81)*a(n-5) +(104533/81)*a(n-6) +1327370/81', 'a(n-3)*a(n-4) -a(n-6)^2 -99*a(n-3) +(-10109/9)*a(n-4) +(-10978/81)*a(n-5) +(105523/81)*a(n-6) +2328161/81', 'a(n-3)^2 -a(n-6)^2 -1111*a(n-3) +(-1210/9)*a(n-4) +(-11858/81)*a(n-5) +(107393/81)*a(n-6) +3251512/81', 'a(n-6) -a(n-7) -11', 'n +(-1/11)*a(n-7) -6', 'a(n-7) -a(n-8) -11', 'a(n-6) -a(n-8) -22', 'n +(-1/11)*a(n-8) -7', 'a(n-8) -a(n-9) -11', 'a(n-7) -a(n-9) -22', 'a(n-6) -a(n-9) -33', 'n +(-1/11)*a(n-9) -8', 'a(n) -10*a(n-9) -891']
A056524: 
a(n) = 10*a(n-9) + 891
truth: 
None

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

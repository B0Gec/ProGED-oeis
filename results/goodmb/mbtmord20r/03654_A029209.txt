
orders_used: [2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:3655/10000, seq_id:A029209, order:20 took:
 22.4 seconds, i.e. 0.37 minutes or 0.006 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 2.
eqs_explicit:
['a(n) = 5*a(n-5)^2/2 - 2*a(n-5)*a(n-3) + a(n-5)/2 + a(n-4) + a(n-2)*a(n-1) - a(n-2) - a(n-1) + 1']
non_linears:
['a(n)^2 -2*a(n)*a(n-2) +a(n-2)^2 -a(n) +a(n-2)', 'a(n-1)*a(n-2)^2 +(4/5)*a(n)*a(n-2) +(-2/5)*n*a(n-2) +(-9/5)*a(n-1)*a(n-2) +(-6/5)*a(n-2)^2 +(-4/5)*a(n) +(2/5)*n +(4/5)*a(n-1) +(16/5)*a(n-2) -2', 'a(n-2)^3 +(12/5)*a(n)*a(n-2) +(-6/5)*n*a(n-2) +(18/5)*a(n-1)*a(n-2) +(-18/5)*a(n-2)^2 +(-12/5)*a(n) +(6/5)*n +(-18/5)*a(n-1) +(13/5)*a(n-2)', 'a(n-1)^2 -2*a(n-1)*a(n-3) +a(n-3)^2 -a(n-1) +a(n-3)', 'a(n-2)*a(n-3)^2 +(-2/5)*n*a(n-3) +(4/5)*a(n-1)*a(n-3) +(-9/5)*a(n-2)*a(n-3) +(-6/5)*a(n-3)^2 +(2/5)*n +(-4/5)*a(n-1) +(4/5)*a(n-2) +(18/5)*a(n-3) -12/5', 'a(n-1)*a(n-3)^2 +(2/5)*n*a(n-3) +(-9/5)*a(n-1)*a(n-3) +(4/5)*a(n-2)*a(n-3) +(-19/5)*a(n-3)^2 +(-2/5)*n +(4/5)*a(n-1) +(-4/5)*a(n-2) +(7/5)*a(n-3) +12/5', 'a(n-3)^3 +(-6/5)*n*a(n-3) +(12/5)*a(n-1)*a(n-3) +(18/5)*a(n-2)*a(n-3) +(-18/5)*a(n-3)^2 +(6/5)*n +(-12/5)*a(n-1) +(-18/5)*a(n-2) +(19/5)*a(n-3) -6/5', 'n*a(n-3)^2 +(-19/5)*n*a(n-3) +(28/5)*a(n-1)*a(n-3) +(32/5)*a(n-2)*a(n-3) +(-62/5)*a(n-3)^2 +(14/5)*n +(-28/5)*a(n-1) +(-32/5)*a(n-2) +(86/5)*a(n-3) -24/5', 'a(n-4)^3 -3*a(n-4)^2 +2*a(n-4)', 'a(n-1)*a(n-4) -a(n-3)*a(n-4) -a(n-1) +a(n-3)', 'a(n)*a(n-4) -a(n-4)^2 -a(n) +1', 'a(n-2)^2 -2*a(n-2)*a(n-4) +a(n-4)^2 -a(n-2) +a(n-4)', 'a(n-3)*a(n-4)^2 -3*a(n-3)*a(n-4) -a(n-4)^2 +2*a(n-3) +3*a(n-4) -2', 'a(n-2)*a(n-4)^2 -a(n-2)*a(n-4) +2*a(n-3)*a(n-4) -4*a(n-4)^2 -2*a(n-3) +2*a(n-4) +2', 'a(n-3)^2*a(n-4) -a(n-3)^2 -5*a(n-3)*a(n-4) +a(n-4)^2 +5*a(n-3) +3*a(n-4) -4', 'a(n-3)^3 -3*a(n-3)^2 -6*a(n-3)*a(n-4) +3*a(n-4)^2 +8*a(n-3) +3*a(n-4) -6', 'a(n)*a(n-3) +(-1/2)*a(n-3)^2 +(-1/2)*a(n-4)^2 -a(n) +(-1/2)*a(n-3) +(1/2)*a(n-4) +1', 'a(n-2)*a(n-3) +(-1/2)*a(n-3)^2 +2*a(n-3)*a(n-4) +(-3/2)*a(n-4)^2 -a(n-2) +(-5/2)*a(n-3) +(-1/2)*a(n-4) +3', 'a(n-5)^3 -3*a(n-5)^2 +2*a(n-5)', 'a(n-1)*a(n-5) -a(n-5)^2 -a(n-1) +1', 'a(n)*a(n-5) -a(n-5)^2 -a(n) +1', 'a(n-3)*a(n-5)^2 -a(n-3)*a(n-5) -3*a(n-5)^2 +3*a(n-5)', 'a(n-3)^2 -2*a(n-3)*a(n-5) +a(n-5)^2 -a(n-3) +a(n-5)', 'a(n-4)*a(n-5) +(-1/2)*a(n-5)^2 -a(n-4) +(-1/2)*a(n-5) +1', 'a(n-2)*a(n-5) +(-1/2)*a(n-5)^2 -a(n-2) +(-1/2)*a(n-5) +1', 'n*a(n-5) -2*a(n-3)*a(n-5) -a(n-5)^2 -n +2*a(n-3) -5*a(n-5) +6', 'a(n)*a(n-4) +3*a(n-3)*a(n-5) +(-7/2)*a(n-5)^2 +n -a(n-1) -2*a(n-2) -2*a(n-3) -4*a(n-4) +(-3/2)*a(n-5)', 'a(n-1)*a(n-2) -2*a(n-3)*a(n-5) +(5/2)*a(n-5)^2 -a(n) -a(n-1) -a(n-2) +a(n-4) +(1/2)*a(n-5) +1']
A029209: 
a(n) = 5*a(n-5)^2/2 - 2*a(n-5)*a(n-3) + a(n-5)/2 + a(n-4) + a(n-2)*a(n-1) - a(n-2) - a(n-1) + 1
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

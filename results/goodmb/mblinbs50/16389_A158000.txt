
orders_used: [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
While total time consumed by now, scale:16390/27236, seq_id:A158000, order:20 took:
 46.0 seconds, i.e. 0.77 minutes or 0.013 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
non_linears:
['a(n) -a(n-1) -338', 'a(n-1) -a(n-2) -338', 'a(n) -a(n-2) -676', 'a(n-2) -a(n-3) -338', 'a(n-1) -a(n-3) -676', 'a(n) -a(n-3) -1014', 'a(n-3) -a(n-4) -338', 'a(n-2) -a(n-4) -676', 'a(n-1) -a(n-4) -1014', 'a(n) -a(n-4) -1352', 'a(n-4) -a(n-5) -338', 'a(n-3) -a(n-5) -676', 'a(n-2) -a(n-5) -1014', 'a(n-1) -a(n-5) -1352', 'a(n) -a(n-5) -1690', 'a(n-5) -a(n-6) -338', 'a(n-4) -a(n-6) -676', 'a(n-3) -a(n-6) -1014', 'a(n-2) -a(n-6) -1352', 'a(n-1) -a(n-6) -1690', 'a(n) -a(n-6) -2028', 'a(n-6) -a(n-7) -338', 'a(n-5) -a(n-7) -676', 'a(n-4) -a(n-7) -1014', 'a(n-3) -a(n-7) -1352', 'a(n-2) -a(n-7) -1690', 'a(n-1) -a(n-7) -2028', 'a(n) -a(n-7) -2366', 'a(n-7) -a(n-8) -338', 'a(n-6) -a(n-8) -676', 'a(n-5) -a(n-8) -1014', 'a(n-4) -a(n-8) -1352', 'a(n-3) -a(n-8) -1690', 'a(n-2) -a(n-8) -2028', 'a(n-1) -a(n-8) -2366', 'a(n) -a(n-8) -2704', 'a(n-8) -a(n-9) -338', 'a(n-7) -a(n-9) -676', 'a(n-6) -a(n-9) -1014', 'a(n-5) -a(n-9) -1352', 'a(n-4) -a(n-9) -1690', 'a(n-3) -a(n-9) -2028', 'a(n-2) -a(n-9) -2366', 'a(n-1) -a(n-9) -2704', 'a(n) -a(n-9) -3042', 'a(n-9) -a(n-10) -338', 'a(n-8) -a(n-10) -676', 'a(n-7) -a(n-10) -1014', 'a(n-6) -a(n-10) -1352', 'a(n-5) -a(n-10) -1690', 'a(n-4) -a(n-10) -2028', 'a(n-3) -a(n-10) -2366', 'a(n-2) -a(n-10) -2704', 'a(n-1) -a(n-10) -3042', 'a(n) -a(n-10) -3380', 'a(n-10) -a(n-11) -338', 'a(n-9) -a(n-11) -676', 'a(n-8) -a(n-11) -1014', 'a(n-7) -a(n-11) -1352', 'a(n-6) -a(n-11) -1690', 'a(n-5) -a(n-11) -2028', 'a(n-4) -a(n-11) -2366', 'a(n-3) -a(n-11) -2704', 'a(n-2) -a(n-11) -3042', 'a(n-1) -a(n-11) -3380', 'a(n-11) -a(n-12) -338', 'a(n-10) -a(n-12) -676', 'a(n-9) -a(n-12) -1014', 'a(n-8) -a(n-12) -1352', 'a(n-7) -a(n-12) -1690', 'a(n-6) -a(n-12) -2028', 'a(n-5) -a(n-12) -2366', 'a(n-4) -a(n-12) -2704', 'a(n-3) -a(n-12) -3042', 'a(n-2) -a(n-12) -3380', 'a(n-12) -a(n-13) -338', 'a(n-11) -a(n-13) -676', 'a(n-10) -a(n-13) -1014', 'a(n-9) -a(n-13) -1352', 'a(n-8) -a(n-13) -1690', 'a(n-7) -a(n-13) -2028', 'a(n-6) -a(n-13) -2366', 'a(n-5) -a(n-13) -2704', 'a(n-4) -a(n-13) -3042', 'a(n-3) -a(n-13) -3380', 'a(n-13) -a(n-14) -338', 'a(n-12) -a(n-14) -676', 'a(n-11) -a(n-14) -1014', 'a(n-10) -a(n-14) -1352', 'a(n-9) -a(n-14) -1690', 'a(n-8) -a(n-14) -2028', 'a(n-7) -a(n-14) -2366', 'a(n-6) -a(n-14) -2704', 'a(n-5) -a(n-14) -3042', 'a(n-4) -a(n-14) -3380', 'a(n-14) -a(n-15) -338', 'a(n-13) -a(n-15) -676', 'a(n-12) -a(n-15) -1014', 'a(n-11) -a(n-15) -1352', 'a(n-10) -a(n-15) -1690', 'a(n-9) -a(n-15) -2028', 'a(n-8) -a(n-15) -2366', 'a(n-7) -a(n-15) -2704', 'a(n-6) -a(n-15) -3042', 'a(n-5) -a(n-15) -3380', 'a(n-15) -a(n-16) -338', 'a(n-14) -a(n-16) -676', 'a(n-13) -a(n-16) -1014', 'a(n-12) -a(n-16) -1352', 'a(n-11) -a(n-16) -1690', 'a(n-10) -a(n-16) -2028', 'a(n-9) -a(n-16) -2366', 'a(n-8) -a(n-16) -2704', 'a(n-7) -a(n-16) -3042', 'a(n-6) -a(n-16) -3380', 'a(n-16) -a(n-17) -338', 'a(n-15) -a(n-17) -676', 'a(n-14) -a(n-17) -1014', 'a(n-13) -a(n-17) -1352', 'a(n-12) -a(n-17) -1690', 'a(n-11) -a(n-17) -2028', 'a(n-10) -a(n-17) -2366', 'a(n-9) -a(n-17) -2704', 'a(n-8) -a(n-17) -3042', 'a(n-7) -a(n-17) -3380', 'a(n-17) -a(n-18) -338', 'a(n-16) -a(n-18) -676', 'a(n-15) -a(n-18) -1014', 'a(n-14) -a(n-18) -1352', 'a(n-13) -a(n-18) -1690', 'a(n-12) -a(n-18) -2028', 'a(n-11) -a(n-18) -2366', 'a(n-10) -a(n-18) -2704', 'a(n-9) -a(n-18) -3042', 'a(n-8) -a(n-18) -3380', 'a(n-18) -a(n-19) -338', 'a(n-17) -a(n-19) -676', 'a(n-16) -a(n-19) -1014', 'a(n-15) -a(n-19) -1352', 'a(n-14) -a(n-19) -1690', 'a(n-13) -a(n-19) -2028', 'a(n-12) -a(n-19) -2366', 'a(n-11) -a(n-19) -2704', 'a(n-10) -a(n-19) -3042', 'a(n-9) -a(n-19) -3380', 'a(n-19) -a(n-20) -338', 'a(n-18) -a(n-20) -676', 'a(n-17) -a(n-20) -1014', 'a(n-16) -a(n-20) -1352', 'a(n-15) -a(n-20) -1690', 'a(n-14) -a(n-20) -2028', 'a(n-13) -a(n-20) -2366', 'a(n-12) -a(n-20) -2704', 'a(n-11) -a(n-20) -3042', 'a(n-10) -a(n-20) -3380']
A158000: 
MB not reconst
truth: 
a(n) = 2*a(n - 1) + -1*a(n - 2),  
a(0) = 339, a(1) = 677

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    


orders_used: [9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:638/10000, seq_id:A003386, order:20 took:
 55.8 seconds, i.e. 0.93 minutes or 0.016 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 9.
eqs_explicit:
[]
non_linears:
['a(n-8)*a(n-9) -a(n-9)^2 -2048*a(n-8) +1793*a(n-9) +522240', 'a(n-8)^2 -a(n-9)^2 -8871*a(n-8) +8361*a(n-9) +2197080', 'a(n-6)*a(n-8) -a(n-6)*a(n-9) -255*a(n-6) -7078*a(n-8) +7078*a(n-9) +1804890', 'a(n-5)*a(n-8) -a(n-5)*a(n-9) -255*a(n-5) -7333*a(n-8) +7333*a(n-9) +1869915', 'a(n-4)*a(n-8) -a(n-4)*a(n-9) -255*a(n-4) -7588*a(n-8) +7588*a(n-9) +1934940', 'a(n-9)*a(n-10) -a(n-10)^2 -2048*a(n-9) +1793*a(n-10) +522240', 'a(n-9)^2 -a(n-10)^2 -8871*a(n-9) +8361*a(n-10) +2197080', 'a(n-8)*a(n-10) -a(n-10)^2 -1793*a(n-8) -255*a(n-9) +1538*a(n-10) +979455', 'a(n-6)*a(n-9) -a(n-6)*a(n-10) -255*a(n-6) -7333*a(n-9) +7333*a(n-10) +1869915', 'a(n-5)*a(n-9) -a(n-5)*a(n-10) -255*a(n-5) -7588*a(n-9) +7588*a(n-10) +1934940', 'a(n-8)^2 -a(n-10)^2 -8871*a(n-8) -510*a(n-9) +8361*a(n-10) +4394160', 'a(n-8)*a(n-9) -a(n-10)^2 -2048*a(n-8) -7078*a(n-9) +8361*a(n-10) +2719320', 'a(n-6)*a(n-8) -a(n-6)*a(n-10) -510*a(n-6) -7078*a(n-8) -255*a(n-9) +7333*a(n-10) +3674805', 'a(n-5)*a(n-8) -a(n-5)*a(n-10) -510*a(n-5) -7333*a(n-8) -255*a(n-9) +7588*a(n-10) +3804855', 'a(n-10)*a(n-11) -a(n-11)^2 -2048*a(n-10) +1793*a(n-11) +522240', 'a(n-10)^2 -a(n-11)^2 -8871*a(n-10) +8361*a(n-11) +2197080', 'a(n-9)*a(n-11) -a(n-11)^2 -1793*a(n-9) -255*a(n-10) +1538*a(n-11) +979455', 'a(n-6)*a(n-10) -a(n-6)*a(n-11) -255*a(n-6) -7588*a(n-10) +7588*a(n-11) +1934940', 'a(n-9)^2 -a(n-11)^2 -8871*a(n-9) -510*a(n-10) +8361*a(n-11) +4394160', 'a(n-9)*a(n-10) -a(n-11)^2 -2048*a(n-9) -7078*a(n-10) +8361*a(n-11) +2719320', 'a(n-8)*a(n-11) -a(n-11)^2 -1538*a(n-8) -255*a(n-9) -255*a(n-10) +1283*a(n-11) +1371645', 'a(n-6)*a(n-9) -a(n-6)*a(n-11) -510*a(n-6) -7333*a(n-9) -255*a(n-10) +7588*a(n-11) +3804855', 'a(n-8)^2 -a(n-11)^2 -8871*a(n-8) -510*a(n-9) -510*a(n-10) +8361*a(n-11) +6591240', 'a(n-11)*a(n-12) -a(n-12)^2 -2048*a(n-11) +1793*a(n-12) +522240', 'a(n-11)^2 -a(n-12)^2 -8871*a(n-11) +8361*a(n-12) +2197080', 'a(n-10)*a(n-12) -a(n-12)^2 -1793*a(n-10) -255*a(n-11) +1538*a(n-12) +979455', 'a(n-10)^2 -a(n-12)^2 -8871*a(n-10) -510*a(n-11) +8361*a(n-12) +4394160', 'a(n-10)*a(n-11) -a(n-12)^2 -2048*a(n-10) -7078*a(n-11) +8361*a(n-12) +2719320', 'a(n-9)*a(n-12) -a(n-12)^2 -1538*a(n-9) -255*a(n-10) -255*a(n-11) +1283*a(n-12) +1371645', 'a(n-9)^2 -a(n-12)^2 -8871*a(n-9) -510*a(n-10) -510*a(n-11) +8361*a(n-12) +6591240', 'a(n-9)*a(n-11) -a(n-12)^2 -1793*a(n-9) -255*a(n-10) -7333*a(n-11) +8361*a(n-12) +3176535', 'n +(-1/255)*a(n-16) -4072/255', 'a(n-7) +(-904/853)*a(n-15) +(51/853)*a(n-16) -5365160/853', 'a(n-6) +(-904/853)*a(n-14) +(51/853)*a(n-16) -5352155/853', 'a(n-5) +(-904/853)*a(n-13) +(51/853)*a(n-16) -5339150/853', 'a(n-4) +(-904/853)*a(n-12) +(51/853)*a(n-16) -5326145/853', 'a(n-3) +(-904/853)*a(n-11) +(51/853)*a(n-16) -5313140/853', 'a(n-2) +(-904/853)*a(n-10) +(51/853)*a(n-16) -5300135/853', 'a(n-1) +(-904/853)*a(n-9) +(51/853)*a(n-16) -5287130/853', 'a(n-8) +a(n-9) +a(n-10) +a(n-11) +a(n-12) +a(n-13) +a(n-14) +a(n-15) +(-1261/51)*a(n-16) -461356/51', 'a(n-16) -a(n-17) -255', 'a(n-8) -a(n-17) -6560', 'n +(-1/255)*a(n-17) -4327/255', 'a(n-9) +a(n-10) +a(n-11) +a(n-12) +a(n-13) +a(n-14) +a(n-15) +(-1210/51)*a(n-17) -448351/51', 'a(n-7) +(-904/853)*a(n-15) +(51/853)*a(n-17) -5352155/853', 'a(n-6) +(-904/853)*a(n-14) +(51/853)*a(n-17) -5339150/853', 'a(n-5) +(-904/853)*a(n-13) +(51/853)*a(n-17) -5326145/853', 'a(n-4) +(-904/853)*a(n-12) +(51/853)*a(n-17) -5313140/853', 'a(n-3) +(-904/853)*a(n-11) +(51/853)*a(n-17) -5300135/853', 'a(n-2) +(-904/853)*a(n-10) +(51/853)*a(n-17) -5287130/853', 'a(n-17) -a(n-18) -255', 'a(n-16) -a(n-18) -510', 'a(n-9) -a(n-18) -6560', 'a(n-8) -a(n-18) -6815', 'a(n-1) -a(n-18) -13120', 'n +(-1/255)*a(n-18) -4582/255', 'a(n-10) +a(n-11) +a(n-12) +a(n-13) +a(n-14) +a(n-15) +(-1159/51)*a(n-18) -422341/51', 'a(n-7) +(-904/853)*a(n-15) +(51/853)*a(n-18) -5339150/853', 'a(n-6) +(-904/853)*a(n-14) +(51/853)*a(n-18) -5326145/853', 'a(n-5) +(-904/853)*a(n-13) +(51/853)*a(n-18) -5313140/853', 'a(n-18) -a(n-19) -255', 'a(n-17) -a(n-19) -510', 'a(n-16) -a(n-19) -765', 'a(n-10) -a(n-19) -6560', 'a(n-9) -a(n-19) -6815', 'a(n-8) -a(n-19) -7070', 'a(n-2) -a(n-19) -13120', 'a(n-1) -a(n-19) -13375', 'n +(-1/255)*a(n-19) -4837/255', 'a(n-11) +a(n-12) +a(n-13) +a(n-14) +a(n-15) +(-1108/51)*a(n-19) -383326/51', 'a(n-19) -a(n-20) -255', 'a(n-18) -a(n-20) -510', 'a(n-17) -a(n-20) -765', 'a(n-16) -a(n-20) -1020', 'a(n-11) -a(n-20) -6560', 'a(n-10) -a(n-20) -6815', 'a(n-9) -a(n-20) -7070', 'a(n-8) -a(n-20) -7325', 'a(n-3) -a(n-20) -13120', 'a(n-2) -a(n-20) -13375']
A003386: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

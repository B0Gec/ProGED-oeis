
orders_used: [7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:5510/10000, seq_id:A039449, order:20 took:
 17.6 seconds, i.e. 0.29 minutes or 0.005 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 7.
eqs_explicit:
['a(n) = -309*a(n-10)/2018 - 1701*a(n-9)/1009 + 10431*a(n-8)/2018 + 5306*a(n-7)/1009 - 1197943/1009']
non_linears:
['n +(-1/565)*a(n-1) +(-714/565)*a(n-2) +(96/565)*a(n-3) +(42/565)*a(n-4) +(18/565)*a(n-5) +(-3/565)*a(n-7) +84481/565', 'a(n-4)^2 +(-68/113)*a(n-1) +(4558/113)*a(n-2) +(-4320/113)*a(n-3) +(-36807/113)*a(n-4) +(94/113)*a(n-5) +2*a(n-6) +(22/113)*a(n-7) +2910442/113', 'a(n-2) +(-119/94)*a(n-3) +(8/47)*a(n-4) +(7/94)*a(n-5) +(3/94)*a(n-6) +(-1/188)*a(n-8) -139/94', 'n +(-119/94)*a(n-3) +(8/47)*a(n-4) +(7/94)*a(n-5) +(3/94)*a(n-6) +(-1/188)*a(n-8) +13961/94', 'a(n-4)*a(n-6) +(889/47)*a(n-3) +(-8198/47)*a(n-4) +(-467/47)*a(n-5) +(-7418/47)*a(n-6) +2*a(n-7) +(13/94)*a(n-8) +1211023/47', 'a(n-5)^2 +(1860/47)*a(n-3) +(-1792/47)*a(n-4) +(-15307/47)*a(n-5) +(40/47)*a(n-6) +2*a(n-7) +(9/47)*a(n-8) +1210496/47', 'a(n-4)*a(n-5) +(2804/47)*a(n-3) +(-9762/47)*a(n-4) +(-8260/47)*a(n-5) +(-62/47)*a(n-6) +2*a(n-7) +(26/47)*a(n-8) +1219264/47', 'a(n-3)*a(n-5) +(-4334/47)*a(n-3) +(-2588/47)*a(n-4) +(-8335/47)*a(n-5) +(-74/47)*a(n-6) +2*a(n-7) +(28/47)*a(n-8) +1226682/47', 'a(n-1) +(8707/94)*a(n-3) +(-3166/47)*a(n-4) +(-2735/94)*a(n-5) +(-447/94)*a(n-6) +3*a(n-7) +(149/188)*a(n-8) +45997/94', 'a(n-4)*a(n-8) +(-9974/47)*a(n-3) +(2206/47)*a(n-4) +(-110/47)*a(n-5) +(20/47)*a(n-6) +4*a(n-7) +(-7445/47)*a(n-8) +1226306/47', 'a(n-3)*a(n-6) +(-5698/47)*a(n-3) +(-1512/47)*a(n-4) +(-544/47)*a(n-5) +(-7498/47)*a(n-6) +2*a(n-7) +(12/47)*a(n-8) +1218380/47', 'a(n-4)^2 +(3223/47)*a(n-3) +(-17537/47)*a(n-4) +(-925/47)*a(n-5) +(-101/47)*a(n-6) +2*a(n-7) +(65/94)*a(n-8) +1227181/47', 'a(n-4) +(-1058/1471)*a(n-5) +(-457/1471)*a(n-6) +(-75/1471)*a(n-7) +(47/1471)*a(n-8) +(25/2942)*a(n-9) +7705/1471', 'a(n-3) +(-1089/1471)*a(n-5) +(-469/1471)*a(n-6) +(-48/1471)*a(n-7) +(119/2942)*a(n-8) +(8/1471)*a(n-9) +7579/1471', 'a(n-2) +(-1089/1471)*a(n-5) +(-469/1471)*a(n-6) +(-48/1471)*a(n-7) +(119/2942)*a(n-8) +(8/1471)*a(n-9) +6108/1471', 'n +(-1089/1471)*a(n-5) +(-469/1471)*a(n-6) +(-48/1471)*a(n-7) +(119/2942)*a(n-8) +(8/1471)*a(n-9) +226758/1471', 'a(n-5) +(-681/1009)*a(n-7) +(-565/2018)*a(n-8) +(213/2018)*a(n-9) +(3/1009)*a(n-10) -26611/1009', 'a(n-4) +(-700/1009)*a(n-7) +(-1083/4036)*a(n-8) +(469/4036)*a(n-9) +(-1/4036)*a(n-10) -27632/1009', 'a(n-3) +(-700/1009)*a(n-7) +(-1083/4036)*a(n-8) +(469/4036)*a(n-9) +(-1/4036)*a(n-10) -28641/1009', 'a(n-2) +(-700/1009)*a(n-7) +(-1083/4036)*a(n-8) +(469/4036)*a(n-9) +(-1/4036)*a(n-10) -29650/1009', 'a(n-6) +(-511/1009)*a(n-7) +(-1285/4036)*a(n-8) +(413/4036)*a(n-9) +(-31/4036)*a(n-10) -44347/1009', 'n +(-700/1009)*a(n-7) +(-1083/4036)*a(n-8) +(469/4036)*a(n-9) +(-1/4036)*a(n-10) +121700/1009', 'a(n-1) +(-1531/1009)*a(n-7) +(-8427/4036)*a(n-8) +(2509/4036)*a(n-9) +(227/4036)*a(n-10) +300193/1009', 'a(n) +(-5306/1009)*a(n-7) +(-10431/2018)*a(n-8) +(1701/1009)*a(n-9) +(309/2018)*a(n-10) +1197943/1009']
A039449: 
a(n) = -309*a(n-10)/2018 - 1701*a(n-9)/1009 + 10431*a(n-8)/2018 + 5306*a(n-7)/1009 - 1197943/1009
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

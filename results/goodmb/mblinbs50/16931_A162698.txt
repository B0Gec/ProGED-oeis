
orders_used: [3, 4, 5, 6, 6, 10, 10, 10, 10, 11, 10, 11, 11, 11, 12, 11, 10, 12, 12, 12, 13, 12, 11, 10, 13, 13, 13, 14, 13, 12, 11, 10, 14, 14, 14, 15, 14, 13, 12, 11, 10, 15, 15, 15, 16, 15, 14, 13, 12, 11, 10, 16, 16, 16, 17, 16, 15, 14, 13, 12, 11, 10, 17, 17, 18, 17, 16, 15, 14, 13, 12, 11, 10, 18, 19, 18, 17, 16, 15, 14, 13, 12, 11, 19, 20, 19, 18, 17, 16, 15, 14, 13, 12, 20]
While total time consumed by now, scale:16932/27236, seq_id:A162698, order:20 took:
 39.9 seconds, i.e. 0.66 minutes or 0.011 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 3.
non_linears:
['a(n)*a(n-1) -a(n-1)*a(n-2) -a(n)*a(n-3) +a(n-2)*a(n-3) -6*a(n) -6*a(n-1) +6*a(n-2) +6*a(n-3) +36', 'a(n-1)*a(n-2) -a(n-2)*a(n-3) -a(n-1)*a(n-4) +a(n-3)*a(n-4) -6*a(n-1) -6*a(n-2) +6*a(n-3) +6*a(n-4) +36', 'a(n-2)*a(n-3) -a(n-3)*a(n-4) -a(n-2)*a(n-5) +a(n-4)*a(n-5) -6*a(n-2) -6*a(n-3) +6*a(n-4) +6*a(n-5) +36', 'a(n-3)*a(n-4) -a(n-4)*a(n-5) -a(n-3)*a(n-6) +a(n-5)*a(n-6) -6*a(n-3) -6*a(n-4) +6*a(n-5) +6*a(n-6) +36', 'a(n-1)*a(n-4) -a(n-4)*a(n-5) -a(n-1)*a(n-6) +a(n-5)*a(n-6) -6*a(n-1) -12*a(n-4) +6*a(n-5) +12*a(n-6) +72', 'a(n) -a(n-10) -30', 'a(n-7)*a(n-8) -a(n-8)*a(n-9) -a(n-7)*a(n-10) +a(n-9)*a(n-10) -6*a(n-7) -6*a(n-8) +6*a(n-9) +6*a(n-10) +36', 'a(n-5)*a(n-8) -a(n-8)*a(n-9) -a(n-5)*a(n-10) +a(n-9)*a(n-10) -6*a(n-5) -12*a(n-8) +6*a(n-9) +12*a(n-10) +72', 'a(n-3)*a(n-8) -a(n-8)*a(n-9) -a(n-3)*a(n-10) +a(n-9)*a(n-10) -6*a(n-3) -18*a(n-8) +6*a(n-9) +18*a(n-10) +108', 'a(n-1) -a(n-11) -30', 'a(n) -a(n-10) -30', 'a(n-8)*a(n-9) -a(n-9)*a(n-10) -a(n-8)*a(n-11) +a(n-10)*a(n-11) -6*a(n-8) -6*a(n-9) +6*a(n-10) +6*a(n-11) +36', 'a(n-6)*a(n-9) -a(n-9)*a(n-10) -a(n-6)*a(n-11) +a(n-10)*a(n-11) -6*a(n-6) -12*a(n-9) +6*a(n-10) +12*a(n-11) +72', 'a(n-4)*a(n-9) -a(n-9)*a(n-10) -a(n-4)*a(n-11) +a(n-10)*a(n-11) -6*a(n-4) -18*a(n-9) +6*a(n-10) +18*a(n-11) +108', 'a(n-2) -a(n-12) -30', 'a(n-1) -a(n-11) -30', 'a(n) -a(n-10) -30', 'a(n-9)*a(n-10) -a(n-10)*a(n-11) -a(n-9)*a(n-12) +a(n-11)*a(n-12) -6*a(n-9) -6*a(n-10) +6*a(n-11) +6*a(n-12) +36', 'a(n-7)*a(n-10) -a(n-10)*a(n-11) -a(n-7)*a(n-12) +a(n-11)*a(n-12) -6*a(n-7) -12*a(n-10) +6*a(n-11) +12*a(n-12) +72', 'a(n-5)*a(n-10) -a(n-10)*a(n-11) -a(n-5)*a(n-12) +a(n-11)*a(n-12) -6*a(n-5) -18*a(n-10) +6*a(n-11) +18*a(n-12) +108', 'a(n-3) -a(n-13) -30', 'a(n-2) -a(n-12) -30', 'a(n-1) -a(n-11) -30', 'a(n) -a(n-10) -30', 'a(n-10)*a(n-11) -a(n-11)*a(n-12) -a(n-10)*a(n-13) +a(n-12)*a(n-13) -6*a(n-10) -6*a(n-11) +6*a(n-12) +6*a(n-13) +36', 'a(n-8)*a(n-11) -a(n-11)*a(n-12) -a(n-8)*a(n-13) +a(n-12)*a(n-13) -6*a(n-8) -12*a(n-11) +6*a(n-12) +12*a(n-13) +72', 'a(n-6)*a(n-11) -a(n-11)*a(n-12) -a(n-6)*a(n-13) +a(n-12)*a(n-13) -6*a(n-6) -18*a(n-11) +6*a(n-12) +18*a(n-13) +108', 'a(n-4) -a(n-14) -30', 'a(n-3) -a(n-13) -30', 'a(n-2) -a(n-12) -30', 'a(n-1) -a(n-11) -30', 'a(n) -a(n-10) -30', 'a(n-11)*a(n-12) -a(n-12)*a(n-13) -a(n-11)*a(n-14) +a(n-13)*a(n-14) -6*a(n-11) -6*a(n-12) +6*a(n-13) +6*a(n-14) +36', 'a(n-9)*a(n-12) -a(n-12)*a(n-13) -a(n-9)*a(n-14) +a(n-13)*a(n-14) -6*a(n-9) -12*a(n-12) +6*a(n-13) +12*a(n-14) +72', 'a(n-7)*a(n-12) -a(n-12)*a(n-13) -a(n-7)*a(n-14) +a(n-13)*a(n-14) -6*a(n-7) -18*a(n-12) +6*a(n-13) +18*a(n-14) +108', 'a(n-5) -a(n-15) -30', 'a(n-4) -a(n-14) -30', 'a(n-3) -a(n-13) -30', 'a(n-2) -a(n-12) -30', 'a(n-1) -a(n-11) -30', 'a(n) -a(n-10) -30', 'a(n-12)*a(n-13) -a(n-13)*a(n-14) -a(n-12)*a(n-15) +a(n-14)*a(n-15) -6*a(n-12) -6*a(n-13) +6*a(n-14) +6*a(n-15) +36', 'a(n-10)*a(n-13) -a(n-13)*a(n-14) -a(n-10)*a(n-15) +a(n-14)*a(n-15) -6*a(n-10) -12*a(n-13) +6*a(n-14) +12*a(n-15) +72', 'a(n-8)*a(n-13) -a(n-13)*a(n-14) -a(n-8)*a(n-15) +a(n-14)*a(n-15) -6*a(n-8) -18*a(n-13) +6*a(n-14) +18*a(n-15) +108', 'a(n-6) -a(n-16) -30', 'a(n-5) -a(n-15) -30', 'a(n-4) -a(n-14) -30', 'a(n-3) -a(n-13) -30', 'a(n-2) -a(n-12) -30', 'a(n-1) -a(n-11) -30', 'a(n) -a(n-10) -30', 'a(n-13)*a(n-14) -a(n-14)*a(n-15) -a(n-13)*a(n-16) +a(n-15)*a(n-16) -6*a(n-13) -6*a(n-14) +6*a(n-15) +6*a(n-16) +36', 'a(n-11)*a(n-14) -a(n-14)*a(n-15) -a(n-11)*a(n-16) +a(n-15)*a(n-16) -6*a(n-11) -12*a(n-14) +6*a(n-15) +12*a(n-16) +72', 'a(n-9)*a(n-14) -a(n-14)*a(n-15) -a(n-9)*a(n-16) +a(n-15)*a(n-16) -6*a(n-9) -18*a(n-14) +6*a(n-15) +18*a(n-16) +108', 'a(n-7) -a(n-17) -30', 'a(n-6) -a(n-16) -30', 'a(n-5) -a(n-15) -30', 'a(n-4) -a(n-14) -30', 'a(n-3) -a(n-13) -30', 'a(n-2) -a(n-12) -30', 'a(n-1) -a(n-11) -30', 'a(n) -a(n-10) -30', 'a(n-14)*a(n-15) -a(n-15)*a(n-16) -a(n-14)*a(n-17) +a(n-16)*a(n-17) -6*a(n-14) -6*a(n-15) +6*a(n-16) +6*a(n-17) +36', 'a(n-12)*a(n-15) -a(n-15)*a(n-16) -a(n-12)*a(n-17) +a(n-16)*a(n-17) -6*a(n-12) -12*a(n-15) +6*a(n-16) +12*a(n-17) +72', 'a(n-8) -a(n-18) -30', 'a(n-7) -a(n-17) -30', 'a(n-6) -a(n-16) -30', 'a(n-5) -a(n-15) -30', 'a(n-4) -a(n-14) -30', 'a(n-3) -a(n-13) -30', 'a(n-2) -a(n-12) -30', 'a(n-1) -a(n-11) -30', 'a(n) -a(n-10) -30', 'a(n-15)*a(n-16) -a(n-16)*a(n-17) -a(n-15)*a(n-18) +a(n-17)*a(n-18) -6*a(n-15) -6*a(n-16) +6*a(n-17) +6*a(n-18) +36', 'a(n-9) -a(n-19) -30', 'a(n-8) -a(n-18) -30', 'a(n-7) -a(n-17) -30', 'a(n-6) -a(n-16) -30', 'a(n-5) -a(n-15) -30', 'a(n-4) -a(n-14) -30', 'a(n-3) -a(n-13) -30', 'a(n-2) -a(n-12) -30', 'a(n-1) -a(n-11) -30', 'a(n-16)*a(n-17) -a(n-17)*a(n-18) -a(n-16)*a(n-19) +a(n-18)*a(n-19) -6*a(n-16) -6*a(n-17) +6*a(n-18) +6*a(n-19) +36', 'a(n-10) -a(n-20) -30', 'a(n-9) -a(n-19) -30', 'a(n-8) -a(n-18) -30', 'a(n-7) -a(n-17) -30', 'a(n-6) -a(n-16) -30', 'a(n-5) -a(n-15) -30', 'a(n-4) -a(n-14) -30', 'a(n-3) -a(n-13) -30', 'a(n-2) -a(n-12) -30', 'a(n) -a(n-20) -60']
A162698: 
MB not reconst
truth: 
a(n) = 2*a(n - 1) + -2*a(n - 2) + 2*a(n - 3) + -2*a(n - 4) + 2*a(n - 5) + -2*a(n - 6) + 2*a(n - 7) + -2*a(n - 8) + 2*a(n - 9) + -1*a(n - 10),  
a(0) = 4, a(1) = 5, a(2) = 9, a(3) = 11, a(4) = 14, a(5) = 17, a(6) = 19, a(7) = 23, a(8) = 24, a(9) = 29

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    


orders_used: [18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:1496/10000, seq_id:A008472, order:20 took:
 19.7 seconds, i.e. 0.33 minutes or 0.005 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 18.
eqs_explicit:
[]
non_linears:
['a(n-3) +(-974/397)*a(n-13) +(523/397)*a(n-14) +(-1662/397)*a(n-15) +(-259/397)*a(n-16) +(490/397)*a(n-17) +(115/397)*a(n-18) +4582/397', 'a(n-13)*a(n-18) +(-399/397)*a(n-13) +(-78/397)*a(n-14) +(802/397)*a(n-15) +(822/397)*a(n-16) +(-1362/397)*a(n-17) +(-2491/397)*a(n-18) +1039/397', 'a(n-9) +(-1125/397)*a(n-13) +(-205/397)*a(n-14) +(-1058/397)*a(n-15) +(-1321/397)*a(n-16) +(85/397)*a(n-17) +(1215/397)*a(n-18) +9780/397', 'a(n-16)*a(n-18) +(-1164/397)*a(n-13) +(-138/397)*a(n-14) +(-505/397)*a(n-15) +(-2760/397)*a(n-16) +(919/397)*a(n-17) +(-712/397)*a(n-18) +13962/397', 'a(n-17)*a(n-18) +(-1348/397)*a(n-13) +(-1359/397)*a(n-14) +(-563/397)*a(n-15) +(-2169/397)*a(n-16) +(-1712/397)*a(n-17) +(773/397)*a(n-18) +24592/397', 'a(n-17)^2 +(932/1191)*a(n-13) +(-588/397)*a(n-14) +(1036/1191)*a(n-15) +(150/397)*a(n-16) +(-4007/397)*a(n-17) +(772/1191)*a(n-18) +6672/397', 'a(n-15)*a(n-16) +(3916/1191)*a(n-13) +(92/397)*a(n-14) +(-2563/1191)*a(n-15) +(-145/397)*a(n-16) +(-1142/397)*a(n-17) +(-958/1191)*a(n-18) -4941/397', 'a(n-16)*a(n-17) +(2954/397)*a(n-13) +(3252/397)*a(n-14) +(2476/397)*a(n-15) +(3505/397)*a(n-16) +(-719/397)*a(n-17) +(-4556/397)*a(n-18) -47441/397', 'a(n-16)^2 +(2/43)*a(n-15) +(-355/43)*a(n-16) +(-56/43)*a(n-17) +(-74/43)*a(n-18) +(90/43)*a(n-19) +844/43', 'a(n-11) +(240/1247)*a(n-15) +(-30/1247)*a(n-16) +(-98/1247)*a(n-17) +(1784/1247)*a(n-18) +(-3390/1247)*a(n-19) -8155/1247', 'n +(-351/1247)*a(n-15) +(-112/1247)*a(n-16) +(-449/1247)*a(n-17) +(-988/1247)*a(n-18) +(-186/1247)*a(n-19) -18391/1247', 'a(n-14) +(993/1247)*a(n-15) +(967/1247)*a(n-16) +(1995/1247)*a(n-17) +(24/1247)*a(n-18) +(-1712/1247)*a(n-19) -19167/1247', 'a(n-9) +(-1813/1247)*a(n-15) +(-241/1247)*a(n-16) +(-3115/1247)*a(n-17) +(-300/1247)*a(n-18) +(2695/1247)*a(n-19) +5775/1247', 'a(n-8) +(-902/1247)*a(n-15) +(-1446/1247)*a(n-16) +(2509/1247)*a(n-17) +(-553/1247)*a(n-18) +(-1288/1247)*a(n-19) -5254/1247', 'a(n-19)^2 +(-492/1247)*a(n-15) +(1932/1247)*a(n-16) +(-672/1247)*a(n-17) +(-1662/1247)*a(n-18) +(-4897/1247)*a(n-19) +3936/1247', 'a(n-18)*a(n-19) +(-897/1247)*a(n-15) +(1515/1247)*a(n-16) +(-39/1247)*a(n-17) +(-5296/1247)*a(n-18) +(-3385/1247)*a(n-19) +12164/1247', 'a(n-13) +(352/1247)*a(n-15) +(1203/1247)*a(n-16) +(-1557/1247)*a(n-17) +(-1457/1247)*a(n-18) +(1263/1247)*a(n-19) -5310/1247', 'a(n-10) +(2170/1247)*a(n-15) +(-583/1247)*a(n-16) +(1504/1247)*a(n-17) +(335/1247)*a(n-18) +(-1035/1247)*a(n-19) -23595/1247', 'a(n-19)*a(n-20) +(9/8)*a(n-17) +(-25/8)*a(n-19) +(-25/8)*a(n-20) +4', 'a(n-12) +(-2/23)*a(n-18) +(26/23)*a(n-19) +(-60/23)*a(n-20) -5', 'a(n-20)^2 +(3/2)*a(n-17) +(-12/23)*a(n-18) +(-33/46)*a(n-19) +(-191/46)*a(n-20)', 'a(n-19)^2 +(-18/23)*a(n-18) +(-157/23)*a(n-19) +(12/23)*a(n-20) +12', 'a(n-7) +(-5/8)*a(n-17) +(-5/23)*a(n-18) +(-653/184)*a(n-19) +(571/184)*a(n-20)', 'a(n-5) +(-15/8)*a(n-17) +(72/23)*a(n-18) +(-703/184)*a(n-19) +(-223/184)*a(n-20)', 'a(n-14) +a(n-17) +(-29/23)*a(n-18) +(-37/23)*a(n-19) +(27/23)*a(n-20) -2', 'a(n-1) -3*a(n-17) +(-45/23)*a(n-18) +(-13/23)*a(n-19) +(53/23)*a(n-20) +6', 'a(n-8) +(5/2)*a(n-17) +(17/23)*a(n-18) +(-5/46)*a(n-19) +(-61/46)*a(n-20) -20', 'a(n-11) +(-1/4)*a(n-17) +(26/23)*a(n-18) +(-225/92)*a(n-19) +(15/92)*a(n-20) -5']
A008472: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

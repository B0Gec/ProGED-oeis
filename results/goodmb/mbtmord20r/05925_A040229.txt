
orders_used: [2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4, 4, 4, 5, 4, 3, 6, 5, 4, 3, 7, 6, 5, 4, 8, 7, 6, 8, 8, 9, 8, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:5926/10000, seq_id:A040229, order:20 took:
 73.7 seconds, i.e. 1.23 minutes or 0.02 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 2.
eqs_explicit:
['a(n) = 52/7 - 3*a(n-13)/7']
non_linears:
['a(n)*a(n-2)^2 -8*a(n)*a(n-2) -a(n-2)^2 +7*a(n) +8*a(n-2) -7', 'a(n-1)^3 -38*a(n-1)^2 +(-10/3)*a(n)*a(n-2) +(10/3)*a(n) +247*a(n-1) +(10/3)*a(n-2) -640/3', 'a(n)*n*a(n-2) -a(n)*n -6*a(n)*a(n-2) -n*a(n-2) +6*a(n) +n +6*a(n-2) -6', 'a(n-1)*a(n-2)^2 +(-5/6)*a(n)*a(n-2) -7*a(n-1)*a(n-2) -a(n-2)^2 +(5/6)*a(n) +6*a(n-1) +(47/6)*a(n-2) -41/6', 'a(n-1)^2*a(n-2) -a(n-1)^2 +(5/6)*a(n)*a(n-2) -8*a(n-1)*a(n-2) +(-5/6)*a(n) +8*a(n-1) +(37/6)*a(n-2) -37/6', 'a(n)*a(n-1) +(5/23)*a(n-1)^2 +(-65/69)*a(n)*a(n-2) +a(n-1)*a(n-2) +(-4/69)*a(n) +(-201/23)*a(n-1) +(-4/69)*a(n-2) +523/69', 'n*a(n-1) +(-6/23)*a(n-1)^2 +(131/828)*a(n)*a(n-2) +(-2/5)*a(n-1)*a(n-2) +(-131/828)*a(n) -n +(-289/115)*a(n-1) +(1001/4140)*a(n-2) +12139/4140', 'a(n-2)^3 +(-11/51)*a(n)*a(n-2) +(-276/17)*n*a(n-2) +(-106/17)*a(n-1)*a(n-2) +(-598/17)*a(n-2)^2 +(11/51)*a(n) +(276/17)*n +(106/17)*a(n-1) +(18398/51)*a(n-2) -16655/51', 'a(n)*a(n-3) -a(n) -a(n-3) +1', 'a(n-1)*a(n-3)^2 -8*a(n-1)*a(n-3) -a(n-3)^2 +7*a(n-1) +8*a(n-3) -7', 'a(n-1)^2*a(n-3) -a(n-1)^2 -8*a(n-1)*a(n-3) +8*a(n-1) +7*a(n-3) -7', 'a(n-2)^3 -38*a(n-2)^2 +(-10/3)*a(n-1)*a(n-3) +(10/3)*a(n-1) +247*a(n-2) +(10/3)*a(n-3) -640/3', 'a(n-2)*a(n-3)^2 +(-5/6)*a(n-1)*a(n-3) -7*a(n-2)*a(n-3) -a(n-3)^2 +(5/6)*a(n-1) +6*a(n-2) +(47/6)*a(n-3) -41/6', 'a(n-2)^2*a(n-3) -a(n-2)^2 +(5/6)*a(n-1)*a(n-3) -8*a(n-2)*a(n-3) +(-5/6)*a(n-1) +8*a(n-2) +(37/6)*a(n-3) -37/6', 'a(n-1)*a(n-2) +(5/23)*a(n-2)^2 +(-65/69)*a(n-1)*a(n-3) +a(n-2)*a(n-3) +(-4/69)*a(n-1) +(-201/23)*a(n-2) +(-4/69)*a(n-3) +523/69', 'a(n)*a(n-2) +(6/23)*a(n-2)^2 +(-3/23)*a(n-1)*a(n-3) +(6/5)*a(n-2)*a(n-3) -a(n) +(3/23)*a(n-1) +(-1183/115)*a(n-2) +(-123/115)*a(n-3) +1138/115', 'a(n-1)^3 -38*a(n-1)^2 +(20/23)*a(n-2)^2 +(-10/23)*a(n-1)*a(n-3) +4*a(n-2)*a(n-3) +(5691/23)*a(n-1) +(-712/23)*a(n-2) +(-82/23)*a(n-3) -4148/23', 'n*a(n-2) +(-6/23)*a(n-2)^2 +(131/828)*a(n-1)*a(n-3) +(-2/5)*a(n-2)*a(n-3) -n +(-131/828)*a(n-1) +(-404/115)*a(n-2) +(1001/4140)*a(n-3) +16279/4140', 'a(n-1)*a(n-4) -a(n-1) -a(n-4) +1', 'a(n)*a(n-3) -a(n) -a(n-3) +1', 'a(n-2)*a(n-4)^2 -8*a(n-2)*a(n-4) -a(n-4)^2 +7*a(n-2) +8*a(n-4) -7', 'a(n-3)*a(n-4)^2 +(-5/6)*a(n-2)*a(n-4) -7*a(n-3)*a(n-4) -a(n-4)^2 +(5/6)*a(n-2) +6*a(n-3) +(47/6)*a(n-4) -41/6', 'a(n-4)^3 +(-276/17)*n*a(n-4) +(-11/51)*a(n-2)*a(n-4) +(-106/17)*a(n-3)*a(n-4) +(-598/17)*a(n-4)^2 +(276/17)*n +(11/51)*a(n-2) +(106/17)*a(n-3) +(20054/51)*a(n-4) -18311/51', 'a(n-2)*a(n-5) -a(n-2) -a(n-5) +1', 'a(n-1)*a(n-4) -a(n-1) -a(n-4) +1', 'a(n)*a(n-3) -a(n) -a(n-3) +1', 'a(n-3)*a(n-6) -a(n-3) -a(n-6) +1', 'a(n-2)*a(n-5) -a(n-2) -a(n-5) +1', 'a(n-1)*a(n-4) -a(n-1) -a(n-4) +1', 'a(n)*a(n-3) -a(n) -a(n-3) +1', 'a(n-4)*a(n-7) -a(n-4) -a(n-7) +1', 'a(n-3)*a(n-6) -a(n-3) -a(n-6) +1', 'a(n-2)*a(n-5) -a(n-2) -a(n-5) +1', 'a(n-1)*a(n-4) -a(n-1) -a(n-4) +1', 'a(n-5)*a(n-8) -a(n-5) -a(n-8) +1', 'a(n-4)*a(n-7) -a(n-4) -a(n-7) +1', 'a(n-3)*a(n-6) -a(n-3) -a(n-6) +1', 'a(n-6)*a(n-7) +(408/257)*a(n-3) +(168/257)*a(n-4) +(492/257)*a(n-5) +(205/257)*a(n-6) +(-1379/257)*a(n-7) +(228/257)*a(n-8) -6619/257', 'a(n-6)^2 +(33/1028)*a(n-3) +(195/1028)*a(n-4) +(1287/1028)*a(n-5) +(-8009/1028)*a(n-6) +(873/1028)*a(n-7) +(135/257)*a(n-8) -2421/514', 'a(n-6)*a(n-9) -a(n-6) -a(n-9) +1', 'a(n-5)*a(n-8) -a(n-5) -a(n-8) +1', 'a(n-6)*a(n-8) +(-16/5)*a(n-5) -9*a(n-6) +(-4/5)*a(n-7) -9*a(n-8) +(-16/5)*a(n-9) +441/5', 'a(n-7)^2 +(4/9)*a(n-5) +(10/9)*a(n-6) +(-71/9)*a(n-7) +(10/9)*a(n-8) +(4/9)*a(n-9) -46/9', 'a(n-2) +(-116/45)*a(n-5) +(-58/9)*a(n-6) +(-29/45)*a(n-7) +(-58/9)*a(n-8) +(-116/45)*a(n-9) +3116/45', 'a(n-6)^2 +(226/99)*a(n-5) +(-857/99)*a(n-6) +(34/99)*a(n-7) +(160/99)*a(n-8) +(-4/9)*a(n-9) -358/99', 'a(n-5)*a(n-6) +(-61/99)*a(n-5) +(131/99)*a(n-6) +(32/99)*a(n-7) +(500/99)*a(n-8) +(28/9)*a(n-9) -5549/99', 'a(n-5)*a(n-7) +(-959/55)*a(n-5) +(52/11)*a(n-6) +(-191/55)*a(n-7) +(-128/11)*a(n-8) +(16/5)*a(n-9) +4259/55', 'a(n-7)*a(n-8) +(1312/99)*a(n-5) +(-500/99)*a(n-6) +(-401/99)*a(n-7) +(751/99)*a(n-8) +(-28/9)*a(n-9) -4513/99', 'a(n-7)*a(n-10) -a(n-7) -a(n-10) +1', 'a(n-7)^2 +(-5911/787)*a(n-7) +(720/787)*a(n-8) +(-600/787)*a(n-9) +(165/787)*a(n-10) +2529/787', 'a(n-6) +(-395/787)*a(n-7) +(-197/787)*a(n-8) +(820/787)*a(n-9) +(-451/1574)*a(n-10) -4709/1574', 'a(n-5) +(318/787)*a(n-7) +(840/787)*a(n-8) +(87/787)*a(n-9) +(385/1574)*a(n-10) -17709/1574', 'n +(367/787)*a(n-7) +(-70/787)*a(n-8) +(-204/787)*a(n-9) +(427/1574)*a(n-10) -22331/1574', 'a(n-8)*a(n-9) +(1260/787)*a(n-7) +(-577/787)*a(n-8) +(-4897/787)*a(n-9) +(540/787)*a(n-10) -4673/787', 'a(n-8)^2 +(1050/787)*a(n-7) +(-6121/787)*a(n-8) +(510/787)*a(n-9) +(450/787)*a(n-10) -2976/787', 'a(n-9)^2 +(-1260/787)*a(n-7) +(-210/787)*a(n-8) +(-6121/787)*a(n-9) +(-540/787)*a(n-10) +14904/787', 'a(n-4) +(6660/787)*a(n-7) +(1110/787)*a(n-8) +(-925/787)*a(n-9) +(2517/787)*a(n-10) -50109/787', 'a(n-2) +(-2233/787)*a(n-7) +(-4176/787)*a(n-8) +(3480/787)*a(n-9) +(-957/787)*a(n-10) +16497/787', 'a(n-5) +(-3/7)*a(n-11) -4/7', 'a(n-11)^2 -16*a(n-11) +15', 'a(n-1) +(-29/14)*a(n-11) +15/14', 'a(n-10)*a(n-11) -a(n-10) -a(n-11) +1', 'a(n-9)*a(n-11) -a(n-9) -a(n-11) +1', 'a(n-6) +(-3/7)*a(n-12) -4/7', 'a(n-12)^2 -16*a(n-12) +15', 'a(n-2) +(-29/14)*a(n-12) +15/14', 'a(n-10)*a(n-12) -a(n-10) -a(n-12) +1', 'a(n-7) +(-3/7)*a(n-13) -4/7', 'a(n-13)^2 -16*a(n-13) +15', 'a(n-10) +(3/7)*a(n-13) -52/7', 'a(n) +(3/7)*a(n-13) -52/7']
A040229: 
a(n) = 52/7 - 3*a(n-13)/7
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

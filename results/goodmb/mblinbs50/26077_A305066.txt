
orders_used: [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
While total time consumed by now, scale:26078/27236, seq_id:A305066, order:20 took:
 49.2 seconds, i.e. 0.82 minutes or 0.014 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
non_linears:
['a(n) -2*a(n-1) -120', 'a(n-1) -2*a(n-2) -120', 'a(n) -4*a(n-2) -360', 'a(n-2) -2*a(n-3) -120', 'a(n-1) -4*a(n-3) -360', 'a(n) -8*a(n-3) -840', 'a(n-3) -2*a(n-4) -120', 'a(n-2) -4*a(n-4) -360', 'a(n-1) -8*a(n-4) -840', 'a(n) -16*a(n-4) -1800', 'a(n-4) -2*a(n-5) -120', 'a(n-3) -4*a(n-5) -360', 'a(n-2) -8*a(n-5) -840', 'a(n-1) -16*a(n-5) -1800', 'a(n) -32*a(n-5) -3720', 'a(n-5) -2*a(n-6) -120', 'a(n-4) -4*a(n-6) -360', 'a(n-3) -8*a(n-6) -840', 'a(n-2) -16*a(n-6) -1800', 'a(n-1) -32*a(n-6) -3720', 'a(n) -64*a(n-6) -7560', 'a(n-6) -2*a(n-7) -120', 'a(n-5) -4*a(n-7) -360', 'a(n-4) -8*a(n-7) -840', 'a(n-3) -16*a(n-7) -1800', 'a(n-2) -32*a(n-7) -3720', 'a(n-1) -64*a(n-7) -7560', 'a(n) -128*a(n-7) -15240', 'a(n-7) -2*a(n-8) -120', 'a(n-6) -4*a(n-8) -360', 'a(n-5) -8*a(n-8) -840', 'a(n-4) -16*a(n-8) -1800', 'a(n-3) -32*a(n-8) -3720', 'a(n-2) -64*a(n-8) -7560', 'a(n-1) -128*a(n-8) -15240', 'a(n) -256*a(n-8) -30600', 'a(n-8) -2*a(n-9) -120', 'a(n-7) -4*a(n-9) -360', 'a(n-6) -8*a(n-9) -840', 'a(n-5) -16*a(n-9) -1800', 'a(n-4) -32*a(n-9) -3720', 'a(n-3) -64*a(n-9) -7560', 'a(n-2) -128*a(n-9) -15240', 'a(n-1) -256*a(n-9) -30600', 'a(n) -512*a(n-9) -61320', 'a(n-9) -2*a(n-10) -120', 'a(n-8) -4*a(n-10) -360', 'a(n-7) -8*a(n-10) -840', 'a(n-6) -16*a(n-10) -1800', 'a(n-5) -32*a(n-10) -3720', 'a(n-4) -64*a(n-10) -7560', 'a(n-3) -128*a(n-10) -15240', 'a(n-2) -256*a(n-10) -30600', 'a(n-1) -512*a(n-10) -61320', 'a(n) -1024*a(n-10) -122760', 'a(n-10) -2*a(n-11) -120', 'a(n-9) -4*a(n-11) -360', 'a(n-8) -8*a(n-11) -840', 'a(n-7) -16*a(n-11) -1800', 'a(n-6) -32*a(n-11) -3720', 'a(n-5) -64*a(n-11) -7560', 'a(n-4) -128*a(n-11) -15240', 'a(n-3) -256*a(n-11) -30600', 'a(n-2) -512*a(n-11) -61320', 'a(n-1) -1024*a(n-11) -122760', 'a(n-11) -2*a(n-12) -120', 'a(n-10) -4*a(n-12) -360', 'a(n-9) -8*a(n-12) -840', 'a(n-8) -16*a(n-12) -1800', 'a(n-7) -32*a(n-12) -3720', 'a(n-6) -64*a(n-12) -7560', 'a(n-5) -128*a(n-12) -15240', 'a(n-4) -256*a(n-12) -30600', 'a(n-3) -512*a(n-12) -61320', 'a(n-2) -1024*a(n-12) -122760', 'a(n-12) -2*a(n-13) -120', 'a(n-11) -4*a(n-13) -360', 'a(n-10) -8*a(n-13) -840', 'a(n-9) -16*a(n-13) -1800', 'a(n-8) -32*a(n-13) -3720', 'a(n-7) -64*a(n-13) -7560', 'a(n-6) -128*a(n-13) -15240', 'a(n-5) -256*a(n-13) -30600', 'a(n-4) -512*a(n-13) -61320', 'a(n-3) -1024*a(n-13) -122760', 'a(n-13) -2*a(n-14) -120', 'a(n-12) -4*a(n-14) -360', 'a(n-11) -8*a(n-14) -840', 'a(n-10) -16*a(n-14) -1800', 'a(n-9) -32*a(n-14) -3720', 'a(n-8) -64*a(n-14) -7560', 'a(n-7) -128*a(n-14) -15240', 'a(n-6) -256*a(n-14) -30600', 'a(n-5) -512*a(n-14) -61320', 'a(n-4) -1024*a(n-14) -122760', 'a(n-14) -2*a(n-15) -120', 'a(n-13) -4*a(n-15) -360', 'a(n-12) -8*a(n-15) -840', 'a(n-11) -16*a(n-15) -1800', 'a(n-10) -32*a(n-15) -3720', 'a(n-9) -64*a(n-15) -7560', 'a(n-8) -128*a(n-15) -15240', 'a(n-7) -256*a(n-15) -30600', 'a(n-6) -512*a(n-15) -61320', 'a(n-5) -1024*a(n-15) -122760', 'a(n-15) -2*a(n-16) -120', 'a(n-14) -4*a(n-16) -360', 'a(n-13) -8*a(n-16) -840', 'a(n-12) -16*a(n-16) -1800', 'a(n-11) -32*a(n-16) -3720', 'a(n-10) -64*a(n-16) -7560', 'a(n-9) -128*a(n-16) -15240', 'a(n-8) -256*a(n-16) -30600', 'a(n-7) -512*a(n-16) -61320', 'a(n-6) -1024*a(n-16) -122760', 'a(n-16) -2*a(n-17) -120', 'a(n-15) -4*a(n-17) -360', 'a(n-14) -8*a(n-17) -840', 'a(n-13) -16*a(n-17) -1800', 'a(n-12) -32*a(n-17) -3720', 'a(n-11) -64*a(n-17) -7560', 'a(n-10) -128*a(n-17) -15240', 'a(n-9) -256*a(n-17) -30600', 'a(n-8) -512*a(n-17) -61320', 'a(n-7) -1024*a(n-17) -122760', 'a(n-17) -2*a(n-18) -120', 'a(n-16) -4*a(n-18) -360', 'a(n-15) -8*a(n-18) -840', 'a(n-14) -16*a(n-18) -1800', 'a(n-13) -32*a(n-18) -3720', 'a(n-12) -64*a(n-18) -7560', 'a(n-11) -128*a(n-18) -15240', 'a(n-10) -256*a(n-18) -30600', 'a(n-9) -512*a(n-18) -61320', 'a(n-8) -1024*a(n-18) -122760', 'a(n-18) -2*a(n-19) -120', 'a(n-17) -4*a(n-19) -360', 'a(n-16) -8*a(n-19) -840', 'a(n-15) -16*a(n-19) -1800', 'a(n-14) -32*a(n-19) -3720', 'a(n-13) -64*a(n-19) -7560', 'a(n-12) -128*a(n-19) -15240', 'a(n-11) -256*a(n-19) -30600', 'a(n-10) -512*a(n-19) -61320', 'a(n-9) -1024*a(n-19) -122760', 'a(n-19) -2*a(n-20) -120', 'a(n-18) -4*a(n-20) -360', 'a(n-17) -8*a(n-20) -840', 'a(n-16) -16*a(n-20) -1800', 'a(n-15) -32*a(n-20) -3720', 'a(n-14) -64*a(n-20) -7560', 'a(n-13) -128*a(n-20) -15240', 'a(n-12) -256*a(n-20) -30600', 'a(n-11) -512*a(n-20) -61320', 'a(n-10) -1024*a(n-20) -122760']
A305066: 
MB not reconst
truth: 
a(n) = 3*a(n - 1) + -2*a(n - 2),  
a(0) = 114, a(1) = 348

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

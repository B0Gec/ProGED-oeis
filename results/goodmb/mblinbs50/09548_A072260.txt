
orders_used: [2, 3, 3, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18]
While total time consumed by now, scale:9549/27236, seq_id:A072260, order:20 took:
 27.7 seconds, i.e. 0.46 minutes or 0.008 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 2.
non_linears:
['a(n) -8*a(n-1) +16*a(n-2) +3', 'a(n-1) -8*a(n-2) +16*a(n-3) +3', 'a(n) -48*a(n-2) +128*a(n-3) +27', 'a(n-2) -8*a(n-3) +16*a(n-4) +3', 'a(n-1) -48*a(n-3) +128*a(n-4) +27', 'a(n) -256*a(n-3) +768*a(n-4) +171', 'a(n-3) -8*a(n-4) +16*a(n-5) +3', 'a(n-2) -48*a(n-4) +128*a(n-5) +27', 'a(n-1) -256*a(n-4) +768*a(n-5) +171', 'a(n) -1280*a(n-4) +4096*a(n-5) +939', 'a(n-4) -8*a(n-5) +16*a(n-6) +3', 'a(n-3) -48*a(n-5) +128*a(n-6) +27', 'a(n-2) -256*a(n-5) +768*a(n-6) +171', 'a(n-1) -1280*a(n-5) +4096*a(n-6) +939', 'a(n) -6144*a(n-5) +20480*a(n-6) +4779', 'a(n-5) -8*a(n-6) +16*a(n-7) +3', 'a(n-4) -48*a(n-6) +128*a(n-7) +27', 'a(n-3) -256*a(n-6) +768*a(n-7) +171', 'a(n-2) -1280*a(n-6) +4096*a(n-7) +939', 'a(n-1) -6144*a(n-6) +20480*a(n-7) +4779', 'a(n) -28672*a(n-6) +98304*a(n-7) +23211', 'a(n-6) -8*a(n-7) +16*a(n-8) +3', 'a(n-5) -48*a(n-7) +128*a(n-8) +27', 'a(n-4) -256*a(n-7) +768*a(n-8) +171', 'a(n-3) -1280*a(n-7) +4096*a(n-8) +939', 'a(n-2) -6144*a(n-7) +20480*a(n-8) +4779', 'a(n-1) -28672*a(n-7) +98304*a(n-8) +23211', 'a(n) -131072*a(n-7) +458752*a(n-8) +109227', 'a(n-7) -8*a(n-8) +16*a(n-9) +3', 'a(n-6) -48*a(n-8) +128*a(n-9) +27', 'a(n-5) -256*a(n-8) +768*a(n-9) +171', 'a(n-4) -1280*a(n-8) +4096*a(n-9) +939', 'a(n-3) -6144*a(n-8) +20480*a(n-9) +4779', 'a(n-2) -28672*a(n-8) +98304*a(n-9) +23211', 'a(n-1) -131072*a(n-8) +458752*a(n-9) +109227', 'a(n) -589824*a(n-8) +2097152*a(n-9) +502443', 'a(n-8) -8*a(n-9) +16*a(n-10) +3', 'a(n-7) -48*a(n-9) +128*a(n-10) +27', 'a(n-6) -256*a(n-9) +768*a(n-10) +171', 'a(n-5) -1280*a(n-9) +4096*a(n-10) +939', 'a(n-4) -6144*a(n-9) +20480*a(n-10) +4779', 'a(n-3) -28672*a(n-9) +98304*a(n-10) +23211', 'a(n-2) -131072*a(n-9) +458752*a(n-10) +109227', 'a(n-1) -589824*a(n-9) +2097152*a(n-10) +502443', 'a(n) -2621440*a(n-9) +9437184*a(n-10) +2271915', 'a(n-9) -8*a(n-10) +16*a(n-11) +3', 'a(n-8) -48*a(n-10) +128*a(n-11) +27', 'a(n-7) -256*a(n-10) +768*a(n-11) +171', 'a(n-6) -1280*a(n-10) +4096*a(n-11) +939', 'a(n-5) -6144*a(n-10) +20480*a(n-11) +4779', 'a(n-4) -28672*a(n-10) +98304*a(n-11) +23211', 'a(n-3) -131072*a(n-10) +458752*a(n-11) +109227', 'a(n-2) -589824*a(n-10) +2097152*a(n-11) +502443', 'a(n-1) -2621440*a(n-10) +9437184*a(n-11) +2271915', 'a(n) -11534336*a(n-10) +41943040*a(n-11) +10136235', 'a(n-10) -8*a(n-11) +16*a(n-12) +3', 'a(n-9) -48*a(n-11) +128*a(n-12) +27', 'a(n-8) -256*a(n-11) +768*a(n-12) +171', 'a(n-7) -1280*a(n-11) +4096*a(n-12) +939', 'a(n-6) -6144*a(n-11) +20480*a(n-12) +4779', 'a(n-5) -28672*a(n-11) +98304*a(n-12) +23211', 'a(n-4) -131072*a(n-11) +458752*a(n-12) +109227', 'a(n-3) -589824*a(n-11) +2097152*a(n-12) +502443', 'a(n-2) -2621440*a(n-11) +9437184*a(n-12) +2271915', 'a(n-1) -11534336*a(n-11) +41943040*a(n-12) +10136235', 'a(n-11) -8*a(n-12) +16*a(n-13) +3', 'a(n-10) -48*a(n-12) +128*a(n-13) +27', 'a(n-9) -256*a(n-12) +768*a(n-13) +171', 'a(n-8) -1280*a(n-12) +4096*a(n-13) +939', 'a(n-7) -6144*a(n-12) +20480*a(n-13) +4779', 'a(n-6) -28672*a(n-12) +98304*a(n-13) +23211', 'a(n-5) -131072*a(n-12) +458752*a(n-13) +109227', 'a(n-4) -589824*a(n-12) +2097152*a(n-13) +502443', 'a(n-3) -2621440*a(n-12) +9437184*a(n-13) +2271915', 'a(n-2) -11534336*a(n-12) +41943040*a(n-13) +10136235', 'a(n-12) -8*a(n-13) +16*a(n-14) +3', 'a(n-11) -48*a(n-13) +128*a(n-14) +27', 'a(n-10) -256*a(n-13) +768*a(n-14) +171', 'a(n-9) -1280*a(n-13) +4096*a(n-14) +939', 'a(n-8) -6144*a(n-13) +20480*a(n-14) +4779', 'a(n-7) -28672*a(n-13) +98304*a(n-14) +23211', 'a(n-6) -131072*a(n-13) +458752*a(n-14) +109227', 'a(n-5) -589824*a(n-13) +2097152*a(n-14) +502443', 'a(n-4) -2621440*a(n-13) +9437184*a(n-14) +2271915', 'a(n-3) -11534336*a(n-13) +41943040*a(n-14) +10136235', 'a(n-13) -8*a(n-14) +16*a(n-15) +3', 'a(n-12) -48*a(n-14) +128*a(n-15) +27', 'a(n-11) -256*a(n-14) +768*a(n-15) +171', 'a(n-10) -1280*a(n-14) +4096*a(n-15) +939', 'a(n-9) -6144*a(n-14) +20480*a(n-15) +4779', 'a(n-8) -28672*a(n-14) +98304*a(n-15) +23211', 'a(n-7) -131072*a(n-14) +458752*a(n-15) +109227', 'a(n-6) -589824*a(n-14) +2097152*a(n-15) +502443', 'a(n-5) -2621440*a(n-14) +9437184*a(n-15) +2271915', 'a(n-4) -11534336*a(n-14) +41943040*a(n-15) +10136235', 'a(n-14) -8*a(n-15) +16*a(n-16) +3', 'a(n-13) -48*a(n-15) +128*a(n-16) +27', 'a(n-12) -256*a(n-15) +768*a(n-16) +171', 'a(n-11) -1280*a(n-15) +4096*a(n-16) +939', 'a(n-10) -6144*a(n-15) +20480*a(n-16) +4779', 'a(n-9) -28672*a(n-15) +98304*a(n-16) +23211', 'a(n-15)^2 +21915*a(n-15) -108108*a(n-16) -75636', 'a(n-15)*a(n-16) +(18579/4)*a(n-15) -22902*a(n-16) -64251/4', 'a(n-8) -131072*a(n-15) +458752*a(n-16) +109227', 'a(n-7) -589824*a(n-15) +2097152*a(n-16) +502443', 'a(n-17)^2 -39*a(n-17) +198', 'a(n-16) +(-44/9)*a(n-17) -11/3', 'a(n-15) +(-208/9)*a(n-17) -79/3', 'a(n-14) +(-320/3)*a(n-17) -149', 'a(n-13) +(-4352/9)*a(n-17) -2303/3', 'a(n-11) +(-28672/3)*a(n-17) -17749', 'a(n-12) +(-19456/9)*a(n-17) -11263/3', 'a(n-8) -786432*a(n-17) -1660245', 'a(n-10) +(-376832/9)*a(n-17) -245759/3', 'a(n-9) +(-1638400/9)*a(n-17) -1114111/3', 'a(n-18) -6']
A072260: 
MB not reconst
truth: 
a(n) = 9*a(n - 1) + -24*a(n - 2) + 16*a(n - 3),  
a(0) = 6, a(1) = 33, a(2) = 165

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

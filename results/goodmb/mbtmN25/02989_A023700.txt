
orders_used: [17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 20, 19, 20, 20, 20, 20, 20, 20, 20, 20]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:2990/10000, seq_id:A023700, order:20 took:
 18.1 seconds, i.e. 0.3 minutes or 0.005 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 17.
eqs_explicit:
[]
non_linears:
['n +(-5/31)*a(n-11) +(5/31)*a(n-12) +(-41/217)*a(n-13) +(23/217)*a(n-14) +(-37/217)*a(n-15) +(19/217)*a(n-16) +(-20/217)*a(n-17) -2307/217', 'a(n-11)*a(n-17) +(-356/31)*a(n-11) +(1224/31)*a(n-12) +(-3104/93)*a(n-13) +(2390/93)*a(n-14) +(-782/31)*a(n-15) +(2128/93)*a(n-16) +(-7696/93)*a(n-17) +11378/93', 'n +(-1/27)*a(n-13) +(-1/27)*a(n-14) +(-1/27)*a(n-15) +(-1/27)*a(n-16) +(-1/27)*a(n-17) +(-1/27)*a(n-18) -41/3', 'a(n-13)*a(n-17) +(-4/21)*a(n-13) +(-319/21)*a(n-14) +(233/21)*a(n-15) +(-37/3)*a(n-16) +(-838/21)*a(n-17) +(-262/21)*a(n-18) +714', 'a(n-16)*a(n-18) +(1986/35)*a(n-13) -44*a(n-14) +(1384/35)*a(n-15) +(-2146/35)*a(n-16) +(229/7)*a(n-17) +(-2754/35)*a(n-18) -927/7', 'a(n-15)*a(n-17) +(112/5)*a(n-13) +(-396/35)*a(n-14) +(-94/7)*a(n-15) +(-419/35)*a(n-16) +(-1294/35)*a(n-17) +(-110/7)*a(n-18) +21807/35', 'a(n-14)*a(n-18) +(1006/21)*a(n-13) +(-1166/21)*a(n-14) +(571/21)*a(n-15) +(-605/21)*a(n-16) +(523/21)*a(n-17) +(-224/3)*a(n-18) +474/7', 'a(n-14)*a(n-16) +(1136/105)*a(n-13) +(-638/21)*a(n-14) +(419/105)*a(n-15) +(-778/15)*a(n-16) +(-38/21)*a(n-17) +(-184/105)*a(n-18) +969', 'a(n-16)^2 +(52/15)*a(n-13) +(12/7)*a(n-14) +(-214/105)*a(n-15) +(-6149/105)*a(n-16) +(-136/7)*a(n-17) +(824/105)*a(n-18) +20114/21', 'a(n-14)*a(n-15) +(54/7)*a(n-13) +(-3001/105)*a(n-14) +(-4331/105)*a(n-15) +(-64/7)*a(n-16) +(8/15)*a(n-17) +(-344/105)*a(n-18) +114427/105', 'a(n-11) +(-272/945)*a(n-13) +(52/945)*a(n-14) +(-8/135)*a(n-15) +(52/945)*a(n-16) +(-407/945)*a(n-17) +(106/945)*a(n-18) -3301/105', 'a(n-14)^2 +(-82/5)*a(n-13) +(-905/21)*a(n-14) +(-3548/105)*a(n-15) +(744/35)*a(n-16) +(-542/21)*a(n-17) +(2398/105)*a(n-18) +31004/21', 'a(n-13) -a(n-19) -27', 'n +(-38/581)*a(n-15) +(-6/581)*a(n-16) +(-36/581)*a(n-17) +(-8/581)*a(n-18) +(-45/581)*a(n-19) -8773/581', 'a(n-1) +(-125/581)*a(n-15) +(72/581)*a(n-16) +(-149/581)*a(n-17) +(96/581)*a(n-18) +(-41/581)*a(n-19) -37069/581', 'a(n-14) +(-445/581)*a(n-15) +(419/581)*a(n-16) +(-391/581)*a(n-17) +(365/581)*a(n-18) +(-634/581)*a(n-19) -6795/581', 'a(n-4) +(-543/2905)*a(n-15) +(587/2905)*a(n-16) +(-109/581)*a(n-17) +(8/2905)*a(n-18) +(-1117/2905)*a(n-19) -157974/2905', 'a(n-15)*a(n-18) +(-3999/245)*a(n-15) +(-1999/245)*a(n-16) +(243/49)*a(n-17) +(-13611/245)*a(n-18) +(2294/245)*a(n-19) +230728/245', 'a(n-17)^2 +(1088/249)*a(n-15) +(-1130/249)*a(n-16) +(-4667/83)*a(n-17) +(-5380/249)*a(n-18) +(2896/249)*a(n-19) +248590/249', 'a(n-19)^2 +(-5464/1743)*a(n-15) +(-4838/1743)*a(n-16) +(782/581)*a(n-17) +(-3352/1743)*a(n-18) +(-42095/1743)*a(n-19) +477682/1743', 'a(n-14) -a(n-20) -27', 'a(n-13) -a(n-19) -27', 'a(n-4) +(-5/29)*a(n-18) +(-8/29)*a(n-20) -1721/29', 'a(n-12) +(-11/29)*a(n-18) +(-6/29)*a(n-20) -1095/29', 'a(n-8) +(-11/29)*a(n-18) +(-6/29)*a(n-20) -1356/29', 'n +(-2/29)*a(n-17) +(-6/841)*a(n-18) +(-9/29)*a(n-19) +(2/841)*a(n-20) -10945/841', 'a(n-3) +(-5/29)*a(n-17) +(72/841)*a(n-18) +(-8/29)*a(n-19) +(-24/841)*a(n-20) -51157/841', 'a(n-11) +(-11/29)*a(n-17) +(54/841)*a(n-18) +(-6/29)*a(n-19) +(-18/841)*a(n-20) -32691/841', 'a(n-7) +(-11/29)*a(n-17) +(54/841)*a(n-18) +(-6/29)*a(n-19) +(-18/841)*a(n-20) -40260/841', 'a(n-9) +(1/29)*a(n-17) +(-26/841)*a(n-18) +(-49/58)*a(n-19) +(-263/1682)*a(n-20) -61497/1682']
A023700: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    


orders_used: [8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 11, 12, 12, 12, 12, 12, 12, 12, 12, 13, 12, 14, 13]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:9483/10000, seq_id:A059434, order:20 took:
 26.5 seconds, i.e. 0.44 minutes or 0.007 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 8.
eqs_explicit:
[]
non_linears:
['a(n-5)*a(n-6) +(-1990/287)*a(n-3) +(-430/41)*a(n-4) +(-7082/287)*a(n-5) +(813/287)*a(n-6) +(13770/287)*a(n-7) +(25975/287)*a(n-8) -13893/287', 'a(n-9)^2 +(-350/587)*a(n-5) +(19/587)*a(n-6) +(-104/587)*a(n-7) +(908/587)*a(n-8) +(-2452/587)*a(n-9) +2196/587', 'a(n-7)*a(n-9) +(-440/587)*a(n-5) +(-278/587)*a(n-6) +(-919/587)*a(n-7) +(1544/587)*a(n-8) +(-919/587)*a(n-9) +1637/587', 'n +(15/587)*a(n-5) +(-244/587)*a(n-6) +(-511/1174)*a(n-7) +(-799/1174)*a(n-8) +(663/1174)*a(n-9) -4505/587', 'a(n-8)*a(n-9) +(150/587)*a(n-5) +(495/587)*a(n-6) +(380/587)*a(n-7) +(-1647/587)*a(n-8) +(-3142/587)*a(n-9) +2497/587', 'a(n-6)*a(n-9) +(-920/587)*a(n-5) +(-688/587)*a(n-6) +(-374/587)*a(n-7) +(2588/587)*a(n-8) +(-4483/587)*a(n-9) +5504/587', 'a(n-8)^2 +(290/587)*a(n-5) +(957/587)*a(n-6) +(539/587)*a(n-7) +(-4006/587)*a(n-8) +(-4744/587)*a(n-9) +5258/587', 'a(n-7)*a(n-8) +(-50/587)*a(n-5) +(-165/587)*a(n-6) +(-1692/587)*a(n-7) +(-1212/587)*a(n-8) +(1830/587)*a(n-9) +1907/587', 'a(n-7)^2 +(-540/587)*a(n-5) +(-608/587)*a(n-6) +(-4303/587)*a(n-7) +(294/587)*a(n-8) +(3328/587)*a(n-9) +4864/587', 'a(n-5)*a(n-9) +(-2512/587)*a(n-5) +(985/587)*a(n-6) +(15/587)*a(n-7) +(3820/587)*a(n-8) +(-9377/587)*a(n-9) +10317/587', 'a(n-6)*a(n-8) +(320/587)*a(n-5) +(469/587)*a(n-6) +(1202/587)*a(n-7) +(-3631/587)*a(n-8) +(-5842/587)*a(n-9) +5053/587', 'a(n-6) +(4/19)*a(n-7) +(9/19)*a(n-8) +(-56/19)*a(n-9) +(9/19)*a(n-10) -32/19', 'a(n-10)^2 +(3/19)*a(n-7) +(2/19)*a(n-8) +(-4/19)*a(n-9) +(-74/19)*a(n-10) +52/19', 'a(n-8)*a(n-10) +(-6/19)*a(n-7) +(-23/19)*a(n-8) +(8/19)*a(n-9) +(-23/19)*a(n-10) +29/19', 'a(n-8)*a(n-9) +(-5/19)*a(n-7) +(-54/19)*a(n-8) +(-44/19)*a(n-9) +(60/19)*a(n-10) +59/19', 'n +(-8/19)*a(n-7) +(-17/38)*a(n-8) +(-23/38)*a(n-9) +(21/38)*a(n-10) -164/19', 'a(n-7)*a(n-10) +(-16/19)*a(n-7) +(2/19)*a(n-8) +(-4/19)*a(n-9) +(-131/19)*a(n-10) +128/19', 'a(n-7)*a(n-8) +(-49/19)*a(n-7) +(-39/19)*a(n-8) +(40/19)*a(n-9) +(-20/19)*a(n-10) +69/19', 'a(n-9)*a(n-10) +(15/19)*a(n-7) +(10/19)*a(n-8) +(-39/19)*a(n-9) +(-104/19)*a(n-10) +89/19', 'a(n-7)^2 +(-85/19)*a(n-7) +(-6/19)*a(n-8) +(12/19)*a(n-9) +(-234/19)*a(n-10) +300/19', 'a(n-3) +(-165/38)*a(n-7) +(21/19)*a(n-8) +(15/19)*a(n-9) +(61/38)*a(n-10) -138/19', 'a(n-11)^2 -3*a(n-11) +2', 'a(n-10)*a(n-11) -a(n-10) -a(n-11) +1', 'a(n-9)*a(n-11) -a(n-9) -3*a(n-11) +3', 'a(n-4) +4*a(n-9) -5*a(n-10) -23*a(n-11) +13', 'a(n-7) +(1/3)*a(n-9) +(-8/3)*a(n-10) +(5/3)*a(n-11) -8/3', 'a(n-10)^2 +(-1/3)*a(n-9) +(-10/3)*a(n-10) +(1/3)*a(n-11) +8/3', 'a(n-9)*a(n-10) +(-8/3)*a(n-9) +(-8/3)*a(n-10) +(5/3)*a(n-11) +13/3', 'a(n-8) +(2/3)*a(n-9) +(-4/3)*a(n-10) +(-17/3)*a(n-11) +14/3', 'a(n-6) +(-10/3)*a(n-9) +(5/3)*a(n-10) +(7/3)*a(n-11) -10/3', 'a(n-3) +(3/2)*a(n-9) +(-17/2)*a(n-10) +(27/2)*a(n-11) -24', 'a(n-12)^2 -3*a(n-12) +2', 'a(n-11)^2 -3*a(n-11) +2', 'a(n-10) +a(n-11) -a(n-12) -2', 'a(n-9) -2*a(n-11) -5*a(n-12) +6', 'a(n-8) -3*a(n-11) +2*a(n-12) -2', 'n -a(n-11) -2*a(n-12) -9', 'a(n-11)*a(n-12) -a(n-11) -a(n-12) +1', 'a(n-7) +5*a(n-11) -a(n-12) -10', 'a(n-6) -6*a(n-11) -15*a(n-12) +20', 'a(n-5) -9*a(n-11) -19*a(n-12) +21', 'a(n-13) -1', 'a(n-12)^2 -3*a(n-12) +2', 'a(n-14) -1', 'a(n-13) -1']
A059434: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

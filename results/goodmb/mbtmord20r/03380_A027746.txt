
orders_used: [1, 2, 1, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 7, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 9, 9, 8, 9, 9, 9, 9, 9, 9, 9, 10, 9, 8, 10, 10]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:3381/10000, seq_id:A027746, order:20 took:
 33.0 seconds, i.e. 0.55 minutes or 0.009 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
eqs_explicit:
['a(n) = 9*a(n-10)/23 - 2*a(n-9)/23 + 7*a(n-8)/23 + 4*a(n-7)/23 + 12/23']
non_linears:
['a(n)*a(n-1)^2 -5*a(n)*a(n-1) -2*a(n-1)^2 +6*a(n) +10*a(n-1) -12', 'a(n-1)*a(n-2)^2 -5*a(n-1)*a(n-2) -2*a(n-2)^2 +6*a(n-1) +10*a(n-2) -12', 'a(n)*a(n-1)^2 -5*a(n)*a(n-1) -2*a(n-1)^2 +6*a(n) +10*a(n-1) -12', 'a(n)*a(n-1)*a(n-2) -2*a(n)*a(n-1) -2*a(n)*a(n-2) -2*a(n-1)*a(n-2) +4*a(n) +4*a(n-1) +4*a(n-2) -8', 'a(n-2)*a(n-3)^2 -5*a(n-2)*a(n-3) -2*a(n-3)^2 +6*a(n-2) +10*a(n-3) -12', 'a(n-1)*a(n-2)^2 -5*a(n-1)*a(n-2) -2*a(n-2)^2 +6*a(n-1) +10*a(n-2) -12', 'a(n-2)^2*a(n-3) -2*a(n-2)^2 -9*a(n-2)*a(n-3) +18*a(n-2) +14*a(n-3) -28', 'a(n-2)^3 -10*a(n-2)^2 -8*a(n-2)*a(n-3) +47*a(n-2) +16*a(n-3) -62', 'a(n)*a(n-2) +(-1/2)*a(n-2)^2 +2*a(n-2)*a(n-3) -2*a(n) +(-7/2)*a(n-2) -4*a(n-3) +9', 'a(n-1)*a(n-2)*a(n-3) -2*a(n-1)*a(n-2) -2*a(n-1)*a(n-3) -2*a(n-2)*a(n-3) +4*a(n-1) +4*a(n-2) +4*a(n-3) -8', 'a(n-1)*a(n-3)^2 +4*n*a(n-3) -7*a(n-1)*a(n-3) -4*a(n-2)*a(n-3) -8*a(n-3)^2 -8*n +10*a(n-1) +8*a(n-2) +32*a(n-3) -32', 'a(n-3)^3 -16*n*a(n-3) +4*a(n-1)*a(n-3) +16*a(n-2)*a(n-3) +12*a(n-3)^2 +32*n -8*a(n-1) -32*a(n-2) -39*a(n-3) +22', 'n*a(n-3)^2 -27*n*a(n-3) +6*a(n-1)*a(n-3) +22*a(n-2)*a(n-3) +22*a(n-3)^2 +50*n -12*a(n-1) -44*a(n-2) -56*a(n-3) +24', 'a(n-3)*a(n-4)^2 -5*a(n-3)*a(n-4) -2*a(n-4)^2 +6*a(n-3) +10*a(n-4) -12', 'a(n-4)^3 +2*a(n-1)*a(n-4) -3*a(n-2)*a(n-4) +(6/5)*a(n-3)*a(n-4) +(-21/2)*a(n-4)^2 -4*a(n-1) +6*a(n-2) +(-12/5)*a(n-3) +(271/10)*a(n-4) -101/5', 'a(n-2)*a(n-4)^2 +(-1/2)*a(n-1)*a(n-4) +(-21/4)*a(n-2)*a(n-4) +(-3/10)*a(n-3)*a(n-4) +(-19/8)*a(n-4)^2 +a(n-1) +(13/2)*a(n-2) +(3/5)*a(n-3) +(619/40)*a(n-4) -429/20', 'a(n-1)*a(n-4)^2 +(-25/4)*a(n-1)*a(n-4) +(-45/8)*a(n-2)*a(n-4) +(-3/4)*a(n-3)*a(n-4) +(-47/16)*a(n-4)^2 +(17/2)*a(n-1) +(45/4)*a(n-2) +(3/2)*a(n-3) +(539/16)*a(n-4) -445/8', 'a(n-1)^2 +(-19/12)*a(n-1)*a(n-4) +(15/8)*a(n-2)*a(n-4) +(1/4)*a(n-3)*a(n-4) +(5/16)*a(n-4)^2 +(-11/6)*a(n-1) +(-15/4)*a(n-2) +(-1/2)*a(n-3) +(-187/48)*a(n-4) +301/24', 'a(n)*a(n-4) -a(n-4)*a(n-5) -2*a(n) +2*a(n-5)', 'a(n-4)*a(n-5)^2 -5*a(n-4)*a(n-5) -2*a(n-5)^2 +6*a(n-4) +10*a(n-5) -12', 'a(n-3)*a(n-7) -2*a(n-3) -2*a(n-7) +4', 'a(n-7)*a(n-8) -2*a(n-7) -2*a(n-8) +4', 'a(n-4)*a(n-8) -2*a(n-4) -2*a(n-8) +4', 'a(n-3)*a(n-7) -2*a(n-3) -2*a(n-7) +4', 'a(n-6)*a(n-7) +2*a(n-3) -5*a(n-4) -6*a(n-5) -6*a(n-6) +6*a(n-7) +9*a(n-8) +3', 'a(n-4)*a(n-5) -a(n-3) +(1/7)*a(n-4) +(-3/7)*a(n-5) +(9/7)*a(n-6) +(-38/7)*a(n-7) +(-19/7)*a(n-8) +79/7', 'a(n-3)*a(n-4) +(-94/7)*a(n-4) +(-82/7)*a(n-5) +(-48/7)*a(n-6) +(121/7)*a(n-7) +(113/7)*a(n-8) +71/7', 'a(n-5)*a(n-6) -7*a(n-3) +(180/7)*a(n-4) +(188/7)*a(n-5) +(94/7)*a(n-6) +(-281/7)*a(n-7) +(-298/7)*a(n-8) +45/7', 'a(n-5)*a(n-8) +(-69/5)*a(n-3) +51*a(n-4) +(272/5)*a(n-5) +(153/5)*a(n-6) +(-396/5)*a(n-7) +(-433/5)*a(n-8) +47/5', 'a(n-8)^2 -12*a(n-3) +(310/7)*a(n-4) +(344/7)*a(n-5) +(186/7)*a(n-6) +(-482/7)*a(n-7) +(-535/7)*a(n-8) +46/7', 'a(n-5)*a(n-7) +(-3/5)*a(n-3) +(9/7)*a(n-4) +(-37/35)*a(n-5) +(27/35)*a(n-6) +(-184/35)*a(n-7) +(-57/35)*a(n-8) +293/35', 'a(n-8)*a(n-9) -2*a(n-8) -2*a(n-9) +4', 'a(n-5)*a(n-9) -2*a(n-5) -2*a(n-9) +4', 'a(n-7)*a(n-8) -2*a(n-7) -2*a(n-8) +4', 'a(n-4) +(-5/2)*a(n-5) -3*a(n-6) -2*a(n-7) +4*a(n-8) +(9/2)*a(n-9) -1/2', 'n +(-8/7)*a(n-5) +(-11/7)*a(n-6) +(-9/7)*a(n-7) +(3/7)*a(n-8) +(5/7)*a(n-9) -9/7', 'a(n-6)*a(n-9) +(33/2)*a(n-5) +13*a(n-6) +3*a(n-7) -24*a(n-8) +(-49/2)*a(n-9) +5/2', 'a(n-8)^2 +(-3/7)*a(n-5) +(-12/7)*a(n-6) +(-6/7)*a(n-7) +(-47/7)*a(n-8) +(15/7)*a(n-9) +99/7', 'a(n-5)^2 +(-36/7)*a(n-5) +(-4/7)*a(n-6) +(-2/7)*a(n-7) +(-46/7)*a(n-8) +(5/7)*a(n-9) +145/7', 'a(n-7)*a(n-9) +(19/7)*a(n-5) +(20/7)*a(n-6) +(-11/7)*a(n-7) +(-29/7)*a(n-8) +(-46/7)*a(n-9) +38/7', 'a(n-5)*a(n-8) +(-17/7)*a(n-5) +(-12/7)*a(n-6) +(-6/7)*a(n-7) +(-47/7)*a(n-8) +(15/7)*a(n-9) +127/7', 'a(n-9)*a(n-10) -2*a(n-9) -2*a(n-10) +4', 'a(n-8)*a(n-9) -2*a(n-8) -2*a(n-9) +4', 'a(n-7)*a(n-8) -2*a(n-7) -2*a(n-8) +4', 'a(n-3) +3*a(n-7) +2*a(n-8) +a(n-9) -3*a(n-10) -14', 'a(n) +(-4/23)*a(n-7) +(-7/23)*a(n-8) +(2/23)*a(n-9) +(-9/23)*a(n-10) -12/23']
A027746: 
a(n) = 9*a(n-10)/23 - 2*a(n-9)/23 + 7*a(n-8)/23 + 4*a(n-7)/23 + 12/23
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

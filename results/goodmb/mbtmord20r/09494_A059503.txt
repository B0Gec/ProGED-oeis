
orders_used: [9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:9495/10000, seq_id:A059503, order:20 took:
 28.5 seconds, i.e. 0.47 minutes or 0.008 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 9.
eqs_explicit:
['a(n) = 40*a(n-13)']
non_linears:
['n +(-172/2339)*a(n-5) +(-537/2339)*a(n-6) +(-682/2339)*a(n-7) +(-890/2339)*a(n-8) +(313/2339)*a(n-9) -15067/2339', 'a(n-7)*a(n-9) +(840/2339)*a(n-5) +(4472/2339)*a(n-6) +(-4883/2339)*a(n-7) +(5652/2339)*a(n-8) +(-24973/2339)*a(n-9) +3685/2339', 'a(n-7)*a(n-8) +(-280/2339)*a(n-5) +(1628/2339)*a(n-6) +(-10847/2339)*a(n-7) +(-8901/2339)*a(n-8) +(-252/2339)*a(n-9) +33077/2339', 'a(n-7)^2 +(-2432/2339)*a(n-5) +(240/2339)*a(n-6) +(-30259/2339)*a(n-7) +(-726/2339)*a(n-8) +(9974/2339)*a(n-9) +72644/2339', 'a(n-6)*a(n-7) +(3262/2339)*a(n-5) +(-3061/2339)*a(n-6) +(-5669/2339)*a(n-7) +(9318/2339)*a(n-8) +(-30278/2339)*a(n-9) +471/2339', 'a(n-6)*a(n-8) +(3503/2339)*a(n-5) +(316/2339)*a(n-6) +(6900/2339)*a(n-7) +(-10078/2339)*a(n-8) +(-25617/2339)*a(n-9) -7424/2339', 'n +(7/23)*a(n-7) +(-2/23)*a(n-8) +(10/23)*a(n-9) +(-47/23)*a(n-10) -218/23', 'a(n-8)*a(n-10) +(-16/23)*a(n-7) +(-71/23)*a(n-8) +(-36/23)*a(n-9) +(-1/23)*a(n-10) +265/23', 'a(n-8)*a(n-9) +(36/23)*a(n-7) +(-99/23)*a(n-8) +(-57/23)*a(n-9) +(-84/23)*a(n-10) +249/23', 'a(n-3) +(-6/23)*a(n-7) +(28/23)*a(n-8) +(182/23)*a(n-9) +(-331/23)*a(n-10) -260/23', 'a(n-6) +(167/23)*a(n-7) +(64/23)*a(n-8) +(255/23)*a(n-9) +(-681/23)*a(n-10) -637/23', 'a(n-4) +(139/23)*a(n-7) +(-43/23)*a(n-8) +(284/23)*a(n-9) +(-631/23)*a(n-10) -317/23', 'a(n-10)^2 +(-116/23)*a(n-7) +(-26/23)*a(n-8) +(-238/23)*a(n-9) +(401/23)*a(n-10) +478/23', 'a(n-9)*a(n-10) +(-164/23)*a(n-7) +(-32/23)*a(n-8) +(-415/23)*a(n-9) +(651/23)*a(n-10) +721/23', 'a(n-7)*a(n-10) +(-237/23)*a(n-7) +(-44/23)*a(n-8) +(-332/23)*a(n-9) +(645/23)*a(n-10) +793/23', 'a(n-7)*a(n-9) +(-247/23)*a(n-7) +(-28/23)*a(n-8) +(-481/23)*a(n-9) +(768/23)*a(n-10) +881/23', 'a(n-9)*a(n-11) -3*a(n-9) -3*a(n-11) +9', 'a(n-11)^2 +(-1/2)*a(n-9) +a(n-10) -4*a(n-11) +5/2', 'a(n-9)^2 -11*a(n-9) -6*a(n-10) +6*a(n-11) +30', 'a(n-10)*a(n-11) +(-1/2)*a(n-9) -2*a(n-10) -2*a(n-11) +11/2', 'a(n-9)*a(n-10) +(-9/2)*a(n-9) -6*a(n-10) +3*a(n-11) +33/2', 'n +(-1/8)*a(n-9) +(-1/4)*a(n-10) +(-3/4)*a(n-11) -75/8', 'a(n-8) +(1/8)*a(n-9) +(9/4)*a(n-10) +(-17/4)*a(n-11) -29/8', 'a(n-5) +(-21/8)*a(n-9) +(-5/4)*a(n-10) +(-7/4)*a(n-11) +65/8', 'a(n-10)^2 +(-3/4)*a(n-9) +(-13/2)*a(n-10) +(3/2)*a(n-11) +39/4', 'a(n-7) +(15/8)*a(n-9) +(-21/4)*a(n-10) +(5/4)*a(n-11) -11/8', 'a(n-12)^2 +2*a(n-11) -5*a(n-12)', 'n -a(n-12) -11', 'a(n-10) +2*a(n-11) -2*a(n-12) -5', 'a(n-9) +2*a(n-11) -4*a(n-12) -3', 'a(n-8) -9*a(n-11) +5*a(n-12) +8', 'a(n-6) +4*a(n-11) -7*a(n-12) -5', 'a(n-11)*a(n-12) -a(n-11) -3*a(n-12) +3', 'a(n-7) +8*a(n-11) -3*a(n-12) -22', 'a(n-5) +6*a(n-11) -13*a(n-12) -6', 'a(n-6) -7*a(n-13)', 'a(n) -40*a(n-13)']
A059503: 
a(n) = 40*a(n-13)
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

27987
ids_  ['A4', 'A12', 'A7395', 'A1477', 'A103303', 'A118760', 'A136602', 'A258070', 'A258071', 'A266279']
idsix ['A000004', 'A000012', 'A007395', 'A001477', 'A103303', 'A118760', 'A136602', 'A258070', 'A258071', 'A266279']
core_ids ['A000001', 'A000002', 'A000005', 'A000009', 'A000010', 'A000014', 'A000019', 'A000029', 'A000031', 'A000032']
14168
27236
50
['A000032', 'A000035', 'A000045', 'A000058', 'A000069', 'A000079', 'A000108', 'A000120', 'A000124', 'A000129', 'A000142', 'A000166', 'A000169', 'A000204', 'A000217', 'A000225', 'A000244', 'A000272', 'A000290', 'A000292', 'A000302', 'A000312', 'A000326', 'A000330', 'A000578', 'A000583', 'A000984', 'A001045', 'A001057', 'A001147', 'A001285', 'A001333', 'A001405', 'A001519', 'A001699', 'A001700', 'A001764', 'A001906', 'A001969', 'A002275', 'A002378', 'A002530', 'A002620', 'A004526', 'A005408', 'A005843', 'A006882', 'A006894', 'A010060', 'A070939']
['A32', 'A35', 'A45', 'A58', 'A69', 'A79', 'A108', 'A120', 'A124', 'A129', 'A142', 'A166', 'A169', 'A204', 'A217', 'A225', 'A244', 'A272', 'A290', 'A292', 'A302', 'A312', 'A326', 'A330', 'A578', 'A583', 'A984', 'A1045', 'A1057', 'A1147', 'A1285', 'A1333', 'A1405', 'A1519', 'A1699', 'A1700', 'A1764', 'A1906', 'A1969', 'A2275', 'A2378', 'A2530', 'A2620', 'A4526', 'A5408', 'A5843', 'A6882', 'A6894', 'A10060', 'A70939']

diof vs urb:
['A000058', 'A000069', 'A000108', 'A000120', 'A000169', 'A000272', 'A000312', 'A000984', 'A001285', 'A001405', 'A001699', 'A001700', 'A001764', 'A001969', 'A006894', 'A010060', 'A070939']
yes,            maybe,  yes,       maybe,      yes,     yes,        yes,        yes,        maybe,    maybe,     maybe,     yes,        yes,       maybe  ,   correct,    maybe,    maybe.

mb vs urb:
['A000069', 'A000120', 'A000169', 'A000272', 'A000312', 'A001285', 'A001699', 'A001764', 'A001969', 'A010060', 'A070939']
4 yes, look above.


A32: loop2(\(x,y).y, \(x,y).x + y, x, 2, 1)
    .. f(0) = 2,
    .. f(1) = l(0, 1, 3) = 1
    A32: loop2(\(x,y).y, \(x,y).x + y, 1, 2, 1) = loop2(\(x,y).y, \(x,y).x + y, 1, 2, 1) =
    .. f(2) = l(1, 1, 3) = l(0, 1, 4) = 1
    u_n+1 = f(u_n, v_n) = v_n; v_n+1 = g(u_n, v_n) = u_n + v_n
    u_0 = 2; v_0 = 1
    u_1 = 1; v_1 = 3
    this means a_n = a_{n-1} + a_{n-2} if you think about it.

A35: (x mod 2)
    correct
A45: loop2(\(x,y).x + y, \(x,y).x, x, 0, 1)
    u_n+1 = f(u_n, v_n) = u_n + v_n; v_n+1 = g(u_n, v_n) = u_n
    0 1
    1 0
    1 1
    2 1
    efectively fibonaci ... correct

A58: (1 + loop(\(x,y).(x * x) + x, x, 1))
  f: = loop...
    .. f(0) = 1,
    .. f(1) = e(f(0)) = e(1) = 2
    .. f(2) = e(f(1)) = e(2) = 2*2+2 = 6
  original = 2, 3, 7, ... correct


A69: (((loop2(\(x,y).x + y, \(x,y).y div 2, x, 1, x) mod 2) + x) + x)
a_n = 2*n + u_n mod 2 = 2*n + sum(n/2^i) mod 2
    u_n+1 = u_n + v_n,  v_n+1 = v_n /2
    1, k
    k+1 k/2
    k+1 + k/2 k/2*2
    u_n = 1 + sum(n/2^i)
    possibly correct

A79: loop(\(x,y).x + x, x, 1)
a_n = 2*a_{n-1}
    correct
A108: (loop(\(x,y).2 * ((x - (x div y)) + x), x, 1) div (1 + x))
      a_n = u_n // (1+n) , where u_n = 4*u_{n-1} - 2*u_{n-1}//n
      a_n = 2*u_{n-1}*(n+1)*( 2-1//n ) //(1+n)
          a_n = 2*u_{n-1}*( 2-1//n ) = 2*(un-1)*(2n-1)/n
      a_n = 2*u_{n-1}*(n*( 2-1//n ) //(1+n) =
          a_n = 2*u_{n-1}*( 2*n - 1 ) //(1+n) =
          \<- this one is correct.
      correct

A120: (loop2(\(x,y).x - y, \(x,y).y div 2, x, x, x) + x)
    a_n = u_n + n = n - sum(n/2^n)
    u_n = u_n - v_n,    v_n = v_n/2 => v_n = n/2^n
    k k
    k-k=0,  k/2
    0-k/2,  k/2*2
    -k/2-k/2*2,  k/2*2*2
    u_n = - sum(k/2^n) = - sum(n/2^n)
    idk.



A124: loop(\(x,y).x + y, x, 1)
    a_n = a_{n-1} + n
    correct

A129: loop2(\(x,y).(x + x) + y, \(x,y).x, x, 0, 1)
A142: loop(\(x,y).x * y, x, 1)
a_n = a_{n-1} * n
A166: loop(\(x,y).(x * y) + loop(\(x,y).0 - x, y, 1), x, 1)

A169: loop2(\(x,y).(x * y) + x, \(x,y).y, x, 1, x)
    52
    u_n+1 = f(u_n, v_n) = u_n*(v_n + 1) ; v_n+1 = g(u_n, v_n) = v_n
    1 k
    k + 1  k
    (k+1)(k+1)=(k+1)^2  k
    (k+1)^2*(k+1)  k
 ...(k+1)^n  k
 ... (n+1)^n
    a(n) := n^(n-1) so seems correct.

A204: loop2(\(x,y).x + y, \(x,y).x, x, 1, 2)
A217: loop(\(x,y).x + y, x, 0)
a_n = a_{n-1} + n
A225: (loop(\(x,y).x + x, x, 1) - 1)
u_n = 2*u_{n-1}; a(n) = u_n - 1
A244: loop(\(x,y).(x + x) + x, x, 1)
a_n = 3*a_{n-1}

A272: loop2(\(x,y).x * y, \(x,y).y, x - 2, 1, x)
    u_n+1 = u_n * v_n,  v_n+1 = v_n
    1, k
    1*k,    k
    1*k*k, k
    k^3, k
    u_n = k^n
    n => a_n = u_{n-2} = n^(n-2)
    correct

A290: (x * x)
    n^2

A292: loop(\(x,y).loop(\(x,y).x + y, y, x), x, 0)
A302: loop(\(x,y).x + x, x + x, 1)
A312: loop2(\(x,y).x * y, \(x,y).y, x, 1, x)
    n => a_n = u_{n} = n^(n)
    correct

A326: ((x * x) - loop(\(x,y).x - y, x, x))
A330: loop(\(x,y).(y * y) + x, x, 0)
    a_n = n^2 + a(n-1)
A578: ((x * x) * x)
    n^3

A583: loop(\(x,y).x * x, 2, x)
    ne: a_n = a_{n-1}^2, ampak: a_n = n^4

A984: loop(\(x,y).2 * ((x - (x div y)) + x), x, 1)
    u_0 = 1
    a_n+1 = f(a_n, n)
    u1 = 2 * ((a_n - (a_n div n)) + a_n) = 2*(2a_n - a_n//n) = 2*( 2*n*a_n/n - a_n/n ) = 2* a_n  * ( 2*n - 1)/n
    correct (also with mb)

A1045: loop2(\(x,y).x + y, \(x,y).x + x, x, 0, 1)
    u_0 = 0, v_0 = 1
    u_n+1 = f(u_n, v_n), v_n+1 = g(u_n, v_n)
    u_n+1 = u_n + v_n,   v_n+1 = 2*u_n
    0 1
    1 2*0
    1 2*1
    3 2*1
    5 2*3
    effectively: a(n) = 2*a(n-2) + a(n-1)
    correct


A1057: loop(\(x,y).(y mod 2) - x, x, 0)
    a_{n+1} = n % 2 - a_n
A1147: loop(\(x,y).(2 * (x * y)) - x, x, 1)
A1285: ((loop2(\(x,y).x + y, \(x,y).y div 2, x, 0, x) mod 2) + 1)
    u0 = 0, v0 = k
    un+1 = u_n + v_n,  vn+1 = v_n / 2
    u1 = 0 + k,  v1 = k//2
    u2 = 0 + k + k//2,  v2 = k//2^2
    u3 = k+k//2+k//4
    u_n = sum{k/2^n}, v_n = k//2^n
    uu_n = sum{n/2^n}, v_n = n//2^n
    a_n = 1 + (sum{n//2^n} mod 2)
    maybe correct.

A1333: loop2(\(x,y).y, \(x,y).(x + y) + y, x, 1, 1)
A1405: (loop(\(x,y).x * y, x, 1) div loop(\(x,y).(y - (y div 2)) * x, x, 1))
    l_n+1 = l_n * n,  ll_n+1 = n - n//2* ll_n
    a_n+1 = l_n+1  // ll_n+1 = l_n * n // ( n - ll_n * n//2 )
    idk.

A1519: loop2(\(x,y).y - x, \(x,y).x, x + x, 1, 1)
A1699: loop2(\(x,y).x * y, \(x,y).(x + y) + (x * y), x, 1, 1)
    u_n+1 = f(u_n, v_n) = u_n * v_n; v_n+1 = g(u_n, v_n) = u_n + v_n + u_n*v_n
    a b
    a*b a+b + a*b
    a*b*( a+b + a*b),
    1, 1
    1 1+1+1=3
    3   3+ 4=7
    21  21+10=31
    31*21   ...
    idk.

A1700: (loop(\(x,y).2 * (((x div y) + x) + x), x, 1) div (1 + x))
    u_n+1 = 2 * ((u_n div n) + 2*u_n) = 2* (u_n//n + 2*u_n) = 2*u_n*(1//n + 2)
    u_n = a_n * (n+1)
    a_n = u_n/(n+1) = 2*u_(n-1)*n*(1//(n-1) + 2)//(n+1) = 2*u_{n-1}*(n + 2*n*(n-1))//(n-1) =
                                                 = 2*u_{n-1}*(-n + 2*n^2)//(n-1) =
    a_n = 2*a_{n-1}*(n)(1//(n-1) + 2)//(n+1) =
    seems correct

A1764: ((loop(\(x,y).x * y, (x + x) + x, 1) div loop(\(x,y).(x * y) + x, x + x, 1)) div loop(\(x,y).x * y, x, 1))
    l1_0 = 1, l1_1 = 1, l1_2 = 2, l1_n = n!
    l1_n+1 = l1_n * (n+1)
    l11_n = l1_{3*n} = (3*n)!
    l2_n+1 = l2_n * (n + 2)
    l2_0 = 1, l2_1 = 1*2, l2_2 = 2*3, l2_n = (n+1)!
    l22_n = l2_(2n) = (2n+1)!
    l3_n+1 = l3_n * (n+1), l3_n = n!
    a_n = l11_n/ l22_n/ l3_n = (3*n)! / ((2n+1)! * n!)
    correct

A1906: loop2(\(x,y).x + y, \(x,y).x, x + x, 0, 1)
A1969: (((loop2(\(x,y).x + y, \(x,y).y div 2, x, 0, x) mod 2) + x) + x)
    u_n+1 = u_n + v_n,  v_n+1 = v_n//2
    0 k
    k k//2
    k+k//2+k//4
    sum[n/2^i] k/2^n
    2*n +  sum mod 2
A2275: loop(\(x,y).1 + (2 * ((2 * (x + x)) + x)), x, 0)
A2378: ((x * x) + x)
A2530: (loop2(\(x,y).(((if x mod 2 <= 0 then 2 else x) - 2) + x) + y, \(x,y).x, x, 1, 2) div 2)
A2620: ((x * x) div (2 + 2))
A4526: (x div 2)
A5408: (1 + (x + x))
A5843: (x + x)
A6882: loop(\(x,y).loop(\(x,y).x * y, y, 1) div x, x, 1)
A6894: loop(\(x,y).1 + (((x * x) + x) div 2), x, 1)
    a_{n+1} = 1 + a_n * (a_n + 1) / 2
    correct

A10060: (loop2(\(x,y).x + y, \(x,y).y div 2, x, 0, x) mod 2)
    u_n+1 = f(u_n, v_n) = u_n + v_n; v_n+1 = g(u_n, v_n) = v_n div 2
    0 k
    k  k div 2
    k+ k//2  k//2//2
    k+ k//2 + k//2//2  k//2^3
    a_n = sum(n/2^n) mod 2
    look A1969

A70939: loop(\(x,y).loop(\(x,y).x div 2, x, y) + x, x, 1)
    u_0 = y
    u_1 = y//2
    u_2 = y//2^2
    u_n+1 = u_n//2
    u_n = y//2^n

    a_n+1 = f(a_n, n) = a_n + u_(a_n) = a_n + n//2^(a_n)

27987

Notes:
it discovered e.g. n^(n-1), n^n, n^(n-2) (as in a169, a272, a312) that Diofantos has not.
Also it discovered equations that are cased on being odd ar even, like a(2n) = a(n), a(2n+1) = 3*a(n) as in a1285
((which is very suitable to if then else programming statement)).
but it did not discovered a(n) = 4*a(n-2) - a(n-4) that Diofantos has.
Which can hint that it is not that good at discovering recurrences of higher orders.

One could also question the meaningfullness of a few longer reconstructed equations, such as the longest one:
A1764: ((loop(\(x,y).x * y, (x + x) + x, 1) div loop(\(x,y).(x * y) + x, x + x, 1)) div loop(\(x,y).x * y, x, 1))
Does this equation give us any insight into the sequence it describes?



orders_used: [8, 8, 8, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:6311/10000, seq_id:A040614, order:20 took:
 22.6 seconds, i.e. 0.38 minutes or 0.006 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 8.
eqs_explicit:
['a(n) = 46*a(n-12)/21 - 25*a(n-11)/21 - 25/21']
non_linears:
['a(n-6)*a(n-7) +(-63/473)*a(n-3) +(-7/43)*a(n-4) +(-59/473)*a(n-5) +(-532/473)*a(n-6) +(-50/43)*a(n-7) +(-63/473)*a(n-8) +171/43', 'a(n-4)*a(n-7) +(-189/473)*a(n-3) +(-64/43)*a(n-4) +(-177/473)*a(n-5) +(-177/473)*a(n-6) +(-64/43)*a(n-7) +(-189/473)*a(n-8) +427/43', 'a(n-3)*a(n-8) +(17/473)*a(n-3) +(150/43)*a(n-4) +(1510/473)*a(n-5) +(1510/473)*a(n-6) +(150/43)*a(n-7) +(17/473)*a(n-8) -2577/43', 'a(n-7)*a(n-8) +(-173/9056)*a(n-5) +(-91/4528)*a(n-6) +(-8995/9056)*a(n-7) +(-4619/4528)*a(n-8) +(-819/9056)*a(n-9) +12717/9056', 'a(n-7)^2 +(10569/4528)*a(n-5) +(63/2264)*a(n-6) +(-57513/4528)*a(n-7) +(63/2264)*a(n-8) +(567/4528)*a(n-9) +39959/4528', 'a(n-5)*a(n-8) +(-9575/9056)*a(n-5) +(-273/4528)*a(n-6) +(183/9056)*a(n-7) +(-4801/4528)*a(n-8) +(-2457/9056)*a(n-9) +20039/9056', 'n +(272/101)*a(n-7) +(-54/101)*a(n-8) +(-965/101)*a(n-9) +(88/101)*a(n-10) -479/101', 'a(n-8)*a(n-9) +(80/101)*a(n-7) +(-105/101)*a(n-8) +(-367/101)*a(n-9) +(14/101)*a(n-10) +275/101', 'a(n-9)*a(n-10) +(926/101)*a(n-7) +(-16/101)*a(n-8) +(-3185/101)*a(n-9) +(-45/101)*a(n-10) +2211/101', 'a(n-9)^2 +(914/101)*a(n-7) +(-76/101)*a(n-8) +(-3539/101)*a(n-9) +(266/101)*a(n-10) +2296/101', 'a(n-4) +(1638/101)*a(n-7) +(-92/101)*a(n-8) +(-5310/101)*a(n-9) +(423/101)*a(n-10) +2790/101', 'a(n-3) +(-1636/101)*a(n-7) +(102/101)*a(n-8) +(5369/101)*a(n-9) +(-458/101)*a(n-10) -3326/101', 'a(n-8)*a(n-10) +(-1920/101)*a(n-7) +(-308/101)*a(n-8) +(6081/101)*a(n-9) +(-740/101)*a(n-10) -2257/101', 'a(n-7)*a(n-10) +(-3083/101)*a(n-7) +(240/101)*a(n-8) +(9900/101)*a(n-9) +(-941/101)*a(n-10) -6097/101', 'a(n-7)*a(n-9) +(2578/101)*a(n-7) +(-240/101)*a(n-8) +(-10001/101)*a(n-9) +(840/101)*a(n-10) +6602/101', 'a(n-7) +(-236/71)*a(n-9) +(1/71)*a(n-10) +(1/71)*a(n-11) +160/71', 'a(n-4) +(96/71)*a(n-9) +(73/71)*a(n-10) +(2/71)*a(n-11) -532/71', 'a(n-3) +(-50/71)*a(n-9) +(-75/71)*a(n-10) +(-4/71)*a(n-11) +141/71', 'n +(-42/71)*a(n-9) +(-63/71)*a(n-10) +(8/71)*a(n-11) -708/71', 'a(n-9)*a(n-10) +(-75/71)*a(n-9) +(-77/71)*a(n-10) +(-6/71)*a(n-11) +105/71', 'a(n-9)^2 +(-351/71)*a(n-9) +(6/71)*a(n-10) +(6/71)*a(n-11) +250/71', 'a(n-5) +(-89/71)*a(n-9) +(-27/71)*a(n-10) +(-27/71)*a(n-11) +153/71', 'a(n-10)^2 +(-67/71)*a(n-9) +(-420/71)*a(n-10) +(6/71)*a(n-11) +605/71', 'a(n-1) +(-1079/71)*a(n-9) +(50/71)*a(n-10) +(50/71)*a(n-11) +616/71', 'a(n-10)*a(n-11) +(-25/71)*a(n-9) +(-144/71)*a(n-10) +(-215/71)*a(n-11) +532/71', 'a(n-9) +(-23/7)*a(n-11) +(2/7)*a(n-12) +12/7', 'a(n-5) +(-23/7)*a(n-11) +(2/7)*a(n-12) +12/7', 'a(n-4) +(25/21)*a(n-11) +(-4/21)*a(n-12) -59/21', 'a(n-11)^2 +(-61/21)*a(n-11) +(-2/21)*a(n-12) +44/21', 'a(n-10) +(67/21)*a(n-11) +(-4/21)*a(n-12) -143/21', 'a(n) +(25/21)*a(n-11) +(-46/21)*a(n-12) +25/21']
A040614: 
a(n) = 46*a(n-12)/21 - 25*a(n-11)/21 - 25/21
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

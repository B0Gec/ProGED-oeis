
orders_used: [1, 2, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 10, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:6283/10000, seq_id:A040586, order:20 took:
 34.6 seconds, i.e. 0.58 minutes or 0.01 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
eqs_explicit:
[]
non_linears:
['a(n-1)^4 -31*a(n-1)^3 +182*a(n-1)^2 -344*a(n-1) +192', 'a(n)*a(n-1)*a(n-2) -a(n)*a(n-1) -a(n)*a(n-2) -a(n-1)*a(n-2) +a(n) +a(n-1) +a(n-2) -1', 'a(n-1)*a(n-6) +(-100/31)*a(n-1) +(138/31)*a(n-2) +(138/31)*a(n-3) +(138/31)*a(n-4) +(138/31)*a(n-5) +(-100/31)*a(n-6) -866/31', 'a(n-3)*a(n-5) +(41/217)*a(n-1) +(-144/217)*a(n-2) +(-330/217)*a(n-3) +(-144/217)*a(n-4) +(-330/217)*a(n-5) +(-3/31)*a(n-6) +1215/217', 'a(n-1)^2 +(-1065/217)*a(n-1) +(-102/217)*a(n-2) +(-288/217)*a(n-3) +(-102/217)*a(n-4) +(-288/217)*a(n-5) +(-6/31)*a(n-6) +2678/217', 'a(n-6)^2 +(-3296/217)*a(n-1) +(6220/217)*a(n-2) +(6406/217)*a(n-3) +(6220/217)*a(n-4) +(6406/217)*a(n-5) +(-617/31)*a(n-6) -39624/217', 'a(n-2)*a(n-6) +(-90/31)*a(n-2) +(-6/31)*a(n-3) +(-37/31)*a(n-4) +(-6/31)*a(n-5) +(-99/31)*a(n-6) +(3/31)*a(n-7) +318/31', 'a(n-2)*a(n-3) +(-1/2)*n +(-255/62)*a(n-2) +(-79/62)*a(n-3) +(45/62)*a(n-4) +(107/62)*a(n-5) +(169/62)*a(n-6) +(12/31)*a(n-7) +32/31', 'a(n-5)*a(n-6) +(1/2)*n +(211/62)*a(n-2) +(167/62)*a(n-3) +(105/62)*a(n-4) +(-19/62)*a(n-5) +(-267/62)*a(n-6) +(-3/31)*a(n-7) -504/31', 'a(n-2)*a(n-7) +(-100/31)*a(n-2) +(138/31)*a(n-3) +(138/31)*a(n-4) +(138/31)*a(n-5) +(138/31)*a(n-6) +(-100/31)*a(n-7) -866/31', 'n*a(n-4) -7*n +(-674/31)*a(n-2) +(-264/31)*a(n-3) +(-419/31)*a(n-4) +(108/31)*a(n-5) +(635/31)*a(n-6) +(39/31)*a(n-7) +2894/31', 'a(n-4)*a(n-6) +(41/217)*a(n-2) +(-144/217)*a(n-3) +(-330/217)*a(n-4) +(-144/217)*a(n-5) +(-330/217)*a(n-6) +(-3/31)*a(n-7) +1215/217', 'a(n-3)*a(n-7) +(-90/31)*a(n-3) +(-6/31)*a(n-4) +(-37/31)*a(n-5) +(-6/31)*a(n-6) +(-99/31)*a(n-7) +(3/31)*a(n-8) +318/31', 'a(n-7)*a(n-8) +(44/89)*a(n-5) +(-3/89)*a(n-6) +(-76/89)*a(n-7) +(-185/89)*a(n-8) +(1/89)*a(n-9) +94/89', 'a(n-2) +(41/89)*a(n-5) +(-21/89)*a(n-6) +(91/89)*a(n-7) +(40/89)*a(n-8) +(7/89)*a(n-9) -499/89', 'a(n-8)^2 +(88/89)*a(n-5) +(-6/89)*a(n-6) +(26/89)*a(n-7) +(-459/89)*a(n-8) +(2/89)*a(n-9) +188/89', 'a(n-5)*a(n-8) +(-177/89)*a(n-5) +(6/89)*a(n-6) +(-26/89)*a(n-7) +(-164/89)*a(n-8) +(-2/89)*a(n-9) +346/89', 'a(n-7)^2 +(-47/89)*a(n-5) +(-15/89)*a(n-6) +(-469/89)*a(n-7) +(54/89)*a(n-8) +(5/89)*a(n-9) +470/89', 'a(n-5)^2 +(-531/89)*a(n-5) +(18/89)*a(n-6) +(-78/89)*a(n-7) +(42/89)*a(n-8) +(-6/89)*a(n-9) +682/89', 'a(n-3) +(41/267)*a(n-5) +(-7/89)*a(n-6) +(-176/267)*a(n-7) +(43/89)*a(n-8) +(7/267)*a(n-9) -499/267', 'a(n-6)^2 +(170/89)*a(n-5) +(-315/89)*a(n-6) +(208/89)*a(n-7) +(66/89)*a(n-8) +(16/89)*a(n-9) -810/89', 'a(n-6)*a(n-7) +(-47/178)*a(n-5) +(-193/178)*a(n-6) +(-190/89)*a(n-7) +(27/89)*a(n-8) +(5/178)*a(n-9) +235/89', 'a(n-5)*a(n-7) +(-223/267)*a(n-5) +(-1/89)*a(n-6) +(-254/267)*a(n-7) +(-32/89)*a(n-8) +(1/267)*a(n-9) +272/267', 'a(n-9)*a(n-10) -a(n-9) -a(n-10) +1', 'a(n-5) +(41/463)*a(n-7) +(-144/463)*a(n-8) +(-391/463)*a(n-9) +(-51/463)*a(n-10) +10/463', 'a(n-4) +(-94/463)*a(n-7) +(-370/463)*a(n-8) +(185/463)*a(n-9) +(4/463)*a(n-10) -373/463', 'a(n-1) +(41/463)*a(n-7) +(-144/463)*a(n-8) +(72/463)*a(n-9) +(-51/463)*a(n-10) -453/463', 'a(n-3) +(-282/463)*a(n-7) +(279/463)*a(n-8) +(92/463)*a(n-9) +(12/463)*a(n-10) -1119/463', 'a(n-8)*a(n-10) +(161/463)*a(n-7) +(-509/463)*a(n-8) +(23/463)*a(n-9) +(-923/463)*a(n-10) +762/463', 'a(n-7)*a(n-10) +(-946/463)*a(n-7) +(138/463)*a(n-8) +(-69/463)*a(n-9) +(-472/463)*a(n-10) +955/463', 'a(n-7)*a(n-8) +(-403/463)*a(n-7) +(-877/463)*a(n-8) +(207/463)*a(n-9) +(27/463)*a(n-10) +376/463', 'a(n-6) +(375/463)*a(n-7) +(422/463)*a(n-8) +(252/463)*a(n-9) +(53/463)*a(n-10) -3206/463', 'a(n-10)*a(n-11) -a(n-10) -a(n-11) +1', 'a(n-9)*a(n-10) -a(n-9) -a(n-10) +1', 'a(n-2) +(-25/67)*a(n-9) +(-8/67)*a(n-10) +(-8/67)*a(n-11) -18/67', 'a(n-6) +(-25/67)*a(n-9) +(-75/67)*a(n-10) +(-8/67)*a(n-11) +49/67', 'a(n-7) +(23/67)*a(n-9) +(-132/67)*a(n-10) +(2/67)*a(n-11) -29/67', 'a(n-5) +(-44/67)*a(n-9) +(69/67)*a(n-10) +(2/67)*a(n-11) -163/67', 'a(n-3) +(-1/67)*a(n-9) +(-204/67)*a(n-10) +(-3/67)*a(n-11) +144/67', 'a(n-1) +(23/67)*a(n-9) +(69/67)*a(n-10) +(2/67)*a(n-11) -230/67', 'n +(-20/67)*a(n-9) +(74/67)*a(n-10) +(7/67)*a(n-11) -939/67', 'a(n-11)*a(n-12) -a(n-11) -a(n-12) +1', 'a(n-12)^2 -23*a(n-11) -26*a(n-12) +71', 'a(n-10) +(-1/22)*a(n-11) +(-1/22)*a(n-12) -19/22', 'a(n-8) +(-43/22)*a(n-11) +(1/22)*a(n-12) -3/22', 'a(n-7) +(-25/22)*a(n-11) +(-3/22)*a(n-12) +9/22', 'a(n-3) +(-3/22)*a(n-11) +(-3/22)*a(n-12) -13/22', 'a(n-4) +(-67/22)*a(n-11) +(-1/22)*a(n-12) +47/22', 'a(n-13)^2 -25*a(n-13) +24', 'a(n-12) +(1/23)*a(n-13) -47/23', 'a(n-11) +(-1/23)*a(n-13) -22/23', 'a(n-9) +(3/23)*a(n-13) -95/23', 'a(n-8) +(-2/23)*a(n-13) -44/23', 'a(n-7) +(-1/23)*a(n-13) -22/23', 'a(n-6) +(1/23)*a(n-13) -47/23', 'a(n-5) +(2/23)*a(n-13) -94/23']
A040586: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

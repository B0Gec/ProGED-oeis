
orders_used: [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
While total time consumed by now, scale:10258/27236, seq_id:A080340, order:20 took:
 28.7 seconds, i.e. 0.48 minutes or 0.008 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
non_linears:
['a(n) -a(n-1) -11184810', 'a(n-1) -a(n-2) -11184810', 'a(n) -a(n-2) -22369620', 'a(n-2) -a(n-3) -11184810', 'a(n-1) -a(n-3) -22369620', 'a(n) -a(n-3) -33554430', 'a(n-3) -a(n-4) -11184810', 'a(n-2) -a(n-4) -22369620', 'a(n-1) -a(n-4) -33554430', 'a(n) -a(n-4) -44739240', 'a(n-4) -a(n-5) -11184810', 'a(n-3) -a(n-5) -22369620', 'a(n-2) -a(n-5) -33554430', 'a(n-1) -a(n-5) -44739240', 'a(n) -a(n-5) -55924050', 'a(n-5) -a(n-6) -11184810', 'a(n-4) -a(n-6) -22369620', 'a(n-3) -a(n-6) -33554430', 'a(n-2) -a(n-6) -44739240', 'a(n-1) -a(n-6) -55924050', 'a(n) -a(n-6) -67108860', 'a(n-6) -a(n-7) -11184810', 'a(n-5) -a(n-7) -22369620', 'a(n-4) -a(n-7) -33554430', 'a(n-3) -a(n-7) -44739240', 'a(n-2) -a(n-7) -55924050', 'a(n-1) -a(n-7) -67108860', 'a(n) -a(n-7) -78293670', 'a(n-7) -a(n-8) -11184810', 'a(n-6) -a(n-8) -22369620', 'a(n-5) -a(n-8) -33554430', 'a(n-4) -a(n-8) -44739240', 'a(n-3) -a(n-8) -55924050', 'a(n-2) -a(n-8) -67108860', 'a(n-1) -a(n-8) -78293670', 'a(n) -a(n-8) -89478480', 'a(n-8) -a(n-9) -11184810', 'a(n-7) -a(n-9) -22369620', 'a(n-6) -a(n-9) -33554430', 'a(n-5) -a(n-9) -44739240', 'a(n-4) -a(n-9) -55924050', 'a(n-3) -a(n-9) -67108860', 'a(n-2) -a(n-9) -78293670', 'a(n-1) -a(n-9) -89478480', 'a(n) -a(n-9) -100663290', 'a(n-9) -a(n-10) -11184810', 'a(n-8) -a(n-10) -22369620', 'a(n-7) -a(n-10) -33554430', 'a(n-6) -a(n-10) -44739240', 'a(n-5) -a(n-10) -55924050', 'a(n-4) -a(n-10) -67108860', 'a(n-3) -a(n-10) -78293670', 'a(n-2) -a(n-10) -89478480', 'a(n-1) -a(n-10) -100663290', 'a(n) -a(n-10) -111848100', 'a(n-10) -a(n-11) -11184810', 'a(n-9) -a(n-11) -22369620', 'a(n-8) -a(n-11) -33554430', 'a(n-7) -a(n-11) -44739240', 'a(n-6) -a(n-11) -55924050', 'a(n-5) -a(n-11) -67108860', 'a(n-4) -a(n-11) -78293670', 'a(n-3) -a(n-11) -89478480', 'a(n-2) -a(n-11) -100663290', 'a(n-1) -a(n-11) -111848100', 'a(n-11) -a(n-12) -11184810', 'a(n-10) -a(n-12) -22369620', 'a(n-9) -a(n-12) -33554430', 'a(n-8) -a(n-12) -44739240', 'a(n-7) -a(n-12) -55924050', 'a(n-6) -a(n-12) -67108860', 'a(n-5) -a(n-12) -78293670', 'a(n-4) -a(n-12) -89478480', 'a(n-3) -a(n-12) -100663290', 'a(n-2) -a(n-12) -111848100', 'a(n-12) -a(n-13) -11184810', 'a(n-11) -a(n-13) -22369620', 'a(n-10) -a(n-13) -33554430', 'a(n-9) -a(n-13) -44739240', 'a(n-8) -a(n-13) -55924050', 'a(n-7) -a(n-13) -67108860', 'a(n-6) -a(n-13) -78293670', 'a(n-5) -a(n-13) -89478480', 'a(n-4) -a(n-13) -100663290', 'a(n-3) -a(n-13) -111848100', 'a(n-13) -a(n-14) -11184810', 'a(n-12) -a(n-14) -22369620', 'a(n-11) -a(n-14) -33554430', 'a(n-10) -a(n-14) -44739240', 'a(n-9) -a(n-14) -55924050', 'a(n-8) -a(n-14) -67108860', 'a(n-7) -a(n-14) -78293670', 'a(n-6) -a(n-14) -89478480', 'a(n-5) -a(n-14) -100663290', 'a(n-4) -a(n-14) -111848100', 'a(n-14) -a(n-15) -11184810', 'a(n-13) -a(n-15) -22369620', 'a(n-12) -a(n-15) -33554430', 'a(n-11) -a(n-15) -44739240', 'a(n-10) -a(n-15) -55924050', 'a(n-9) -a(n-15) -67108860', 'a(n-8) -a(n-15) -78293670', 'a(n-7) -a(n-15) -89478480', 'a(n-6) -a(n-15) -100663290', 'a(n-5) -a(n-15) -111848100', 'a(n-15) -a(n-16) -11184810', 'a(n-14) -a(n-16) -22369620', 'a(n-13) -a(n-16) -33554430', 'a(n-12) -a(n-16) -44739240', 'a(n-11) -a(n-16) -55924050', 'a(n-10) -a(n-16) -67108860', 'a(n-9) -a(n-16) -78293670', 'a(n-8) -a(n-16) -89478480', 'a(n-7) -a(n-16) -100663290', 'a(n-6) -a(n-16) -111848100', 'a(n-16) -a(n-17) -11184810', 'a(n-15) -a(n-17) -22369620', 'a(n-14) -a(n-17) -33554430', 'a(n-13) -a(n-17) -44739240', 'a(n-12) -a(n-17) -55924050', 'a(n-11) -a(n-17) -67108860', 'a(n-10) -a(n-17) -78293670', 'a(n-9) -a(n-17) -89478480', 'a(n-8) -a(n-17) -100663290', 'a(n-7) -a(n-17) -111848100', 'a(n-17) -a(n-18) -11184810', 'a(n-16) -a(n-18) -22369620', 'a(n-15) -a(n-18) -33554430', 'a(n-14) -a(n-18) -44739240', 'a(n-13) -a(n-18) -55924050', 'a(n-12) -a(n-18) -67108860', 'a(n-11) -a(n-18) -78293670', 'a(n-10) -a(n-18) -89478480', 'a(n-9) -a(n-18) -100663290', 'a(n-8) -a(n-18) -111848100', 'a(n-18) -a(n-19) -11184810', 'a(n-17) -a(n-19) -22369620', 'a(n-16) -a(n-19) -33554430', 'a(n-15) -a(n-19) -44739240', 'a(n-14) -a(n-19) -55924050', 'a(n-13) -a(n-19) -67108860', 'a(n-12) -a(n-19) -78293670', 'a(n-11) -a(n-19) -89478480', 'a(n-10) -a(n-19) -100663290', 'a(n-9) -a(n-19) -111848100', 'a(n-19) -a(n-20) -11184810', 'a(n-18) -a(n-20) -22369620', 'a(n-17) -a(n-20) -33554430', 'a(n-16) -a(n-20) -44739240', 'a(n-15) -a(n-20) -55924050', 'a(n-14) -a(n-20) -67108860', 'a(n-13) -a(n-20) -78293670', 'a(n-12) -a(n-20) -89478480', 'a(n-11) -a(n-20) -100663290', 'a(n-10) -a(n-20) -111848100']
A080340: 
MB not reconst
truth: 
a(n) = 2*a(n - 1) + -1*a(n - 2),  
a(0) = 7629217, a(1) = 18814027

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    


orders_used: [1, 2, 2, 2, 3, 3, 3, 3, 4, 3, 4, 4, 4, 5, 4, 3, 5, 5, 5, 6, 5, 4, 6, 6, 6, 6, 7, 6, 5, 7, 6, 7, 7, 7, 8, 7, 6, 8, 7, 6, 8, 8, 8, 9, 8, 7, 9, 8, 7, 9, 9, 9, 9, 10, 9, 8, 10, 9, 8, 10, 9, 10, 10, 11, 10, 9, 11, 10, 9, 11, 10, 9, 11, 12, 11, 10, 12, 11, 10, 12, 11, 10, 12, 13, 12, 11, 13, 12, 11, 13, 12, 11, 13, 14, 13, 12, 14, 13, 12, 14, 13, 12, 14, 15, 14, 13, 15, 14, 13, 15, 14, 13, 15, 16, 15, 14, 16, 15, 14, 16, 15, 14, 16, 17, 16, 15, 17, 16, 15, 17, 16, 15, 17, 18, 17, 16, 18, 17, 16, 18, 17, 16, 18, 19, 18, 17, 19, 18, 17, 19, 18, 17, 19, 20, 19, 18, 20, 19, 18, 20, 19, 18, 20]
While total time consumed by now, scale:19949/27236, seq_id:A180516, order:20 took:
 33.8 seconds, i.e. 0.56 minutes or 0.009 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
non_linears:
['a(n)^3 +(-29/6)*a(n)^2*a(n-1) +(23/3)*a(n)*a(n-1)^2 -4*a(n-1)^3 +(-11/6)*a(n)^2 +(17/3)*a(n)*a(n-1) +(-13/3)*a(n-1)^2 +a(n) +(-3/2)*a(n-1) -1/6', 'a(n)^2 +(-43/9)*a(n)*a(n-2) +(-4/9)*a(n-1)*a(n-2) +(56/9)*a(n-2)^2 +(-25/9)*a(n) +(-4/9)*a(n-1) +(65/9)*a(n-2) +2', 'a(n)*a(n-1) +(-14/9)*a(n)*a(n-2) +(-26/9)*a(n-1)*a(n-2) +(40/9)*a(n-2)^2 +(-5/9)*a(n) +(-17/9)*a(n-1) +(40/9)*a(n-2) +1', 'a(n-1)^2 +(-1/9)*a(n)*a(n-2) +(-59/18)*a(n-1)*a(n-2) +(26/9)*a(n-2)^2 +(-1/9)*a(n) +(-23/18)*a(n-1) +(43/18)*a(n-2) +1/2', 'a(n) -4*a(n-3) -3', 'a(n-1)^2 +(-43/9)*a(n-1)*a(n-3) +(-4/9)*a(n-2)*a(n-3) +(56/9)*a(n-3)^2 +(-25/9)*a(n-1) +(-4/9)*a(n-2) +(65/9)*a(n-3) +2', 'a(n-1)*a(n-2) +(-14/9)*a(n-1)*a(n-3) +(-26/9)*a(n-2)*a(n-3) +(40/9)*a(n-3)^2 +(-5/9)*a(n-1) +(-17/9)*a(n-2) +(40/9)*a(n-3) +1', 'a(n-2)^2 +(-1/9)*a(n-1)*a(n-3) +(-59/18)*a(n-2)*a(n-3) +(26/9)*a(n-3)^2 +(-1/9)*a(n-1) +(-23/18)*a(n-2) +(43/18)*a(n-3) +1/2', 'a(n-1) -4*a(n-4) -3', 'a(n) -4*a(n-3) -3', 'a(n-2)^2 +(-43/9)*a(n-2)*a(n-4) +(-4/9)*a(n-3)*a(n-4) +(56/9)*a(n-4)^2 +(-25/9)*a(n-2) +(-4/9)*a(n-3) +(65/9)*a(n-4) +2', 'a(n-2)*a(n-3) +(-14/9)*a(n-2)*a(n-4) +(-26/9)*a(n-3)*a(n-4) +(40/9)*a(n-4)^2 +(-5/9)*a(n-2) +(-17/9)*a(n-3) +(40/9)*a(n-4) +1', 'a(n-3)^2 +(-1/9)*a(n-2)*a(n-4) +(-59/18)*a(n-3)*a(n-4) +(26/9)*a(n-4)^2 +(-1/9)*a(n-2) +(-23/18)*a(n-3) +(43/18)*a(n-4) +1/2', 'a(n-2) -4*a(n-5) -3', 'a(n-1) -4*a(n-4) -3', 'a(n) -4*a(n-3) -3', 'a(n-3)^2 +(-43/9)*a(n-3)*a(n-5) +(-4/9)*a(n-4)*a(n-5) +(56/9)*a(n-5)^2 +(-25/9)*a(n-3) +(-4/9)*a(n-4) +(65/9)*a(n-5) +2', 'a(n-3)*a(n-4) +(-14/9)*a(n-3)*a(n-5) +(-26/9)*a(n-4)*a(n-5) +(40/9)*a(n-5)^2 +(-5/9)*a(n-3) +(-17/9)*a(n-4) +(40/9)*a(n-5) +1', 'a(n-4)^2 +(-1/9)*a(n-3)*a(n-5) +(-59/18)*a(n-4)*a(n-5) +(26/9)*a(n-5)^2 +(-1/9)*a(n-3) +(-23/18)*a(n-4) +(43/18)*a(n-5) +1/2', 'a(n-3) -4*a(n-6) -3', 'a(n-2) -4*a(n-5) -3', 'a(n-1) -4*a(n-4) -3', 'a(n) -16*a(n-6) -15', 'a(n-4)^2 +(-43/9)*a(n-4)*a(n-6) +(-4/9)*a(n-5)*a(n-6) +(56/9)*a(n-6)^2 +(-25/9)*a(n-4) +(-4/9)*a(n-5) +(65/9)*a(n-6) +2', 'a(n-4)*a(n-5) +(-14/9)*a(n-4)*a(n-6) +(-26/9)*a(n-5)*a(n-6) +(40/9)*a(n-6)^2 +(-5/9)*a(n-4) +(-17/9)*a(n-5) +(40/9)*a(n-6) +1', 'a(n-5)^2 +(-1/9)*a(n-4)*a(n-6) +(-59/18)*a(n-5)*a(n-6) +(26/9)*a(n-6)^2 +(-1/9)*a(n-4) +(-23/18)*a(n-5) +(43/18)*a(n-6) +1/2', 'a(n-4) -4*a(n-7) -3', 'a(n-3) -4*a(n-6) -3', 'a(n-2) -4*a(n-5) -3', 'a(n-1) -16*a(n-7) -15', 'a(n) -16*a(n-6) -15', 'a(n-5)^2 +(-43/9)*a(n-5)*a(n-7) +(-4/9)*a(n-6)*a(n-7) +(56/9)*a(n-7)^2 +(-25/9)*a(n-5) +(-4/9)*a(n-6) +(65/9)*a(n-7) +2', 'a(n-5)*a(n-6) +(-14/9)*a(n-5)*a(n-7) +(-26/9)*a(n-6)*a(n-7) +(40/9)*a(n-7)^2 +(-5/9)*a(n-5) +(-17/9)*a(n-6) +(40/9)*a(n-7) +1', 'a(n-6)^2 +(-1/9)*a(n-5)*a(n-7) +(-59/18)*a(n-6)*a(n-7) +(26/9)*a(n-7)^2 +(-1/9)*a(n-5) +(-23/18)*a(n-6) +(43/18)*a(n-7) +1/2', 'a(n-5) -4*a(n-8) -3', 'a(n-4) -4*a(n-7) -3', 'a(n-3) -4*a(n-6) -3', 'a(n-2) -16*a(n-8) -15', 'a(n-1) -16*a(n-7) -15', 'a(n) -16*a(n-6) -15', 'a(n-6)^2 +(-43/9)*a(n-6)*a(n-8) +(-4/9)*a(n-7)*a(n-8) +(56/9)*a(n-8)^2 +(-25/9)*a(n-6) +(-4/9)*a(n-7) +(65/9)*a(n-8) +2', 'a(n-6)*a(n-7) +(-14/9)*a(n-6)*a(n-8) +(-26/9)*a(n-7)*a(n-8) +(40/9)*a(n-8)^2 +(-5/9)*a(n-6) +(-17/9)*a(n-7) +(40/9)*a(n-8) +1', 'a(n-7)^2 +(-1/9)*a(n-6)*a(n-8) +(-59/18)*a(n-7)*a(n-8) +(26/9)*a(n-8)^2 +(-1/9)*a(n-6) +(-23/18)*a(n-7) +(43/18)*a(n-8) +1/2', 'a(n-6) -4*a(n-9) -3', 'a(n-5) -4*a(n-8) -3', 'a(n-4) -4*a(n-7) -3', 'a(n-3) -16*a(n-9) -15', 'a(n-2) -16*a(n-8) -15', 'a(n-1) -16*a(n-7) -15', 'a(n) -64*a(n-9) -63', 'a(n-7)^2 +(-43/9)*a(n-7)*a(n-9) +(-4/9)*a(n-8)*a(n-9) +(56/9)*a(n-9)^2 +(-25/9)*a(n-7) +(-4/9)*a(n-8) +(65/9)*a(n-9) +2', 'a(n-7)*a(n-8) +(-14/9)*a(n-7)*a(n-9) +(-26/9)*a(n-8)*a(n-9) +(40/9)*a(n-9)^2 +(-5/9)*a(n-7) +(-17/9)*a(n-8) +(40/9)*a(n-9) +1', 'a(n-8)^2 +(-1/9)*a(n-7)*a(n-9) +(-59/18)*a(n-8)*a(n-9) +(26/9)*a(n-9)^2 +(-1/9)*a(n-7) +(-23/18)*a(n-8) +(43/18)*a(n-9) +1/2', 'a(n-7) -4*a(n-10) -3', 'a(n-6) -4*a(n-9) -3', 'a(n-5) -4*a(n-8) -3', 'a(n-4) -16*a(n-10) -15', 'a(n-3) -16*a(n-9) -15', 'a(n-2) -16*a(n-8) -15', 'a(n-1) -64*a(n-10) -63', 'a(n) -64*a(n-9) -63', 'a(n-8)^2 +(-43/9)*a(n-8)*a(n-10) +(-4/9)*a(n-9)*a(n-10) +(56/9)*a(n-10)^2 +(-25/9)*a(n-8) +(-4/9)*a(n-9) +(65/9)*a(n-10) +2', 'a(n-8)*a(n-9) +(-14/9)*a(n-8)*a(n-10) +(-26/9)*a(n-9)*a(n-10) +(40/9)*a(n-10)^2 +(-5/9)*a(n-8) +(-17/9)*a(n-9) +(40/9)*a(n-10) +1', 'a(n-8) -4*a(n-11) -3', 'a(n-7) -4*a(n-10) -3', 'a(n-6) -4*a(n-9) -3', 'a(n-5) -16*a(n-11) -15', 'a(n-4) -16*a(n-10) -15', 'a(n-3) -16*a(n-9) -15', 'a(n-2) -64*a(n-11) -63', 'a(n-1) -64*a(n-10) -63', 'a(n) -64*a(n-9) -63', 'a(n-9)^2 +(-43/9)*a(n-9)*a(n-11) +(-4/9)*a(n-10)*a(n-11) +(56/9)*a(n-11)^2 +(-25/9)*a(n-9) +(-4/9)*a(n-10) +(65/9)*a(n-11) +2', 'a(n-9) -4*a(n-12) -3', 'a(n-8) -4*a(n-11) -3', 'a(n-7) -4*a(n-10) -3', 'a(n-6) -16*a(n-12) -15', 'a(n-5) -16*a(n-11) -15', 'a(n-4) -16*a(n-10) -15', 'a(n-3) -64*a(n-12) -63', 'a(n-2) -64*a(n-11) -63', 'a(n-1) -64*a(n-10) -63', 'a(n) -256*a(n-12) -255', 'a(n-10) -4*a(n-13) -3', 'a(n-9) -4*a(n-12) -3', 'a(n-8) -4*a(n-11) -3', 'a(n-7) -16*a(n-13) -15', 'a(n-6) -16*a(n-12) -15', 'a(n-5) -16*a(n-11) -15', 'a(n-4) -64*a(n-13) -63', 'a(n-3) -64*a(n-12) -63', 'a(n-2) -64*a(n-11) -63', 'a(n-1) -256*a(n-13) -255', 'a(n-11) -4*a(n-14) -3', 'a(n-10) -4*a(n-13) -3', 'a(n-9) -4*a(n-12) -3', 'a(n-8) -16*a(n-14) -15', 'a(n-7) -16*a(n-13) -15', 'a(n-6) -16*a(n-12) -15', 'a(n-5) -64*a(n-14) -63', 'a(n-4) -64*a(n-13) -63', 'a(n-3) -64*a(n-12) -63', 'a(n-2) -256*a(n-14) -255', 'a(n-12) -4*a(n-15) -3', 'a(n-11) -4*a(n-14) -3', 'a(n-10) -4*a(n-13) -3', 'a(n-9) -16*a(n-15) -15', 'a(n-8) -16*a(n-14) -15', 'a(n-7) -16*a(n-13) -15', 'a(n-6) -64*a(n-15) -63', 'a(n-5) -64*a(n-14) -63', 'a(n-4) -64*a(n-13) -63', 'a(n-3) -256*a(n-15) -255', 'a(n-13) -4*a(n-16) -3', 'a(n-12) -4*a(n-15) -3', 'a(n-11) -4*a(n-14) -3', 'a(n-10) -16*a(n-16) -15', 'a(n-9) -16*a(n-15) -15', 'a(n-8) -16*a(n-14) -15', 'a(n-7) -64*a(n-16) -63', 'a(n-6) -64*a(n-15) -63', 'a(n-5) -64*a(n-14) -63', 'a(n-4) -256*a(n-16) -255', 'a(n-14) -4*a(n-17) -3', 'a(n-13) -4*a(n-16) -3', 'a(n-12) -4*a(n-15) -3', 'a(n-11) -16*a(n-17) -15', 'a(n-10) -16*a(n-16) -15', 'a(n-9) -16*a(n-15) -15', 'a(n-8) -64*a(n-17) -63', 'a(n-7) -64*a(n-16) -63', 'a(n-6) -64*a(n-15) -63', 'a(n-5) -256*a(n-17) -255', 'a(n-15) -4*a(n-18) -3', 'a(n-14) -4*a(n-17) -3', 'a(n-13) -4*a(n-16) -3', 'a(n-12) -16*a(n-18) -15', 'a(n-11) -16*a(n-17) -15', 'a(n-10) -16*a(n-16) -15', 'a(n-9) -64*a(n-18) -63', 'a(n-8) -64*a(n-17) -63', 'a(n-7) -64*a(n-16) -63', 'a(n-6) -256*a(n-18) -255', 'a(n-16) -4*a(n-19) -3', 'a(n-15) -4*a(n-18) -3', 'a(n-14) -4*a(n-17) -3', 'a(n-13) -16*a(n-19) -15', 'a(n-12) -16*a(n-18) -15', 'a(n-11) -16*a(n-17) -15', 'a(n-10) -64*a(n-19) -63', 'a(n-9) -64*a(n-18) -63', 'a(n-8) -64*a(n-17) -63', 'a(n-7) -256*a(n-19) -255', 'a(n-17) -4*a(n-20) -3', 'a(n-16) -4*a(n-19) -3', 'a(n-15) -4*a(n-18) -3', 'a(n-14) -16*a(n-20) -15', 'a(n-13) -16*a(n-19) -15', 'a(n-12) -16*a(n-18) -15', 'a(n-11) -64*a(n-20) -63', 'a(n-10) -64*a(n-19) -63', 'a(n-9) -64*a(n-18) -63', 'a(n-8) -256*a(n-20) -255']
A180516: 
MB not reconst
truth: 
a(n) = 1*a(n - 1) + 0*a(n - 2) + 4*a(n - 3) + -4*a(n - 4),  
a(0) = 0, a(1) = 1, a(2) = 2, a(3) = 3

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    


orders_used: [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
While total time consumed by now, scale:19550/27236, seq_id:A175162, order:20 took:
 54.3 seconds, i.e. 0.9 minutes or 0.015 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
non_linears:
['a(n) -2*a(n-1) +16', 'a(n-1) -2*a(n-2) +16', 'a(n) -4*a(n-2) +48', 'a(n-2) -2*a(n-3) +16', 'a(n-1) -4*a(n-3) +48', 'a(n) -8*a(n-3) +112', 'a(n-3) -2*a(n-4) +16', 'a(n-2) -4*a(n-4) +48', 'a(n-1) -8*a(n-4) +112', 'a(n) -16*a(n-4) +240', 'a(n-4) -2*a(n-5) +16', 'a(n-3) -4*a(n-5) +48', 'a(n-2) -8*a(n-5) +112', 'a(n-1) -16*a(n-5) +240', 'a(n) -32*a(n-5) +496', 'a(n-5) -2*a(n-6) +16', 'a(n-4) -4*a(n-6) +48', 'a(n-3) -8*a(n-6) +112', 'a(n-2) -16*a(n-6) +240', 'a(n-1) -32*a(n-6) +496', 'a(n) -64*a(n-6) +1008', 'a(n-6) -2*a(n-7) +16', 'a(n-5) -4*a(n-7) +48', 'a(n-4) -8*a(n-7) +112', 'a(n-3) -16*a(n-7) +240', 'a(n-2) -32*a(n-7) +496', 'a(n-1) -64*a(n-7) +1008', 'a(n) -128*a(n-7) +2032', 'a(n-7) -2*a(n-8) +16', 'a(n-6) -4*a(n-8) +48', 'a(n-5) -8*a(n-8) +112', 'a(n-4) -16*a(n-8) +240', 'a(n-3) -32*a(n-8) +496', 'a(n-2) -64*a(n-8) +1008', 'a(n-1) -128*a(n-8) +2032', 'a(n) -256*a(n-8) +4080', 'a(n-8) -2*a(n-9) +16', 'a(n-7) -4*a(n-9) +48', 'a(n-6) -8*a(n-9) +112', 'a(n-5) -16*a(n-9) +240', 'a(n-4) -32*a(n-9) +496', 'a(n-3) -64*a(n-9) +1008', 'a(n-2) -128*a(n-9) +2032', 'a(n-1) -256*a(n-9) +4080', 'a(n) -512*a(n-9) +8176', 'a(n-9) -2*a(n-10) +16', 'a(n-8) -4*a(n-10) +48', 'a(n-7) -8*a(n-10) +112', 'a(n-6) -16*a(n-10) +240', 'a(n-5) -32*a(n-10) +496', 'a(n-4) -64*a(n-10) +1008', 'a(n-3) -128*a(n-10) +2032', 'a(n-2) -256*a(n-10) +4080', 'a(n-1) -512*a(n-10) +8176', 'a(n) -1024*a(n-10) +16368', 'a(n-10) -2*a(n-11) +16', 'a(n-9) -4*a(n-11) +48', 'a(n-8) -8*a(n-11) +112', 'a(n-7) -16*a(n-11) +240', 'a(n-6) -32*a(n-11) +496', 'a(n-5) -64*a(n-11) +1008', 'a(n-4) -128*a(n-11) +2032', 'a(n-3) -256*a(n-11) +4080', 'a(n-2) -512*a(n-11) +8176', 'a(n-1) -1024*a(n-11) +16368', 'a(n-11) -2*a(n-12) +16', 'a(n-10) -4*a(n-12) +48', 'a(n-9) -8*a(n-12) +112', 'a(n-8) -16*a(n-12) +240', 'a(n-7) -32*a(n-12) +496', 'a(n-6) -64*a(n-12) +1008', 'a(n-5) -128*a(n-12) +2032', 'a(n-4) -256*a(n-12) +4080', 'a(n-3) -512*a(n-12) +8176', 'a(n-2) -1024*a(n-12) +16368', 'a(n-12) -2*a(n-13) +16', 'a(n-11) -4*a(n-13) +48', 'a(n-10) -8*a(n-13) +112', 'a(n-9) -16*a(n-13) +240', 'a(n-8) -32*a(n-13) +496', 'a(n-7) -64*a(n-13) +1008', 'a(n-6) -128*a(n-13) +2032', 'a(n-5) -256*a(n-13) +4080', 'a(n-4) -512*a(n-13) +8176', 'a(n-3) -1024*a(n-13) +16368', 'a(n-13) -2*a(n-14) +16', 'a(n-12) -4*a(n-14) +48', 'a(n-11) -8*a(n-14) +112', 'a(n-10) -16*a(n-14) +240', 'a(n-9) -32*a(n-14) +496', 'a(n-8) -64*a(n-14) +1008', 'a(n-7) -128*a(n-14) +2032', 'a(n-6) -256*a(n-14) +4080', 'a(n-5) -512*a(n-14) +8176', 'a(n-4) -1024*a(n-14) +16368', 'a(n-14) -2*a(n-15) +16', 'a(n-13) -4*a(n-15) +48', 'a(n-12) -8*a(n-15) +112', 'a(n-11) -16*a(n-15) +240', 'a(n-10) -32*a(n-15) +496', 'a(n-9) -64*a(n-15) +1008', 'a(n-8) -128*a(n-15) +2032', 'a(n-7) -256*a(n-15) +4080', 'a(n-6) -512*a(n-15) +8176', 'a(n-5) -1024*a(n-15) +16368', 'a(n-15) -2*a(n-16) +16', 'a(n-14) -4*a(n-16) +48', 'a(n-13) -8*a(n-16) +112', 'a(n-12) -16*a(n-16) +240', 'a(n-11) -32*a(n-16) +496', 'a(n-10) -64*a(n-16) +1008', 'a(n-9) -128*a(n-16) +2032', 'a(n-8) -256*a(n-16) +4080', 'a(n-7) -512*a(n-16) +8176', 'a(n-6) -1024*a(n-16) +16368', 'a(n-16) -2*a(n-17) +16', 'a(n-15) -4*a(n-17) +48', 'a(n-14) -8*a(n-17) +112', 'a(n-13) -16*a(n-17) +240', 'a(n-12) -32*a(n-17) +496', 'a(n-11) -64*a(n-17) +1008', 'a(n-10) -128*a(n-17) +2032', 'a(n-9) -256*a(n-17) +4080', 'a(n-8) -512*a(n-17) +8176', 'a(n-7) -1024*a(n-17) +16368', 'a(n-17) -2*a(n-18) +16', 'a(n-16) -4*a(n-18) +48', 'a(n-15) -8*a(n-18) +112', 'a(n-14) -16*a(n-18) +240', 'a(n-13) -32*a(n-18) +496', 'a(n-12) -64*a(n-18) +1008', 'a(n-11) -128*a(n-18) +2032', 'a(n-10) -256*a(n-18) +4080', 'a(n-9) -512*a(n-18) +8176', 'a(n-8) -1024*a(n-18) +16368', 'a(n-18) -2*a(n-19) +16', 'a(n-17) -4*a(n-19) +48', 'a(n-16) -8*a(n-19) +112', 'a(n-15) -16*a(n-19) +240', 'a(n-14) -32*a(n-19) +496', 'a(n-13) -64*a(n-19) +1008', 'a(n-12) -128*a(n-19) +2032', 'a(n-11) -256*a(n-19) +4080', 'a(n-10) -512*a(n-19) +8176', 'a(n-9) -1024*a(n-19) +16368', 'a(n-19) -2*a(n-20) +16', 'a(n-18) -4*a(n-20) +48', 'a(n-17) -8*a(n-20) +112', 'a(n-16) -16*a(n-20) +240', 'a(n-15) -32*a(n-20) +496', 'a(n-14) -64*a(n-20) +1008', 'a(n-13) -128*a(n-20) +2032', 'a(n-12) -256*a(n-20) +4080', 'a(n-11) -512*a(n-20) +8176', 'a(n-10) -1024*a(n-20) +16368']
A175162: 
MB not reconst
truth: 
a(n) = 3*a(n - 1) + -2*a(n - 2),  
a(0) = 32, a(1) = 48

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    


orders_used: [1, 1, 1, 2, 1, 3, 2, 1, 4, 3, 2, 1, 5, 4, 3, 2, 1, 6, 5, 4, 3, 2, 1, 7, 6, 5, 4, 3, 2, 8, 7, 6, 5, 4, 9, 8, 7, 6, 9, 9, 9, 9, 9, 10, 9, 8, 10, 10]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:6023/10000, seq_id:A040326, order:20 took:
 34.2 seconds, i.e. 0.57 minutes or 0.009 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
eqs_explicit:
['a(n) = 845*a(n-10)/413 - 18*a(n-9)/413 - 108*a(n-8)/413 - 18*a(n-7)/413 - 180/413']
non_linears:
['a(n)*a(n-1) -a(n) -a(n-1) +1', 'n*a(n-1)^3 +(-183/7)*n*a(n-1)^2 +(-57/7)*a(n-1)^3 +(500/7)*n*a(n-1) +(1233/7)*a(n-1)^2 +(-324/7)*n +(-3300/7)*a(n-1) +2124/7', 'a(n-1)^4 +(-216/7)*n*a(n-1)^2 +(-279/7)*a(n-1)^3 +(648/7)*n*a(n-1) +(3380/7)*a(n-1)^2 +(-432/7)*n +(-8292/7)*a(n-1) +5184/7', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-2)*a(n-3) -a(n-2) -a(n-3) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n-2)*a(n-3) -a(n-2) -a(n-3) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-4)*a(n-5) -a(n-4) -a(n-5) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n-2)*a(n-3) -a(n-2) -a(n-3) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-5)*a(n-6) -a(n-5) -a(n-6) +1', 'a(n-4)*a(n-5) -a(n-4) -a(n-5) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n-2)*a(n-3) -a(n-2) -a(n-3) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n)*a(n-1) -a(n) -a(n-1) +1', 'a(n-6)*a(n-7) -a(n-6) -a(n-7) +1', 'a(n-5)*a(n-6) -a(n-5) -a(n-6) +1', 'a(n-4)*a(n-5) -a(n-4) -a(n-5) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n-2)*a(n-3) -a(n-2) -a(n-3) +1', 'a(n-1)*a(n-2) -a(n-1) -a(n-2) +1', 'a(n-7)*a(n-8) -a(n-7) -a(n-8) +1', 'a(n-6)*a(n-7) -a(n-6) -a(n-7) +1', 'a(n-5)*a(n-6) -a(n-5) -a(n-6) +1', 'a(n-4)*a(n-5) -a(n-4) -a(n-5) +1', 'a(n-3)*a(n-4) -a(n-3) -a(n-4) +1', 'a(n-8)*a(n-9) -a(n-8) -a(n-9) +1', 'a(n-7)*a(n-8) -a(n-7) -a(n-8) +1', 'a(n-6)*a(n-7) -a(n-6) -a(n-7) +1', 'a(n-5)*a(n-6) -a(n-5) -a(n-6) +1', 'a(n-5)*a(n-9) +(-298/293)*a(n-5) +(-17/293)*a(n-6) +(-77/293)*a(n-7) +(-17/293)*a(n-8) +(-298/293)*a(n-9) +516/293', 'a(n-6)*a(n-8) +(20/293)*a(n-5) +(-518/293)*a(n-6) +(15/293)*a(n-7) +(-518/293)*a(n-8) +(20/293)*a(n-9) +573/293', 'a(n-5)*a(n-7) +(-606/293)*a(n-5) +(-68/293)*a(n-6) +(-601/293)*a(n-7) +(-68/293)*a(n-8) +(-20/293)*a(n-9) +1478/293', 'a(n-5)^2 +(-2031/293)*a(n-5) +(68/293)*a(n-6) +(308/293)*a(n-7) +(68/293)*a(n-8) +(20/293)*a(n-9) +866/293', 'a(n-8)^2 +(-20/293)*a(n-5) +(225/293)*a(n-6) +(-15/293)*a(n-7) +(-2119/293)*a(n-8) +(-20/293)*a(n-9) +1771/293', 'a(n-9)*a(n-10) -a(n-9) -a(n-10) +1', 'a(n-8)*a(n-9) -a(n-8) -a(n-9) +1', 'a(n-7)*a(n-8) -a(n-7) -a(n-8) +1', 'a(n-2) +(-1725/236)*a(n-7) +(-25/236)*a(n-8) +(85/59)*a(n-9) +(25/59)*a(n-10) +1099/236', 'a(n) +(18/413)*a(n-7) +(108/413)*a(n-8) +(18/413)*a(n-9) +(-845/413)*a(n-10) +180/413']
A040326: 
a(n) = 845*a(n-10)/413 - 18*a(n-9)/413 - 108*a(n-8)/413 - 18*a(n-7)/413 - 180/413
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

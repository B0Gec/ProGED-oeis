
orders_used: [1, 2, 1, 3, 3, 3, 2, 1, 3, 3, 3, 3, 3, 4, 3, 4, 4, 3, 4, 3, 4, 4, 4, 5, 5, 4, 3, 5, 5, 5, 5, 5, 5, 6, 6, 5, 5, 4, 3, 6, 5, 6, 6]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:3810/10000, seq_id:A029391, order:20 took:
 29.9 seconds, i.e. 0.5 minutes or 0.008 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
eqs_explicit:
['a(n) = (3*n + 9*a(n-6) - 4*a(n-5) - 7*a(n-4) - 7*a(n-3) - 4*a(n-2) - 4*a(n-1) - 13)/(7*a(n-1) + 3)']
non_linears:
['a(n-1)^3 -3*a(n-1)^2 +2*a(n-1)', 'a(n-2)^3 -3*a(n-2)^2 +2*a(n-2)', 'a(n-1)^3 -3*a(n-1)^2 +2*a(n-1)', 'a(n)*a(n-3)', 'a(n-1)*a(n-3) -2*a(n-3)^2 +2*a(n-3)', 'a(n-3)^3 -3*a(n-3)^2 +2*a(n-3)', 'a(n-2)^3 -3*a(n-2)^2 +2*a(n-2)', 'a(n-1)^3 -3*a(n-1)^2 +2*a(n-1)', 'a(n-2)*a(n-3)^2 -a(n-2)*a(n-3) -a(n-3)^2 +a(n-3)', 'n*a(n-3)^2 -n*a(n-3) -13*a(n-3)^2 +13*a(n-3)', 'a(n-1)*a(n-2) +a(n-2)*a(n-3) +(-3/2)*a(n-3)^2 -a(n-2) +(3/2)*a(n-3)', 'a(n-2)^2*a(n-3) -n*a(n-2) +5*a(n-2)^2 +2*a(n-3)^2 +2*a(n-2) -2*a(n-3)', 'a(n)*a(n-2) +2*n*a(n-2) -12*a(n-2)^2 -2*a(n-2)*a(n-3) -4*a(n-3)^2 -2*a(n-2) +4*a(n-3)', 'a(n-1)*a(n-4)', 'a(n)*a(n-3)', 'a(n-3)^2*a(n-4) -a(n-3)*a(n-4)', 'a(n-2)*a(n-4) -2*a(n-4)^2 +2*a(n-4)', 'a(n-1)*a(n-3) -2*a(n-3)^2 +2*a(n-3)', 'a(n-4)^3 -3*a(n-4)^2 +2*a(n-4)', 'a(n-3)^3 -3*a(n-3)^2 +2*a(n-3)', 'a(n-3)*a(n-4)^2 -a(n-3)*a(n-4) -a(n-4)^2 +a(n-4)', 'n*a(n-4)^2 -n*a(n-4) -14*a(n-4)^2 +14*a(n-4)', 'a(n-2)*a(n-3) +a(n-3)*a(n-4) +(-3/2)*a(n-4)^2 -a(n-3) +(3/2)*a(n-4)', 'a(n-3)*a(n-5)', 'a(n-2)*a(n-5)', 'a(n-1)*a(n-4)', 'a(n)*a(n-3)', 'a(n-5)^2 -a(n-5)', 'a(n)*a(n-4) -2*a(n-4)*a(n-5)', 'a(n)*a(n-5) -a(n-4)*a(n-5) -a(n-5)', 'a(n-3)*a(n-4) +a(n-4)*a(n-5) -a(n-4)', 'n*a(n-5) -3*a(n-1)*a(n-5) -5*a(n-4)*a(n-5) -5*a(n-5)', 'a(n)*a(n-1) -a(n-1)*a(n-5) +a(n-4)*a(n-5) -a(n) +a(n-5)', 'a(n-4)*a(n-6)', 'a(n-3)*a(n-6)', 'a(n-3)*a(n-5)', 'a(n-2)*a(n-5)', 'a(n-1)*a(n-4)', 'a(n)*a(n-3)', 'a(n-6)^2 -a(n-6)', 'a(n-5)^2 -a(n-5)', 'a(n)*n -8*a(n) -3*n +4*a(n-1) +4*a(n-2) +7*a(n-3) +7*a(n-4) +6*a(n-5) +3*a(n-6) +13', 'a(n)*a(n-1) +(3/7)*a(n) +(-3/7)*n +(4/7)*a(n-1) +(4/7)*a(n-2) +a(n-3) +a(n-4) +(4/7)*a(n-5) +(-9/7)*a(n-6) +13/7']
A029391: 
a(n) = (3*n + 9*a(n-6) - 4*a(n-5) - 7*a(n-4) - 7*a(n-3) - 4*a(n-2) - 4*a(n-1) - 13)/(7*a(n-1) + 3)
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

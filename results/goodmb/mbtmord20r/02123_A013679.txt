
orders_used: [8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 10, 10, 10, 10, 10, 10, 12, 11, 10, 10, 10, 13, 12, 11, 10, 14, 13, 12, 11]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:2124/10000, seq_id:A013679, order:20 took:
 30.3 seconds, i.e. 0.5 minutes or 0.008 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 8.
eqs_explicit:
[]
non_linears:
['a(n-8)^2 +(-168/953)*a(n-3) +(-258/953)*a(n-4) +(-60/953)*a(n-5) +(300/953)*a(n-6) +(162/953)*a(n-7) +(-5145/953)*a(n-8) +5158/953', 'a(n-6)*a(n-7) +(1665/953)*a(n-3) +(1638/953)*a(n-4) +(-18/953)*a(n-5) +(-3722/953)*a(n-6) +(-2048/953)*a(n-7) +(2745/953)*a(n-8) -7792/953', 'a(n-4)*a(n-7) +(795/953)*a(n-3) +(-2489/953)*a(n-4) +(-1554/953)*a(n-5) +(-807/953)*a(n-6) +(-3047/953)*a(n-7) +(2547/953)*a(n-8) +7415/953', 'n +(22/461)*a(n-5) +(-139/461)*a(n-6) +(-261/461)*a(n-7) +(-257/461)*a(n-8) +(32/461)*a(n-9) -3612/461', 'a(n-8)*a(n-9) +(162/461)*a(n-5) +(108/461)*a(n-6) +(-36/461)*a(n-7) +(-719/461)*a(n-8) +(-854/461)*a(n-9) +392/461', 'a(n-5)*a(n-9) +(-218/461)*a(n-5) +(162/461)*a(n-6) +(-54/461)*a(n-7) +(-387/461)*a(n-8) +(-359/461)*a(n-9) -334/461', 'a(n-8)^2 +(54/461)*a(n-5) +(36/461)*a(n-6) +(-12/461)*a(n-7) +(-2391/461)*a(n-8) +(330/461)*a(n-9) +1360/461', 'a(n-4) +(-211/461)*a(n-5) +(-448/461)*a(n-6) +(-619/461)*a(n-7) +(1019/461)*a(n-8) +(657/461)*a(n-9) -687/461', 'a(n-3) +(795/461)*a(n-5) +(69/461)*a(n-6) +(438/461)*a(n-7) +(-1010/461)*a(n-8) +(863/461)*a(n-9) -5384/461', 'a(n-9)^2 +(-162/461)*a(n-5) +(-108/461)*a(n-6) +(36/461)*a(n-7) +(258/461)*a(n-8) +(-2373/461)*a(n-9) +2374/461', 'a(n-5)*a(n-7) +(-434/461)*a(n-5) +(18/461)*a(n-6) +(-1850/461)*a(n-7) +(-504/461)*a(n-8) +(1548/461)*a(n-9) +680/461', 'a(n-2) +(-420/461)*a(n-5) +(642/461)*a(n-6) +(247/461)*a(n-7) +(464/461)*a(n-8) +(-1491/461)*a(n-9) -1409/461', 'a(n-1) +(882/461)*a(n-5) +(127/461)*a(n-6) +(-196/461)*a(n-7) +(-1251/461)*a(n-8) +(780/461)*a(n-9) -3449/461', 'a(n-10)^2 -5*a(n-10) +4', 'a(n-9)*a(n-10) -a(n-9) -2*a(n-10) +2', 'a(n-8)*a(n-10) -a(n-8) -4*a(n-10) +4', 'a(n-7)*a(n-10) -a(n-7) -7*a(n-10) +7', 'a(n-9)^2 -5*a(n-9) +(2/3)*a(n-10) +10/3', 'a(n-7)*a(n-9) -a(n-7) -4*a(n-9) -a(n-10) +5', 'a(n-8)*a(n-9) -a(n-8) -2*a(n-9) +(-2/3)*a(n-10) +8/3', 'a(n-2) -a(n-7) +(1/3)*a(n-9) +(8/9)*a(n-10) -11/9', 'a(n-8)^2 -5*a(n-8) +(2/3)*a(n-9) +(-2/9)*a(n-10) +32/9', 'a(n-7)*a(n-8) -a(n-7) -2*a(n-8) +(-2/3)*a(n-9) +(-43/9)*a(n-10) +67/9', 'a(n-11) -1', 'a(n-10)^2 -5*a(n-10) +4', 'a(n-9)*a(n-10) -a(n-9) -2*a(n-10) +2', 'a(n-8)*a(n-10) -a(n-8) -4*a(n-10) +4', 'a(n-9)^2 -5*a(n-9) +(2/3)*a(n-10) +10/3', 'a(n-8)*a(n-9) -a(n-8) -2*a(n-9) +(-2/3)*a(n-10) +8/3', 'a(n-8)^2 -5*a(n-8) +(2/3)*a(n-9) +(-2/9)*a(n-10) +32/9', 'a(n-12) -1', 'a(n-11) -1', 'a(n-10)^2 -5*a(n-10) +4', 'a(n-9)*a(n-10) -a(n-9) -2*a(n-10) +2', 'a(n-9)^2 -5*a(n-9) +(2/3)*a(n-10) +10/3', 'a(n-13) -1', 'a(n-12) -1', 'a(n-11) -1', 'a(n-10)^2 -5*a(n-10) +4', 'a(n-14) -1', 'a(n-13) -1', 'a(n-12) -1', 'a(n-11) -1']
A013679: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    


orders_used: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 5, 5, 5, 5, 5, 5, 5, 6, 5, 4, 6, 6]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:3431/10000, seq_id:A028326, order:20 took:
 27.8 seconds, i.e. 0.46 minutes or 0.008 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 3.
eqs_explicit:
['a(n) = 41*n*a(n-5)/26 + 11*n/13 - 77*a(n-6)/13 - 519*a(n-5)/26 - 41*a(n-4)/13 - 9*a(n-3)/13 - 9*a(n-2)/13 + 3*a(n-1)/13 + 517/13']
non_linears:
['a(n-1)*a(n-3)^2 -10*a(n-1)*a(n-3) -2*a(n-3)^2 +16*a(n-1) +20*a(n-3) -32', 'a(n-1)^2*a(n-3) -2*a(n-1)^2 -10*a(n-1)*a(n-3) +20*a(n-1) +16*a(n-3) -32', 'a(n-3)^3 +(-4/3)*a(n-1)*a(n-3) -12*a(n-3)^2 +(8/3)*a(n-1) +(140/3)*a(n-3) -160/3', 'a(n-1)*a(n-2)*a(n-3) -2*a(n-1)*a(n-2) -12*a(n-1)*a(n-3) -2*a(n-2)*a(n-3) +24*a(n-1) +4*a(n-2) +24*a(n-3) -48', 'a(n-2)^2*a(n-3) -2*a(n-2)^2 -10*a(n-1)*a(n-3) -8*a(n-2)*a(n-3) +20*a(n-1) +16*a(n-2) +32*a(n-3) -64', 'a(n-2)*a(n-3)^2 +(-10/3)*a(n-1)*a(n-3) -8*a(n-2)*a(n-3) -2*a(n-3)^2 +(20/3)*a(n-1) +12*a(n-2) +(68/3)*a(n-3) -112/3', 'n*a(n-3) +(-1/4)*a(n-1)*a(n-3) +(1/4)*a(n-2)*a(n-3) -2*a(n-3)^2 -2*n +(1/2)*a(n-1) +(-1/2)*a(n-2) +5*a(n-3) -2', 'a(n)*a(n-3) +(-7/6)*a(n-1)*a(n-3) +(3/2)*a(n-2)*a(n-3) -a(n-3)^2 -2*a(n) +(7/3)*a(n-1) -3*a(n-2) +(-2/3)*a(n-3) +16/3', 'a(n)*a(n-2) -3*a(n-1)*a(n-2) +6*a(n-2)^2 +(-10/3)*a(n-1)*a(n-3) -3*a(n-2)*a(n-3) -2*a(n) +(38/3)*a(n-1) -26*a(n-2) +(38/3)*a(n-3) +44/3', 'a(n-2)^3 -4*a(n-1)*a(n-2) -4*a(n-2)^2 +(-160/9)*a(n-1)*a(n-3) -4*a(n-2)*a(n-3) +(392/9)*a(n-1) +12*a(n-2) +(392/9)*a(n-3) -784/9', 'a(n-2)*a(n-4) -2*a(n-2) -2*a(n-4) +4', 'a(n-4)^3 -12*a(n-4)^2 +44*a(n-4) -48', 'a(n-3)*a(n-4)^2 -8*a(n-3)*a(n-4) -2*a(n-4)^2 +12*a(n-3) +16*a(n-4) -24', 'a(n-3)^2*a(n-4) -2*a(n-3)^2 -8*a(n-3)*a(n-4) +16*a(n-3) +12*a(n-4) -24', 'a(n)*a(n-4) +a(n-3)*a(n-4) -3*a(n-4)^2 -2*a(n) -2*a(n-3) +10*a(n-4) -8', 'a(n-1)*a(n-4) +(3/2)*a(n-3)*a(n-4) -a(n-4)^2 -2*a(n-1) -3*a(n-3) -3*a(n-4) +10', 'n*a(n-4) +(1/4)*a(n-3)*a(n-4) -2*a(n-4)^2 -2*n +(-1/2)*a(n-3) +(7/2)*a(n-4) +1', 'a(n-3)^3 -4*a(n-2)*a(n-3) -4*a(n-3)^2 -4*a(n-3)*a(n-4) +8*a(n-2) +12*a(n-3) +8*a(n-4) -16', 'a(n-2)*a(n-3)^2 -18*a(n-2)*a(n-3) +18*a(n-3)^2 -10*a(n-3)*a(n-4) +32*a(n-2) -64*a(n-3) +20*a(n-4) +56', 'a(n-1)*a(n-3) -3*a(n-2)*a(n-3) +6*a(n-3)^2 -3*a(n-3)*a(n-4) -2*a(n-1) +6*a(n-2) -26*a(n-3) +6*a(n-4) +28', 'a(n-3)*a(n-5) -2*a(n-3) -2*a(n-5) +4', 'a(n-2)*a(n-4) -2*a(n-2) -2*a(n-4) +4', 'a(n-5)^3 -12*a(n-5)^2 +44*a(n-5) -48', 'a(n-4)*a(n-5)^2 -8*a(n-4)*a(n-5) -2*a(n-5)^2 +12*a(n-4) +16*a(n-5) -24', 'a(n-1)*a(n-5) +a(n-4)*a(n-5) -3*a(n-5)^2 -2*a(n-1) -2*a(n-4) +10*a(n-5) -8', 'a(n-2)*a(n-5) +(3/2)*a(n-4)*a(n-5) -a(n-5)^2 -2*a(n-2) -3*a(n-4) -3*a(n-5) +10', 'a(n)*a(n-5) -a(n-4)*a(n-5) -3*a(n-5)^2 -2*a(n) +2*a(n-4) +18*a(n-5) -24', 'n*a(n-5) +(1/4)*a(n-4)*a(n-5) -2*a(n-5)^2 -2*n +(-1/2)*a(n-4) +(5/2)*a(n-5) +3', 'a(n)*a(n-2) +(9/4)*a(n-4)*a(n-5) +(-9/2)*a(n-5)^2 -2*a(n) -2*a(n-2) +(-9/2)*a(n-4) +(45/2)*a(n-5) -23', 'a(n-4)*a(n-6) -2*a(n-4) -2*a(n-6) +4', 'a(n-3)*a(n-5) -2*a(n-3) -2*a(n-5) +4', 'a(n-2)*a(n-4) -2*a(n-2) -2*a(n-4) +4', 'n*a(n-3) +8*n -3*a(n-1) -5*a(n-2) -17*a(n-3) -9*a(n-4) -4*a(n-5) -a(n-6) +28', 'n*a(n-5) +(-26/41)*a(n) +(22/41)*n +(6/41)*a(n-1) +(-18/41)*a(n-2) +(-18/41)*a(n-3) -2*a(n-4) +(-519/41)*a(n-5) +(-154/41)*a(n-6) +1034/41']
A028326: 
a(n) = 41*n*a(n-5)/26 + 11*n/13 - 77*a(n-6)/13 - 519*a(n-5)/26 - 41*a(n-4)/13 - 9*a(n-3)/13 - 9*a(n-2)/13 + 3*a(n-1)/13 + 517/13
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

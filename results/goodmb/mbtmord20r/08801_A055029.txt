
orders_used: [0, 1, 1, 0, 2, 2, 1, 2, 1, 0, 2, 2, 3, 3, 2, 2, 1, 3, 2, 1, 3, 2, 4, 4, 3, 3, 2, 2, 1, 4, 4, 3, 5, 5, 5, 4, 4, 3, 3, 2, 2, 1, 6, 6, 6, 6, 5, 5, 5, 4, 4, 3, 7, 7, 7, 7, 6, 6, 6, 5, 5, 4, 8, 8, 8, 7, 7, 6, 6, 5, 5, 4, 9, 9, 8, 8, 7, 7, 6, 9, 10, 10, 10, 9, 8, 10, 10, 10, 9, 11, 11, 10, 11, 10, 11, 10, 11]
dasco's acc_1, acc_10: True, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:8802/10000, seq_id:A055029, order:20 took:
 60.1 seconds, i.e. 1.0 minutes or 0.017 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 0.
eqs_explicit:
['a(n) = 2*a(n-11)']
non_linears:
['a(n)^3 -3*a(n)^2 +2*a(n)', 'a(n)*a(n-1)', 'a(n-1)^3 -3*a(n-1)^2 +2*a(n-1)', 'a(n)^3 -3*a(n)^2 +2*a(n)', 'a(n-1)*a(n-2)', 'a(n)*a(n-2)', 'a(n)*a(n-1)', 'a(n-2)^3 -3*a(n-2)^2 +2*a(n-2)', 'a(n-1)^3 -3*a(n-1)^2 +2*a(n-1)', 'a(n)^3 -3*a(n)^2 +2*a(n)', 'n*a(n-2)^2 -n*a(n-2) -7*a(n-2)^2 +7*a(n-2)', 'n^2*a(n-2) -15*n*a(n-2) +12*a(n-2)^2 +32*a(n-2)', 'a(n-2)*a(n-3)', 'a(n-1)*a(n-3)', 'a(n-1)*a(n-2)', 'a(n)*a(n-2)', 'a(n)*a(n-1)', 'a(n-3)^3 -3*a(n-3)^2 +2*a(n-3)', 'a(n-2)^3 -3*a(n-2)^2 +2*a(n-2)', 'a(n-1)^3 -3*a(n-1)^2 +2*a(n-1)', 'n*a(n-3)^2 -n*a(n-3) -8*a(n-3)^2 +8*a(n-3)', 'n*a(n-2)^2 -n*a(n-2) -7*a(n-2)^2 +7*a(n-2)', 'a(n-3)*a(n-4)', 'a(n-2)*a(n-4)', 'a(n-2)*a(n-3)', 'a(n-1)*a(n-3)', 'a(n-1)*a(n-2)', 'a(n)*a(n-2)', 'a(n)*a(n-1)', 'a(n-1)*a(n-4)^2 -a(n-1)*a(n-4)', 'a(n-4)^3 -3*a(n-4)^2 +2*a(n-4)', 'a(n-3)^3 -3*a(n-3)^2 +2*a(n-3)', 'a(n-4)*a(n-5)', 'a(n-3)*a(n-5)', 'a(n)*a(n-5)', 'a(n-3)*a(n-4)', 'a(n-2)*a(n-4)', 'a(n-2)*a(n-3)', 'a(n-1)*a(n-3)', 'a(n-1)*a(n-2)', 'a(n)*a(n-2)', 'a(n)*a(n-1)', 'a(n-5)*a(n-6)', 'a(n-4)*a(n-6)', 'a(n-1)*a(n-6)', 'a(n)*a(n-6)', 'a(n-4)*a(n-5)', 'a(n-3)*a(n-5)', 'a(n)*a(n-5)', 'a(n-3)*a(n-4)', 'a(n-2)*a(n-4)', 'a(n-2)*a(n-3)', 'a(n-6)*a(n-7)', 'a(n-5)*a(n-7)', 'a(n-2)*a(n-7)', 'a(n-1)*a(n-7)', 'a(n-5)*a(n-6)', 'a(n-4)*a(n-6)', 'a(n-1)*a(n-6)', 'a(n-4)*a(n-5)', 'a(n-3)*a(n-5)', 'a(n-3)*a(n-4)', 'a(n-7)*a(n-8)', 'a(n-6)*a(n-8)', 'a(n-3)*a(n-8)', 'a(n-6)*a(n-7)', 'a(n-5)*a(n-7)', 'a(n-5)*a(n-6)', 'a(n-4)*a(n-6)', 'a(n-4)*a(n-5)', 'a(n-3)*a(n-5)', 'a(n-3)*a(n-4)', 'a(n-8)*a(n-9)', 'a(n-7)*a(n-9)', 'a(n-7)*a(n-8)', 'a(n-6)*a(n-8)', 'a(n-6)*a(n-7)', 'a(n-5)*a(n-7)', 'a(n-5)*a(n-6)', 'a(n-6)*a(n-9) -a(n-6)', 'a(n-9)*a(n-10)', 'a(n-8)*a(n-10)', 'a(n-6)*a(n-10)', 'a(n-8)*a(n-9)', 'a(n-6)*a(n-8)', 'a(n-7) -2*a(n-10)', 'a(n-3) -a(n-10)', 'a(n-10)^2 -a(n-10)', 'a(n-6)*a(n-9) -a(n-6)', 'a(n-10)*a(n-11)', 'a(n-9)*a(n-11)', 'a(n-9)*a(n-10)', 'a(n-8) -2*a(n-11)', 'a(n-7) -2*a(n-10)', 'a(n-4) -a(n-11)', 'a(n-3) -a(n-10)', 'a(n) -2*a(n-11)']
A055029: 
a(n) = 2*a(n-11)
truth: 
None

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    


orders_used: [8, 8, 8, 8, 8, 8, 8, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13]
dasco's acc_1, acc_10: True, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:6307/10000, seq_id:A040610, order:20 took:
 26.5 seconds, i.e. 0.44 minutes or 0.007 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 8.
eqs_explicit:
['a(n) = a(n-13)/7 + 3/7']
non_linears:
['a(n-4)*a(n-7) +(-37/72)*a(n-3) +(-3/2)*a(n-4) +(-5/6)*a(n-5) +(-5/6)*a(n-6) +(-3/2)*a(n-7) +(-37/72)*a(n-8) +131/9', 'a(n-3)*a(n-8) +(-175/72)*a(n-3) +(3/2)*a(n-4) +(7/6)*a(n-5) +(7/6)*a(n-6) +(3/2)*a(n-7) +(-175/72)*a(n-8) -178/9', 'a(n-5)*a(n-7) +(95/648)*a(n-3) +(1/6)*a(n-4) +(-155/54)*a(n-5) +(7/54)*a(n-6) +(-17/6)*a(n-7) +(95/648)*a(n-8) +443/81', 'a(n-5)*a(n-6) +(-95/324)*a(n-3) +(-1/3)*a(n-4) +(-88/27)*a(n-5) +(-88/27)*a(n-6) +(-1/3)*a(n-7) +(-95/324)*a(n-8) +1301/81', 'a(n-6)*a(n-7) +(-8645/19224)*a(n-3) +(4/89)*a(n-4) +(46/801)*a(n-5) +(-2456/801)*a(n-6) +(-272/89)*a(n-7) +(23/216)*a(n-8) +23515/2403', 'a(n-6)^2 +(-5225/1068)*a(n-3) +(-891/356)*a(n-4) +(-649/356)*a(n-5) +(-6231/356)*a(n-6) +(-1089/356)*a(n-7) +(-11/6)*a(n-8) +26321/267', 'a(n-3)*a(n-6) +(3671/6408)*a(n-3) +(357/356)*a(n-4) +(701/1068)*a(n-5) +(359/1068)*a(n-6) +(555/356)*a(n-7) +(37/72)*a(n-8) -22270/801', 'a(n-1) +(144/41)*a(n-7) +(300/41)*a(n-8) +(-1591/41)*a(n-9) +(241/41)*a(n-10) -146/41', 'a(n-7)*a(n-9) +(-739/205)*a(n-7) +(-108/205)*a(n-8) +(-57/205)*a(n-9) +(-72/205)*a(n-10) +411/41', 'n +(139/205)*a(n-7) +(88/205)*a(n-8) +(-728/205)*a(n-9) +(127/205)*a(n-10) -508/41', 'a(n-9)^2 +(186/205)*a(n-7) +(162/205)*a(n-8) +(-1657/205)*a(n-9) +(108/205)*a(n-10) +60/41', 'a(n-4) +(744/205)*a(n-7) +(648/205)*a(n-8) +(-3143/205)*a(n-9) +(432/205)*a(n-10) -416/41', 'a(n-7)*a(n-8) +(-367/205)*a(n-7) +(-399/205)*a(n-8) +(-1116/205)*a(n-9) +(144/205)*a(n-10) +285/41', 'a(n-3) +(-1008/205)*a(n-7) +(-911/205)*a(n-8) +(4536/205)*a(n-9) +(-744/205)*a(n-10) +352/41', 'a(n-8)*a(n-10) +(-1848/205)*a(n-7) +(-2251/205)*a(n-8) +(8316/205)*a(n-9) +(-1569/205)*a(n-10) +987/41', 'a(n-7)^2 +(-1711/205)*a(n-7) +(1188/205)*a(n-8) +(-6138/205)*a(n-9) +(792/205)*a(n-10) +1014/41', 'a(n-8)*a(n-9) +(-1884/205)*a(n-7) +(-2203/205)*a(n-8) +(7863/205)*a(n-9) +(-1332/205)*a(n-10) +1023/41', 'a(n-9)*a(n-11) -a(n-9) -a(n-11) +1', 'a(n-11)^2 -36*a(n-9) -29*a(n-11) +136', 'a(n-6) +(36/7)*a(n-9) +(3/7)*a(n-11) -132/7', 'a(n-5) +(-6/7)*a(n-9) +a(n-10) +(-4/7)*a(n-11) -6/7', 'a(n-9)*a(n-10) +(-4/7)*a(n-9) -3*a(n-10) +(2/7)*a(n-11) +10/7', 'a(n-10)^2 +(-3/14)*a(n-9) -4*a(n-10) +(-1/7)*a(n-11) +53/14', 'a(n-2) +(24/7)*a(n-9) -23*a(n-10) +(23/7)*a(n-11) +38/7', 'a(n-10)*a(n-11) +(-36/7)*a(n-9) -a(n-10) +(-31/7)*a(n-11) +139/7', 'a(n-3) -7*a(n-11) +a(n-12) +2', 'a(n-8) -21*a(n-11) +3*a(n-12) +6', 'a(n-7) +24*a(n-11) -3*a(n-12) -24', 'a(n-11)*a(n-12) -25*a(n-11) -a(n-12) +25', 'a(n-10) +(-14/3)*a(n-11) +(2/3)*a(n-12) +1', 'a(n-5) +(14/3)*a(n-11) +(-2/3)*a(n-12) -5', 'a(n-12) +(-1/7)*a(n-13) -3/7', 'a(n-7) +(-3/7)*a(n-13) -9/7', 'a(n) +(-1/7)*a(n-13) -3/7']
A040610: 
a(n) = a(n-13)/7 + 3/7
truth: 
None

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

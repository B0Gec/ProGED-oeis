
orders_used: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:1108/10000, seq_id:A006128, order:20 took:
 19.5 seconds, i.e. 0.32 minutes or 0.005 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 18.
eqs_explicit:
[]
non_linears:
['a(n-12) +(15/62)*a(n-13) +(-141/62)*a(n-14) +(-80/31)*a(n-15) +(30/31)*a(n-16) +(122/31)*a(n-17) +(17/62)*a(n-18) -121/31', 'n +(-91/496)*a(n-13) +(-149/496)*a(n-14) +(9/31)*a(n-15) +(63/62)*a(n-16) +(39/248)*a(n-17) +(-471/496)*a(n-18) -3887/248', 'a(n-10) +(-981/496)*a(n-13) +(-2075/496)*a(n-14) +(3/31)*a(n-15) +(207/62)*a(n-16) +(1377/248)*a(n-17) +(-281/496)*a(n-18) -3073/248', 'a(n-4) +(-1241/62)*a(n-13) +(-2545/62)*a(n-14) +(243/31)*a(n-15) +(2478/31)*a(n-16) +(1515/31)*a(n-17) +(-2725/62)*a(n-18) -6907/31', 'a(n-11) +(-1045/496)*a(n-13) +(-1275/496)*a(n-14) +(25/31)*a(n-15) +(361/62)*a(n-16) +(129/248)*a(n-17) +(-1577/496)*a(n-18) -953/248', 'a(n-16)*a(n-18) +(499/62)*a(n-13) +(-6935/62)*a(n-14) +(232/31)*a(n-15) +(15444/31)*a(n-16) +(353/31)*a(n-17) +(-49237/62)*a(n-18) -11457/31', 'a(n-9) +(-817/248)*a(n-13) +(-1335/248)*a(n-14) +(-99/31)*a(n-15) +(351/31)*a(n-16) +(1165/124)*a(n-17) +(-1269/248)*a(n-18) -2693/124', 'a(n-8) +(-973/248)*a(n-13) +(-3043/248)*a(n-14) +(16/31)*a(n-15) +(583/31)*a(n-16) +(1409/124)*a(n-17) +(-2041/248)*a(n-18) -4609/124', 'a(n-15)^2 +(15/31)*a(n-13) +(-14091/31)*a(n-14) +(7621/31)*a(n-15) +(62928/31)*a(n-16) +(-15318/31)*a(n-17) +(-94719/31)*a(n-18) -51516/31', 'a(n-15)*a(n-16) +(305/62)*a(n-13) +(-19545/62)*a(n-14) +(4036/31)*a(n-15) +(44010/31)*a(n-16) +(-6189/31)*a(n-17) +(-139299/62)*a(n-18) -36395/31', 'a(n-18)*a(n-19) -73*a(n-15) +30*a(n-16) +320*a(n-17) -38*a(n-18) -483*a(n-19) -226', 'a(n-13) +(-39/23)*a(n-15) +(-40/23)*a(n-16) +(-30/23)*a(n-17) +(61/23)*a(n-18) +(83/23)*a(n-19) -68/23', 'n +(-17/23)*a(n-15) +(-8/23)*a(n-16) +(63/23)*a(n-17) +(26/23)*a(n-18) +(-80/23)*a(n-19) -400/23', 'a(n-14) +(-55/23)*a(n-15) +(-80/23)*a(n-16) +(216/23)*a(n-17) +(122/23)*a(n-18) +(-317/23)*a(n-19) -90/23', 'a(n-12) +(-175/23)*a(n-15) +(-150/23)*a(n-16) +(589/23)*a(n-17) +(269/23)*a(n-18) +(-741/23)*a(n-19) -278/23', 'a(n-11) +(-205/23)*a(n-15) +(-156/23)*a(n-16) +(504/23)*a(n-17) +(369/23)*a(n-18) +(-640/23)*a(n-19) -463/23', 'a(n-10) +(-305/23)*a(n-15) +(-337/23)*a(n-16) +(972/23)*a(n-17) +(618/23)*a(n-18) +(-1162/23)*a(n-19) -796/23', 'a(n-9) +(-498/23)*a(n-15) +(-302/23)*a(n-16) +(1280/23)*a(n-17) +(740/23)*a(n-18) +(-1433/23)*a(n-19) -1208/23', 'a(n-19)^2 +(-958/23)*a(n-15) +(342/23)*a(n-16) +(4316/23)*a(n-17) +(-272/23)*a(n-18) +(-6815/23)*a(n-19) -3232/23', 'a(n-8) +(-816/23)*a(n-15) +(-706/23)*a(n-16) +(2794/23)*a(n-17) +(1547/23)*a(n-18) +(-3564/23)*a(n-19) -2226/23', 'a(n-9) -44*a(n-17) -16*a(n-18) +85*a(n-19) +18*a(n-20) -48', 'a(n-17)*a(n-20) +9*a(n-17) +87*a(n-18) -12*a(n-19) -303*a(n-20) -303', 'n +(-5/8)*a(n-17) +(-1/8)*a(n-18) +(3/2)*a(n-19) +(1/8)*a(n-20) -139/8', 'a(n-19)^2 +11*a(n-17) +51*a(n-18) -33*a(n-19) -161*a(n-20) -187', 'a(n-16) +(-3/8)*a(n-17) +(-31/8)*a(n-18) +(1/2)*a(n-19) +(39/8)*a(n-20) +11/8', 'a(n-15) +(-35/8)*a(n-17) +(1/8)*a(n-18) +(13/2)*a(n-19) +(-17/8)*a(n-20) -5/8', 'a(n-14) +(-19/8)*a(n-17) +(-63/8)*a(n-18) +(7/2)*a(n-19) +(95/8)*a(n-20) -5/8', 'a(n-13) +(-75/8)*a(n-17) +(-31/8)*a(n-18) +(31/2)*a(n-19) +(39/8)*a(n-20) -13/8', 'a(n-4) -172*a(n-17) -136*a(n-18) +363*a(n-19) +212*a(n-20) -386', 'a(n-20)^2 +(-3/4)*a(n-17) +(105/4)*a(n-18) +9*a(n-19) +(-373/4)*a(n-20) -333/4']
A006128: 
MB not reconst
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    

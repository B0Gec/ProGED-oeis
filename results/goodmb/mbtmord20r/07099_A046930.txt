
orders_used: [2, 2, 3, 4, 5, 6, 6, 5, 7, 7, 7, 6, 6, 5, 7, 7, 7, 7, 8, 8, 8, 8, 7, 7, 8, 8, 9, 9, 8, 9, 9, 8, 10, 10, 9, 10, 9, 11, 11, 10, 11, 12, 12]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:7100/10000, seq_id:A046930, order:20 took:
 28.7 seconds, i.e. 0.48 minutes or 0.008 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 2.
eqs_explicit:
['a(n) = 4*a(n-12)']
non_linears:
['a(n)*a(n-1)*a(n-2) -10*a(n)*a(n-1) +5*a(n-1)^2 +(5/2)*a(n)*a(n-2) -10*a(n-1)*a(n-2) +14*a(n) +16*a(n-1) +14*a(n-2) -40', 'a(n-1)^3 +(-9/5)*a(n)*a(n-1) +(-25/2)*a(n-1)^2 +(91/20)*a(n)*a(n-2) +(-9/5)*a(n-1)*a(n-2) -11*a(n) +56*a(n-1) -11*a(n-2) -76/5', 'a(n)*a(n-3)^2 -12*a(n)*a(n-3) -4*a(n-3)^2 +32*a(n) +48*a(n-3) -128', 'a(n-1)*a(n-4)^2 -12*a(n-1)*a(n-4) -4*a(n-4)^2 +32*a(n-1) +48*a(n-4) -128', 'a(n-1)*a(n-5) -4*a(n-1) -4*a(n-5) +16', 'a(n-2)*a(n-6) -4*a(n-2) -4*a(n-6) +16', 'a(n-1)*a(n-6) -4*a(n-1) -4*a(n-6) +16', 'a(n-1)*a(n-5) -4*a(n-1) -4*a(n-5) +16', 'a(n-4)*a(n-7) -4*a(n-4) -4*a(n-7) +16', 'a(n-3)*a(n-7) -4*a(n-3) -4*a(n-7) +16', 'a(n-2)*a(n-7) -4*a(n-2) -4*a(n-7) +16', 'a(n-2)*a(n-6) -4*a(n-2) -4*a(n-6) +16', 'a(n-1)*a(n-6) -4*a(n-1) -4*a(n-6) +16', 'a(n-1)*a(n-5) -4*a(n-1) -4*a(n-5) +16', 'a(n-7)^2 -a(n-1) -10*a(n-2) -5*a(n-3) -2*a(n-4) +3*a(n-5) -6*a(n-6) +13*a(n-7) +58', 'a(n-1)*a(n-7) -8*a(n-1) -40*a(n-2) -20*a(n-3) -8*a(n-4) +12*a(n-5) -24*a(n-6) +68*a(n-7) +232', 'a(n-6)^2 +10*a(n-1) +52*a(n-2) +26*a(n-3) +8*a(n-4) -12*a(n-5) +21*a(n-6) -94*a(n-7) -288', 'a(n-6)*a(n-7) +(8/3)*a(n-1) +(32/3)*a(n-2) +(16/3)*a(n-3) +(4/3)*a(n-4) -2*a(n-5) +3*a(n-6) +(-68/3)*a(n-7) -172/3', 'a(n-7)*a(n-8) -a(n-7) -4*a(n-8) +4', 'a(n-5)*a(n-8) -4*a(n-5) -4*a(n-8) +16', 'a(n-4)*a(n-8) -4*a(n-4) -4*a(n-8) +16', 'a(n-3)*a(n-8) -4*a(n-3) -4*a(n-8) +16', 'a(n-4)*a(n-7) -4*a(n-4) -4*a(n-7) +16', 'a(n-3)*a(n-7) -4*a(n-3) -4*a(n-7) +16', 'a(n-4)^2 -4*a(n-3) -14*a(n-4) +2*a(n-6) -4*a(n-7) +8*a(n-8) +48', 'a(n-5)*a(n-6) +16*a(n-3) +8*a(n-4) -12*a(n-6) +16*a(n-7) -32*a(n-8) -64', 'a(n-8)*a(n-9) -a(n-8) -4*a(n-9) +4', 'a(n-7)*a(n-9) -a(n-7) -4*a(n-9) +4', 'a(n-7)*a(n-8) -a(n-7) -4*a(n-8) +4', 'a(n-6)*a(n-9) -4*a(n-6) -4*a(n-9) +16', 'a(n-5)*a(n-9) -4*a(n-5) -4*a(n-9) +16', 'a(n-5)*a(n-8) -4*a(n-5) -4*a(n-8) +16', 'a(n-9)*a(n-10) -a(n-9) -4*a(n-10) +4', 'a(n-8)*a(n-10) -a(n-8) -4*a(n-10) +4', 'a(n-8)*a(n-9) -a(n-8) -4*a(n-9) +4', 'a(n-6)*a(n-10) -4*a(n-6) -4*a(n-10) +16', 'a(n-6)*a(n-9) -4*a(n-6) -4*a(n-9) +16', 'a(n-10)*a(n-11) -a(n-10) -4*a(n-11) +4', 'a(n-9)*a(n-11) -a(n-9) -4*a(n-11) +4', 'a(n-9)*a(n-10) -a(n-9) -4*a(n-10) +4', 'a(n-2) +a(n-9) -2*a(n-10) +2*a(n-11) -8', 'a(n-6) -4*a(n-12)', 'a(n) -4*a(n-12)']
A046930: 
a(n) = 4*a(n-12)
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    


orders_used: [8, 9, 10, 11, 11, 11, 12, 12, 13, 13, 13, 14, 13, 14, 14, 15, 14, 13, 15, 15, 15, 16, 15, 14, 13, 16, 16, 16, 16, 16, 16, 17, 16, 15, 14, 13, 17, 17, 17, 17, 17, 18, 17, 16, 15, 14, 18, 18, 18, 18, 18, 19, 18, 17, 16, 15, 19, 19]
dasco's acc_1, acc_10: False, False is stored in is_reconst and is_check
n_input: 25
While total time consumed by now, scale:5136/10000, seq_id:A039068, order:20 took:
 41.1 seconds, i.e. 0.69 minutes or 0.011 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 8.
eqs_explicit:
['a(n) = a(n-19) + 32']
non_linears:
['a(n-7)^2 -2*a(n-7)*a(n-8) +a(n-8)^2 -3*a(n-7) +3*a(n-8) +2', 'a(n-8)^2 -2*a(n-8)*a(n-9) +a(n-9)^2 -3*a(n-8) +3*a(n-9) +2', 'a(n-9)^2 -2*a(n-9)*a(n-10) +a(n-10)^2 -3*a(n-9) +3*a(n-10) +2', 'n +(-1/4)*a(n-7) +(-1/4)*a(n-9) +(-1/4)*a(n-11) -9', 'a(n-5)*a(n-11) -a(n-11)^2 -16*a(n-5) +(-7/5)*a(n-6) +(7/5)*a(n-7) +(-7/5)*a(n-8) +(7/5)*a(n-9) +(-7/5)*a(n-10) +(47/5)*a(n-11) +668/5', 'a(n-5)^2 -a(n-11)^2 -53*a(n-5) +(-28/5)*a(n-6) +(28/5)*a(n-7) +(-28/5)*a(n-8) +(28/5)*a(n-9) +(-28/5)*a(n-10) +(213/5)*a(n-11) +1912/5', 'n +(-1/4)*a(n-8) +(-1/4)*a(n-10) +(-1/4)*a(n-12) -10', 'a(n-7) -a(n-8) +a(n-9) -a(n-10) +a(n-11) -a(n-12) -4', 'a(n-7) -a(n-13) -8', 'n +(-1/4)*a(n-9) +(-1/4)*a(n-11) +(-1/4)*a(n-13) -11', 'a(n-8) -a(n-9) +a(n-10) -a(n-11) +a(n-12) -a(n-13) -4', 'a(n-8) -a(n-14) -8', 'a(n-7) -a(n-13) -8', 'n +(-1/4)*a(n-10) +(-1/4)*a(n-12) +(-1/4)*a(n-14) -12', 'a(n-9) -a(n-10) +a(n-11) -a(n-12) +a(n-13) -a(n-14) -4', 'a(n-9) -a(n-15) -8', 'a(n-8) -a(n-14) -8', 'a(n-7) -a(n-13) -8', 'n +(-1/4)*a(n-11) +(-1/4)*a(n-13) +(-1/4)*a(n-15) -13', 'a(n-10) -a(n-11) +a(n-12) -a(n-13) +a(n-14) -a(n-15) -4', 'a(n-13)*a(n-15) -2*a(n-3) -4*a(n-4) +(-16/5)*a(n-5) +(-98/25)*a(n-6) +(19/20)*a(n-11) +(198/25)*a(n-12) +(3/4)*a(n-13) +(-21/4)*a(n-15) +3624/25', 'a(n-10) -a(n-16) -8', 'a(n-9) -a(n-15) -8', 'a(n-8) -a(n-14) -8', 'a(n-7) -a(n-13) -8', 'n +(-1/4)*a(n-12) +(-1/4)*a(n-14) +(-1/4)*a(n-16) -14', 'a(n-11) -a(n-12) +a(n-13) -a(n-14) +a(n-15) -a(n-16) -4', 'a(n-14)*a(n-16) -2*a(n-4) -4*a(n-5) +(-16/5)*a(n-6) +(19/20)*a(n-12) +4*a(n-13) +(3/4)*a(n-14) +(-21/4)*a(n-16) +568/5', 'a(n-12)*a(n-14) -2*a(n-4) -4*a(n-5) +(-16/5)*a(n-6) +(-121/20)*a(n-12) +2*a(n-13) +(-13/4)*a(n-14) -2*a(n-15) +(15/4)*a(n-16) +808/5', 'a(n-6)*a(n-14) -2*a(n-4) -4*a(n-5) +(-86/5)*a(n-6) +(159/20)*a(n-12) +2*a(n-13) +(-45/4)*a(n-14) -2*a(n-15) +(15/4)*a(n-16) +1368/5', 'a(n-13)^2 -4*a(n-4) +(-24/5)*a(n-5) +(-32/25)*a(n-6) +(29/50)*a(n-12) +(-49/5)*a(n-13) +(33/10)*a(n-14) +(-14/5)*a(n-15) +(53/10)*a(n-16) +4246/25', 'a(n-11) -a(n-17) -8', 'a(n-10) -a(n-16) -8', 'a(n-9) -a(n-15) -8', 'a(n-8) -a(n-14) -8', 'a(n-7) -a(n-13) -8', 'n +(-1/4)*a(n-13) +(-1/4)*a(n-15) +(-1/4)*a(n-17) -15', 'a(n-12) -a(n-13) +a(n-14) -a(n-15) +a(n-16) -a(n-17) -4', 'a(n-15)*a(n-17) -2*a(n-5) -4*a(n-6) +(-9/4)*a(n-13) +4*a(n-14) +(3/4)*a(n-15) +(-21/4)*a(n-17) +88', 'a(n-13)*a(n-15) -2*a(n-5) -4*a(n-6) +(-37/4)*a(n-13) +2*a(n-14) +(-13/4)*a(n-15) -2*a(n-16) +(15/4)*a(n-17) +136', 'a(n-14)^2 -4*a(n-5) +(-24/5)*a(n-6) +(-7/10)*a(n-13) +(-49/5)*a(n-14) +(33/10)*a(n-15) +(-14/5)*a(n-16) +(53/10)*a(n-17) +798/5', 'a(n-12) -a(n-18) -8', 'a(n-11) -a(n-17) -8', 'a(n-10) -a(n-16) -8', 'a(n-9) -a(n-15) -8', 'a(n-8) -a(n-14) -8', 'n +(-1/4)*a(n-14) +(-1/4)*a(n-16) +(-1/4)*a(n-18) -16', 'a(n-13) -a(n-14) +a(n-15) -a(n-16) +a(n-17) -a(n-18) -4', 'a(n-7) -a(n-14) +a(n-15) -a(n-16) +a(n-17) -a(n-18) -12', 'a(n-17)*a(n-18) +(-8/5)*a(n-6) -6*a(n-14) +6*a(n-15) +2*a(n-17) +(-42/5)*a(n-18) +178/5', 'a(n-6)*a(n-17) +(-53/5)*a(n-6) -6*a(n-14) +6*a(n-15) -14*a(n-17) +(3/5)*a(n-18) +898/5', 'a(n-13) -a(n-19) -8', 'a(n-12) -a(n-18) -8', 'a(n-11) -a(n-17) -8', 'a(n-10) -a(n-16) -8', 'a(n-9) -a(n-15) -8', 'a(n-7) -a(n-19) -16', 'a(n) -a(n-19) -32']
A039068: 
a(n) = a(n-19) + 32
truth: 
None

False  -  checked against website ground truth.     
False  -  "manual" check if equation is correct.    


orders_used: [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4, 4, 3, 4, 4, 4, 4, 4, 5, 5, 5, 4, 3, 5, 5, 4, 4, 3, 6, 6, 6, 5, 5, 5, 4, 6, 6, 5, 7, 7, 7, 6, 6, 6, 5, 5, 5, 4, 8, 8, 8, 7, 7, 7, 6, 6, 6, 5, 9, 9, 9, 9, 8, 8, 8, 7, 7, 6, 10, 10, 10, 8, 8, 7, 10, 8, 7, 11, 11, 8, 11, 11, 8, 7, 12, 12, 12]
dasco's acc_1, acc_10: True, False is stored in is_reconst and is_check
n_input: 15
While total time consumed by now, scale:3838/10000, seq_id:A029431, order:20 took:
 54.9 seconds, i.e. 0.92 minutes or 0.015 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: False, SINDy_default: True, DEBUG: False, OEISformer: True
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: n, max_order 20, max_degree: 3, threshold: 0.1, 
n_more_terms: 10
Library: n, max_order 20, threshold: 0.1
  MB:  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 2.
eqs_explicit:
['a(n) = 2*a(n-12)']
non_linears:
['a(n)*n*a(n-2) -12*a(n)*a(n-2)', 'a(n)^2 -a(n)*a(n-2) -a(n)', 'n*a(n-1)*a(n-2) +(1/2)*a(n)*a(n-2) -13*a(n-1)*a(n-2)', 'a(n-1)^2 +(1/2)*a(n)*a(n-2) -a(n-1)*a(n-2) -a(n-1)', 'a(n)*a(n-1) +(-1/4)*n*a(n-1) +(-9/8)*a(n)*a(n-2) +(3/2)*a(n-1)*a(n-2) +(7/4)*a(n-1)', 'n^2*a(n-1) -18*n*a(n-1) +(7/2)*a(n)*a(n-2) -12*a(n-1)*a(n-2) +77*a(n-1)', 'a(n)*n^2 -16*a(n)*n +(-5/4)*n*a(n-1) +(-101/8)*a(n)*a(n-2) +(15/2)*a(n-1)*a(n-2) +60*a(n) +(35/4)*a(n-1)', 'a(n)*a(n-3)', 'a(n-3)^2 -a(n-3)', 'a(n-1)*a(n-2)*a(n-3) -a(n-1)*a(n-3)', 'n*a(n-1)*a(n-3) -13*a(n-1)*a(n-3)', 'a(n)*a(n-2) -2*a(n-1)*a(n-2) +2*a(n-1)*a(n-3)', 'a(n-1)^2 -a(n-1)*a(n-3) -a(n-1)', 'a(n)^2 -2*a(n-1)*a(n-2) +2*a(n-1)*a(n-3) -a(n)', 'a(n-2)^2 +(1/2)*a(n-1)*a(n-3) -a(n-2)*a(n-3) -a(n-2)', 'n*a(n-2) -4*a(n-1)*a(n-2) +(9/2)*a(n-1)*a(n-3) -6*a(n-2)*a(n-3) -8*a(n-2)', 'n^2*a(n-1) -18*n*a(n-1) -5*a(n-1)*a(n-2) -7*a(n-1)*a(n-3) +77*a(n-1)', 'a(n-1)*a(n-4)', 'a(n)*a(n-3)', 'a(n-4)^2 -a(n-4)', 'a(n-2)*a(n-4) -2*a(n-3)*a(n-4)', 'a(n-3)^2 -a(n-3)', 'a(n-1)*a(n-3) -2*a(n-2)*a(n-3) +4*a(n-3)*a(n-4)', 'a(n-2)^2 -2*a(n-3)*a(n-4) -a(n-2)', 'n*a(n-3) -4*a(n-2)*a(n-3) +3*a(n-3)*a(n-4) -9*a(n-3)', 'a(n)*a(n-2) -2*a(n-1)*a(n-2) +4*a(n-2)*a(n-3) -8*a(n-3)*a(n-4)', 'a(n-1)^2 -2*a(n-2)*a(n-3) +4*a(n-3)*a(n-4) -a(n-1)', 'a(n-4)*a(n-5)', 'a(n-3)*a(n-5)', 'a(n-2)*a(n-5)', 'a(n-1)*a(n-4)', 'a(n)*a(n-3)', 'a(n-5)^2 -a(n-5)', 'a(n)*a(n-5) -a(n-1)*a(n-5)', 'a(n-4)^2 -a(n-4)', 'a(n-2)*a(n-4) -2*a(n-3)*a(n-4)', 'a(n-3)^2 -a(n-3)', 'a(n-5)*a(n-6)', 'a(n-4)*a(n-6)', 'a(n-3)*a(n-6)', 'a(n-4)*a(n-5)', 'a(n-3)*a(n-5)', 'a(n-2)*a(n-5)', 'a(n-1)*a(n-4)', 'a(n-6)^2 -a(n-6)', 'a(n-1)*a(n-6) -a(n-2)*a(n-6)', 'a(n-5)^2 -a(n-5)', 'a(n-6)*a(n-7)', 'a(n-5)*a(n-7)', 'a(n-4)*a(n-7)', 'a(n-5)*a(n-6)', 'a(n-4)*a(n-6)', 'a(n-3)*a(n-6)', 'a(n-4)*a(n-5)', 'a(n-3)*a(n-5)', 'a(n-2)*a(n-5)', 'a(n-1)*a(n-4)', 'a(n-7)*a(n-8)', 'a(n-6)*a(n-8)', 'a(n-5)*a(n-8)', 'a(n-6)*a(n-7)', 'a(n-5)*a(n-7)', 'a(n-4)*a(n-7)', 'a(n-5)*a(n-6)', 'a(n-4)*a(n-6)', 'a(n-3)*a(n-6)', 'a(n-4)*a(n-5)', 'a(n-8)*a(n-9)', 'a(n-7)*a(n-9)', 'a(n-6)*a(n-9)', 'a(n-5)*a(n-9)', 'a(n-7)*a(n-8)', 'a(n-6)*a(n-8)', 'a(n-5)*a(n-8)', 'a(n-6)*a(n-7)', 'a(n-5)*a(n-7)', 'a(n-5)*a(n-6)', 'a(n-8)*a(n-10)', 'a(n-7)*a(n-10)', 'a(n-6)*a(n-10)', 'a(n-7)*a(n-8)', 'a(n-6)*a(n-8)', 'a(n-6)*a(n-7)', 'a(n-10)^2 -a(n-10)', 'a(n-8)^2 -a(n-8)', 'a(n-7)^2 -a(n-7)', 'a(n-8)*a(n-11)', 'a(n-7)*a(n-11)', 'a(n-7)*a(n-8)', 'a(n-5) -a(n-11)', 'a(n-11)^2 -a(n-11)', 'a(n-8)^2 -a(n-8)', 'a(n-7)^2 -a(n-7)', 'a(n-8)*a(n-12)', 'a(n-6) -a(n-12)', 'a(n) -2*a(n-12)']
A029431: 
a(n) = 2*a(n-12)
truth: 
None

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    

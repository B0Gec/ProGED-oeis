
orders_used: [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
While total time consumed by now, scale:14832/27236, seq_id:A135639, order:20 took:
 45.8 seconds, i.e. 0.76 minutes or 0.013 hours.
CORELIST: False, METHOD: MB, SINDy: False (True also in case of MAVI), GROUND_TRUTH: True, SINDy_default: True, DEBUG: False, OEISformer: False
n_of_terms_ed: 200, N_OF_TERMS_ED: 200
Library: non, max_order 20, max_degree: 1, threshold: 0.1, 
n_more_terms: 10
Library: non, max_order 20, threshold: 0.1MB: 
  n_more_terms: 10 MAX_BITSIZE: 50

by degree: unknown_mb and order: 1.
non_linears:
['a(n) -a(n-1) -839', 'a(n-1) -a(n-2) -839', 'a(n) -a(n-2) -1678', 'a(n-2) -a(n-3) -839', 'a(n-1) -a(n-3) -1678', 'a(n) -a(n-3) -2517', 'a(n-3) -a(n-4) -839', 'a(n-2) -a(n-4) -1678', 'a(n-1) -a(n-4) -2517', 'a(n) -a(n-4) -3356', 'a(n-4) -a(n-5) -839', 'a(n-3) -a(n-5) -1678', 'a(n-2) -a(n-5) -2517', 'a(n-1) -a(n-5) -3356', 'a(n) -a(n-5) -4195', 'a(n-5) -a(n-6) -839', 'a(n-4) -a(n-6) -1678', 'a(n-3) -a(n-6) -2517', 'a(n-2) -a(n-6) -3356', 'a(n-1) -a(n-6) -4195', 'a(n) -a(n-6) -5034', 'a(n-6) -a(n-7) -839', 'a(n-5) -a(n-7) -1678', 'a(n-4) -a(n-7) -2517', 'a(n-3) -a(n-7) -3356', 'a(n-2) -a(n-7) -4195', 'a(n-1) -a(n-7) -5034', 'a(n) -a(n-7) -5873', 'a(n-7) -a(n-8) -839', 'a(n-6) -a(n-8) -1678', 'a(n-5) -a(n-8) -2517', 'a(n-4) -a(n-8) -3356', 'a(n-3) -a(n-8) -4195', 'a(n-2) -a(n-8) -5034', 'a(n-1) -a(n-8) -5873', 'a(n) -a(n-8) -6712', 'a(n-8) -a(n-9) -839', 'a(n-7) -a(n-9) -1678', 'a(n-6) -a(n-9) -2517', 'a(n-5) -a(n-9) -3356', 'a(n-4) -a(n-9) -4195', 'a(n-3) -a(n-9) -5034', 'a(n-2) -a(n-9) -5873', 'a(n-1) -a(n-9) -6712', 'a(n) -a(n-9) -7551', 'a(n-9) -a(n-10) -839', 'a(n-8) -a(n-10) -1678', 'a(n-7) -a(n-10) -2517', 'a(n-6) -a(n-10) -3356', 'a(n-5) -a(n-10) -4195', 'a(n-4) -a(n-10) -5034', 'a(n-3) -a(n-10) -5873', 'a(n-2) -a(n-10) -6712', 'a(n-1) -a(n-10) -7551', 'a(n) -a(n-10) -8390', 'a(n-10) -a(n-11) -839', 'a(n-9) -a(n-11) -1678', 'a(n-8) -a(n-11) -2517', 'a(n-7) -a(n-11) -3356', 'a(n-6) -a(n-11) -4195', 'a(n-5) -a(n-11) -5034', 'a(n-4) -a(n-11) -5873', 'a(n-3) -a(n-11) -6712', 'a(n-2) -a(n-11) -7551', 'a(n-1) -a(n-11) -8390', 'a(n-11) -a(n-12) -839', 'a(n-10) -a(n-12) -1678', 'a(n-9) -a(n-12) -2517', 'a(n-8) -a(n-12) -3356', 'a(n-7) -a(n-12) -4195', 'a(n-6) -a(n-12) -5034', 'a(n-5) -a(n-12) -5873', 'a(n-4) -a(n-12) -6712', 'a(n-3) -a(n-12) -7551', 'a(n-2) -a(n-12) -8390', 'a(n-12) -a(n-13) -839', 'a(n-11) -a(n-13) -1678', 'a(n-10) -a(n-13) -2517', 'a(n-9) -a(n-13) -3356', 'a(n-8) -a(n-13) -4195', 'a(n-7) -a(n-13) -5034', 'a(n-6) -a(n-13) -5873', 'a(n-5) -a(n-13) -6712', 'a(n-4) -a(n-13) -7551', 'a(n-3) -a(n-13) -8390', 'a(n-13) -a(n-14) -839', 'a(n-12) -a(n-14) -1678', 'a(n-11) -a(n-14) -2517', 'a(n-10) -a(n-14) -3356', 'a(n-9) -a(n-14) -4195', 'a(n-8) -a(n-14) -5034', 'a(n-7) -a(n-14) -5873', 'a(n-6) -a(n-14) -6712', 'a(n-5) -a(n-14) -7551', 'a(n-4) -a(n-14) -8390', 'a(n-14) -a(n-15) -839', 'a(n-13) -a(n-15) -1678', 'a(n-12) -a(n-15) -2517', 'a(n-11) -a(n-15) -3356', 'a(n-10) -a(n-15) -4195', 'a(n-9) -a(n-15) -5034', 'a(n-8) -a(n-15) -5873', 'a(n-7) -a(n-15) -6712', 'a(n-6) -a(n-15) -7551', 'a(n-5) -a(n-15) -8390', 'a(n-15) -a(n-16) -839', 'a(n-14) -a(n-16) -1678', 'a(n-13) -a(n-16) -2517', 'a(n-12) -a(n-16) -3356', 'a(n-11) -a(n-16) -4195', 'a(n-10) -a(n-16) -5034', 'a(n-9) -a(n-16) -5873', 'a(n-8) -a(n-16) -6712', 'a(n-7) -a(n-16) -7551', 'a(n-6) -a(n-16) -8390', 'a(n-16) -a(n-17) -839', 'a(n-15) -a(n-17) -1678', 'a(n-14) -a(n-17) -2517', 'a(n-13) -a(n-17) -3356', 'a(n-12) -a(n-17) -4195', 'a(n-11) -a(n-17) -5034', 'a(n-10) -a(n-17) -5873', 'a(n-9) -a(n-17) -6712', 'a(n-8) -a(n-17) -7551', 'a(n-7) -a(n-17) -8390', 'a(n-17) -a(n-18) -839', 'a(n-16) -a(n-18) -1678', 'a(n-15) -a(n-18) -2517', 'a(n-14) -a(n-18) -3356', 'a(n-13) -a(n-18) -4195', 'a(n-12) -a(n-18) -5034', 'a(n-11) -a(n-18) -5873', 'a(n-10) -a(n-18) -6712', 'a(n-9) -a(n-18) -7551', 'a(n-8) -a(n-18) -8390', 'a(n-18) -a(n-19) -839', 'a(n-17) -a(n-19) -1678', 'a(n-16) -a(n-19) -2517', 'a(n-15) -a(n-19) -3356', 'a(n-14) -a(n-19) -4195', 'a(n-13) -a(n-19) -5034', 'a(n-12) -a(n-19) -5873', 'a(n-11) -a(n-19) -6712', 'a(n-10) -a(n-19) -7551', 'a(n-9) -a(n-19) -8390', 'a(n-19) -a(n-20) -839', 'a(n-18) -a(n-20) -1678', 'a(n-17) -a(n-20) -2517', 'a(n-16) -a(n-20) -3356', 'a(n-15) -a(n-20) -4195', 'a(n-14) -a(n-20) -5034', 'a(n-13) -a(n-20) -5873', 'a(n-12) -a(n-20) -6712', 'a(n-11) -a(n-20) -7551', 'a(n-10) -a(n-20) -8390']
A135639: 
MB not reconst
truth: 
a(n) = 2*a(n - 1) + -1*a(n - 2),  
a(0) = 0, a(1) = 839

False  -  checked against website ground truth.     
True  -  "manual" check if equation is correct.    
